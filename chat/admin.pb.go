// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: admin.proto

package msg

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type PushProviderType int32

const (
	PushProviderUnknown  PushProviderType = 0
	PushProviderFirebase PushProviderType = 1
	PushProviderApple    PushProviderType = 2
	PushProviderPushKit  PushProviderType = 3
)

var PushProviderType_name = map[int32]string{
	0: "PushProviderUnknown",
	1: "PushProviderFirebase",
	2: "PushProviderApple",
	3: "PushProviderPushKit",
}

var PushProviderType_value = map[string]int32{
	"PushProviderUnknown":  0,
	"PushProviderFirebase": 1,
	"PushProviderApple":    2,
	"PushProviderPushKit":  3,
}

func (x PushProviderType) Enum() *PushProviderType {
	p := new(PushProviderType)
	*p = x
	return p
}

func (x PushProviderType) String() string {
	return proto.EnumName(PushProviderType_name, int32(x))
}

func (x *PushProviderType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PushProviderType_value, data, "PushProviderType")
	if err != nil {
		return err
	}
	*x = PushProviderType(value)
	return nil
}

func (PushProviderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{0}
}

// WelcomeMessage
type WelcomeMessage struct {
	Lang     string `protobuf:"bytes,2,req,name=Lang" json:"Lang"`
	Template string `protobuf:"bytes,3,req,name=Template" json:"Template"`
}

func (m *WelcomeMessage) Reset()         { *m = WelcomeMessage{} }
func (m *WelcomeMessage) String() string { return proto.CompactTextString(m) }
func (*WelcomeMessage) ProtoMessage()    {}
func (*WelcomeMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{0}
}
func (m *WelcomeMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WelcomeMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WelcomeMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WelcomeMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WelcomeMessage.Merge(m, src)
}
func (m *WelcomeMessage) XXX_Size() int {
	return m.Size()
}
func (m *WelcomeMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_WelcomeMessage.DiscardUnknown(m)
}

var xxx_messageInfo_WelcomeMessage proto.InternalMessageInfo

func (m *WelcomeMessage) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *WelcomeMessage) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

// PushProvider
type PushProvider struct {
	Name        string           `protobuf:"bytes,1,req,name=Name" json:"Name"`
	Type        PushProviderType `protobuf:"varint,2,req,name=Type,enum=msg.PushProviderType" json:"Type"`
	TestMode    bool             `protobuf:"varint,3,req,name=TestMode" json:"TestMode"`
	Credentials []byte           `protobuf:"bytes,4,opt,name=Credentials" json:"Credentials"`
	KeyID       string           `protobuf:"bytes,5,opt,name=KeyID" json:"KeyID"`
	TeamID      string           `protobuf:"bytes,6,opt,name=TeamID" json:"TeamID"`
	Topic       string           `protobuf:"bytes,7,opt,name=Topic" json:"Topic"`
}

func (m *PushProvider) Reset()         { *m = PushProvider{} }
func (m *PushProvider) String() string { return proto.CompactTextString(m) }
func (*PushProvider) ProtoMessage()    {}
func (*PushProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{1}
}
func (m *PushProvider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushProvider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushProvider.Merge(m, src)
}
func (m *PushProvider) XXX_Size() int {
	return m.Size()
}
func (m *PushProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_PushProvider.DiscardUnknown(m)
}

var xxx_messageInfo_PushProvider proto.InternalMessageInfo

func (m *PushProvider) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PushProvider) GetType() PushProviderType {
	if m != nil {
		return m.Type
	}
	return PushProviderUnknown
}

func (m *PushProvider) GetTestMode() bool {
	if m != nil {
		return m.TestMode
	}
	return false
}

func (m *PushProvider) GetCredentials() []byte {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *PushProvider) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *PushProvider) GetTeamID() string {
	if m != nil {
		return m.TeamID
	}
	return ""
}

func (m *PushProvider) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

// AppUpdate
type Version struct {
	Vendor         string   `protobuf:"bytes,1,req,name=Vendor" json:"Vendor"`
	Stage          string   `protobuf:"bytes,2,req,name=Stage" json:"Stage"`
	OS             string   `protobuf:"bytes,3,req,name=OS" json:"OS"`
	MinVersion     string   `protobuf:"bytes,4,req,name=MinVersion" json:"MinVersion"`
	CurrentVersion string   `protobuf:"bytes,5,req,name=CurrentVersion" json:"CurrentVersion"`
	ForcedVersions []string `protobuf:"bytes,6,rep,name=ForcedVersions" json:"ForcedVersions,omitempty"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{2}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Version.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return m.Size()
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetVendor() string {
	if m != nil {
		return m.Vendor
	}
	return ""
}

func (m *Version) GetStage() string {
	if m != nil {
		return m.Stage
	}
	return ""
}

func (m *Version) GetOS() string {
	if m != nil {
		return m.OS
	}
	return ""
}

func (m *Version) GetMinVersion() string {
	if m != nil {
		return m.MinVersion
	}
	return ""
}

func (m *Version) GetCurrentVersion() string {
	if m != nil {
		return m.CurrentVersion
	}
	return ""
}

func (m *Version) GetForcedVersions() []string {
	if m != nil {
		return m.ForcedVersions
	}
	return nil
}

func init() {
	proto.RegisterEnum("msg.PushProviderType", PushProviderType_name, PushProviderType_value)
	proto.RegisterType((*WelcomeMessage)(nil), "msg.WelcomeMessage")
	proto.RegisterType((*PushProvider)(nil), "msg.PushProvider")
	proto.RegisterType((*Version)(nil), "msg.Version")
}

func init() { proto.RegisterFile("admin.proto", fileDescriptor_73a7fc70dcc2027c) }

var fileDescriptor_73a7fc70dcc2027c = []byte{
	// 438 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0x87, 0xe3, 0x34, 0xed, 0xb6, 0xb3, 0xa9, 0x0a, 0x66, 0x13, 0xd6, 0x34, 0x85, 0xa8, 0x42,
	0x53, 0x85, 0xa0, 0x95, 0x78, 0x03, 0xb6, 0x69, 0xd2, 0xb4, 0x95, 0x4d, 0x6b, 0x19, 0xd7, 0x6e,
	0x73, 0xc8, 0x2c, 0x1a, 0x3b, 0xb2, 0x13, 0xd0, 0xde, 0x82, 0xc7, 0xda, 0x65, 0x6f, 0x90, 0xb8,
	0x42, 0xd0, 0x3e, 0x05, 0x77, 0x28, 0x7f, 0x56, 0xdc, 0xdc, 0x1d, 0x7f, 0xdf, 0x39, 0xbf, 0x93,
	0xd8, 0xb0, 0xcb, 0xa3, 0x44, 0xc8, 0x41, 0xaa, 0x55, 0xa6, 0x68, 0x2b, 0x31, 0xf1, 0xe1, 0xdb,
	0x58, 0x64, 0xf7, 0xf9, 0x74, 0x30, 0x53, 0xc9, 0x30, 0x56, 0xb1, 0x1a, 0x96, 0x6e, 0x9a, 0x7f,
	0x2e, 0x4f, 0xe5, 0xa1, 0xac, 0xaa, 0x99, 0xde, 0x15, 0x74, 0x3f, 0xe1, 0x7c, 0xa6, 0x12, 0x1c,
	0xa1, 0x31, 0x3c, 0x46, 0xca, 0xc0, 0xbb, 0xe2, 0x32, 0x66, 0x6e, 0xe8, 0xf6, 0x77, 0x4e, 0xbc,
	0xc7, 0x5f, 0x2f, 0x9d, 0xdb, 0x92, 0xd0, 0x10, 0xb6, 0x27, 0x98, 0xa4, 0x73, 0x9e, 0x21, 0x6b,
	0x59, 0x76, 0x4d, 0x7b, 0x7f, 0x09, 0xec, 0xdd, 0xe4, 0xe6, 0xfe, 0x46, 0xab, 0xaf, 0x22, 0x42,
	0x5d, 0x84, 0x7d, 0xe0, 0x09, 0x32, 0x62, 0x87, 0x15, 0x84, 0x0e, 0xc1, 0x9b, 0x3c, 0xa4, 0x58,
	0xae, 0xe9, 0xbe, 0x3b, 0x18, 0x24, 0x26, 0x1e, 0xd8, 0xa3, 0x85, 0x7c, 0x1a, 0x28, 0xea, 0x6a,
	0xbb, 0xc9, 0x46, 0x2a, 0xaa, 0xb6, 0x6f, 0xff, 0xdf, 0x5e, 0x51, 0x7a, 0x0c, 0xbb, 0xa7, 0x1a,
	0x23, 0x94, 0x99, 0xe0, 0x73, 0xc3, 0xbc, 0x90, 0xf4, 0xf7, 0xea, 0x26, 0x5b, 0xd0, 0x43, 0x68,
	0x5f, 0xe2, 0xc3, 0xc5, 0x19, 0x6b, 0x87, 0x64, 0xfd, 0x55, 0x15, 0xa2, 0x47, 0xd0, 0x99, 0x20,
	0x4f, 0x2e, 0xce, 0x58, 0xc7, 0x92, 0x35, 0x2b, 0x26, 0x27, 0x2a, 0x15, 0x33, 0xb6, 0x65, 0x4f,
	0x96, 0xa8, 0xf7, 0x83, 0xc0, 0xd6, 0x1d, 0x6a, 0x23, 0x94, 0x2c, 0x52, 0xee, 0x50, 0x46, 0x4a,
	0x6f, 0xfc, 0x78, 0xcd, 0x8a, 0x94, 0x71, 0xc6, 0x63, 0xdc, 0xb8, 0xe2, 0x0a, 0xd1, 0x7d, 0x70,
	0xaf, 0xc7, 0x1b, 0xb7, 0xeb, 0x5e, 0x8f, 0xe9, 0x2b, 0x80, 0x91, 0x90, 0x75, 0x3a, 0xf3, 0x2c,
	0x6b, 0x71, 0xfa, 0x06, 0xba, 0xa7, 0xb9, 0xd6, 0x28, 0xb3, 0xa7, 0xce, 0xb6, 0xd5, 0xd9, 0x70,
	0xf4, 0x18, 0xba, 0xe7, 0x4a, 0xcf, 0x30, 0xaa, 0x81, 0x61, 0x9d, 0xb0, 0xd5, 0xdf, 0xb9, 0x6d,
	0xd0, 0xd7, 0x39, 0xf8, 0xcd, 0x77, 0xa1, 0x2f, 0xe0, 0xb9, 0xcd, 0x3e, 0xca, 0x2f, 0x52, 0x7d,
	0x93, 0xbe, 0x43, 0x19, 0xec, 0xdb, 0xe2, 0x5c, 0x68, 0x9c, 0x72, 0x83, 0x3e, 0xa1, 0x07, 0xf0,
	0xcc, 0x36, 0xef, 0xd3, 0x74, 0x8e, 0xbe, 0xdb, 0x4c, 0x2a, 0xea, 0x4b, 0x91, 0xf9, 0xad, 0x93,
	0xa3, 0xc5, 0x9f, 0xc0, 0x79, 0x5c, 0x06, 0x64, 0xb1, 0x0c, 0xc8, 0xef, 0x65, 0x40, 0xbe, 0xaf,
	0x02, 0x67, 0xb1, 0x0a, 0x9c, 0x9f, 0xab, 0xc0, 0xf9, 0x17, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x07,
	0x9b, 0x6f, 0xf8, 0x02, 0x00, 0x00,
}

func (m *WelcomeMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WelcomeMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WelcomeMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Template)
	copy(dAtA[i:], m.Template)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Template)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.Lang)
	copy(dAtA[i:], m.Lang)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Lang)))
	i--
	dAtA[i] = 0x12
	return len(dAtA) - i, nil
}

func (m *PushProvider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushProvider) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PushProvider) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Topic)
	copy(dAtA[i:], m.Topic)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Topic)))
	i--
	dAtA[i] = 0x3a
	i -= len(m.TeamID)
	copy(dAtA[i:], m.TeamID)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.TeamID)))
	i--
	dAtA[i] = 0x32
	i -= len(m.KeyID)
	copy(dAtA[i:], m.KeyID)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.KeyID)))
	i--
	dAtA[i] = 0x2a
	if m.Credentials != nil {
		i -= len(m.Credentials)
		copy(dAtA[i:], m.Credentials)
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.Credentials)))
		i--
		dAtA[i] = 0x22
	}
	i--
	if m.TestMode {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x18
	i = encodeVarintAdmin(dAtA, i, uint64(m.Type))
	i--
	dAtA[i] = 0x10
	i -= len(m.Name)
	copy(dAtA[i:], m.Name)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Name)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *Version) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Version) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Version) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ForcedVersions) > 0 {
		for iNdEx := len(m.ForcedVersions) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ForcedVersions[iNdEx])
			copy(dAtA[i:], m.ForcedVersions[iNdEx])
			i = encodeVarintAdmin(dAtA, i, uint64(len(m.ForcedVersions[iNdEx])))
			i--
			dAtA[i] = 0x32
		}
	}
	i -= len(m.CurrentVersion)
	copy(dAtA[i:], m.CurrentVersion)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.CurrentVersion)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.MinVersion)
	copy(dAtA[i:], m.MinVersion)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.MinVersion)))
	i--
	dAtA[i] = 0x22
	i -= len(m.OS)
	copy(dAtA[i:], m.OS)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.OS)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.Stage)
	copy(dAtA[i:], m.Stage)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Stage)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Vendor)
	copy(dAtA[i:], m.Vendor)
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Vendor)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintAdmin(dAtA []byte, offset int, v uint64) int {
	offset -= sovAdmin(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *WelcomeMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Lang)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.Template)
	n += 1 + l + sovAdmin(uint64(l))
	return n
}

func (m *PushProvider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	n += 1 + l + sovAdmin(uint64(l))
	n += 1 + sovAdmin(uint64(m.Type))
	n += 2
	if m.Credentials != nil {
		l = len(m.Credentials)
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.KeyID)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.TeamID)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.Topic)
	n += 1 + l + sovAdmin(uint64(l))
	return n
}

func (m *Version) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Vendor)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.Stage)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.OS)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.MinVersion)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.CurrentVersion)
	n += 1 + l + sovAdmin(uint64(l))
	if len(m.ForcedVersions) > 0 {
		for _, s := range m.ForcedVersions {
			l = len(s)
			n += 1 + l + sovAdmin(uint64(l))
		}
	}
	return n
}

func sovAdmin(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozAdmin(x uint64) (n int) {
	return sovAdmin(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *WelcomeMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WelcomeMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WelcomeMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Lang = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Template = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Lang")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Template")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushProvider) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushProvider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushProvider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= PushProviderType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TestMode", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TestMode = bool(v != 0)
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Credentials = append(m.Credentials[:0], dAtA[iNdEx:postIndex]...)
			if m.Credentials == nil {
				m.Credentials = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KeyID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeamID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TeamID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Name")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Type")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("TestMode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Version) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Version: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Version: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vendor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vendor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OS", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OS = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrentVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CurrentVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForcedVersions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForcedVersions = append(m.ForcedVersions, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Vendor")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Stage")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("OS")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("MinVersion")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("CurrentVersion")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAdmin(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAdmin
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAdmin
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAdmin
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthAdmin        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAdmin          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupAdmin = fmt.Errorf("proto: unexpected end of group")
)
