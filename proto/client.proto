syntax = "proto3";
package msg;
import "core.types.proto";
import "chat.messages.medias.proto";

option go_package = '.;msg';

// ClientSendMessageMedia
// @Function
message ClientSendMessageMedia {
    InputPeer Peer = 1;
    InputMediaType MediaType = 2;
    string Caption = 3;
    string FileName = 4;
    string FilePath = 5;
    string ThumbFilePath = 6;
    string FileMIME = 7;
    string ThumbMIME = 8;
    int64 ReplyTo = 9;
    bool ClearDraft = 10;
    repeated DocumentAttribute Attributes = 11;
    string FileUploadID = 12;
    string ThumbUploadID = 13;
    int64 FileID = 14;
    int64 ThumbID = 15;
    int32 FileTotalParts = 16;
    repeated MessageEntity Entities = 17;
    bytes TinyThumb = 18;
}

// ClientGlobalSearch
// @Function
// @Return: ClientSearchResult
message ClientGlobalSearch {
    string Text = 1;
    repeated int32 LabelIDs = 2;
    InputPeer Peer = 3;
    int32 Limit = 4;
    int64 SenderID = 5;
}

// ClientContactSearch
// @Function
// @Return: ClientSearchResult
message ClientContactSearch {
    string Text = 1;
}

// ClientGetCachedMedia
// @Function
// @Return: ClientCachedMedia
message ClientGetCachedMedia {
}

// ClientClearCachedMedia
// @Function
// @Return: Bool
message ClientClearCachedMedia {
    InputPeer Peer = 1;
    repeated ClientMediaType MediaTypes = 2;
}

// ClientGetLastBotKeyboard
// @Return: UserMessage
message ClientGetLastBotKeyboard {
    InputPeer Peer = 1;
}

// ClientGetMediaHistory
// @Function
// @Return: MessagesMany
message ClientGetMediaHistory {
    repeated ClientMediaType MediaType = 1;
    int64 MaxID = 2;
    int64 MinID = 3;
    int32 Limit = 4;
    InputPeer Peer = 5;
}

// ClientGetAllDownloadedMedia
// @Function
// @Return: MessagesMany
message ClientGetAllDownloadedMedia {
    ClientMediaType MediaType = 1;
}

// ClientGetRecentSearch
// @Function
// @Return: RecentSearchMany
message ClientGetRecentSearch {
    int32 Limit = 1;
}

// ClientPutRecentSearch
// @Function
// @Return: Bool
message ClientPutRecentSearch {
    InputPeer Peer = 1;
}

// ClientPutRecentSearch
// @Function
// @Return: Bool
message ClientRemoveRecentSearch {
    InputPeer Peer = 1;
}

// ClientRemoveAllRecentSearches
// @Function
// @Return: Bool
message ClientRemoveAllRecentSearches {
    bool Extra = 1;
}

// ClientGetSavedGifs
// @Function
// @Return: ClientFilesMany
message ClientGetSavedGifs {
}

// ClientGetTeamCounters
// @Function
// @Return: ClientTeamCounters
message ClientGetTeamCounters {
    InputTeam Team = 1;
    bool WithMutes = 2;
}

// ClientPendingMessage
message ClientPendingMessage {
    int64 ID = 1;
    int64 RequestID = 2;
    int64 PeerID = 3;
    int32 PeerType = 4;
    fixed64 AccessHash = 5;
    int64 CreatedOn = 6;
    int64 ReplyTo = 7;
    string Body = 8;
    int64 SenderID = 9;
    repeated MessageEntity Entities = 10;
    InputMediaType MediaType = 11;
    bytes Media = 12;
    bool ClearDraft = 13;
    string FileUploadID = 14;
    string ThumbUploadID = 15;
    int64 FileID = 16;
    int64 ThumbID = 17;
    bytes Sha256 = 18;
    FileLocation ServerFile = 19;
    int64 TeamID = 20;
    uint64 TeamAccessHash = 21;
    bytes TinyThumb = 22;
}

// ClientSearchResult
message ClientSearchResult {
    repeated UserMessage Messages = 1;
    repeated User Users = 2;
    repeated Group Groups = 3;
    repeated User MatchedUsers = 4;
    repeated Group MatchedGroups = 5;
}

// ClientFileType
enum ClientFileType {
    Unknown = 0;
    Message = 1;
    AccountProfilePhoto = 2;
    GroupProfilePhoto = 3;
    Sticker = 4;
    Thumbnail = 5;
    Wallpaper = 6;
    Gif = 7;
}

// ClientFilesMany
message ClientFilesMany {
    repeated ClientFile Gifs = 1;
    int32 Total = 2;
}

// ClientFile
message ClientFile {
    int32 ClusterID = 1;
    int64 FileID = 2;
    uint64 AccessHash = 3;
    ClientFileType Type = 4;
    string MimeType = 5;
    int64 UserID = 6;
    int64 GroupID = 7;
    int64 FileSize = 8;
    int64 MessageID = 9;
    int64 PeerID = 10;
    int32 PeerType = 11;
    int32 Version = 12;
    string Extension = 13;
    string MD5Checksum = 14;
    int64 WallpaperID = 15;
    repeated DocumentAttribute Attributes = 16;
}

// ClientFileRequest
message ClientFileRequest {
    ClientFileRequest Next = 100;
    // Logical Location
    int64 PeerID = 1;
    int32 PeerType = 2;
    int64 MessageID = 3;
    // Storage Location
    int32 ClusterID = 4;
    int64 FileID = 5;
    fixed64 AccessHash = 6;
    int32 Version = 7;
    int64 FileSize = 8; // FileSize (Optional) if is set then progress will be calculated
    int32 ChunkSize = 9; // ChunkSize identifies how many request we need to send to server to Download a file.
    repeated int32 FinishedParts = 10;
    int32 TotalParts = 11;
    bool SkipDelegateCall = 12;
    string FilePath = 13;
    string TempPath = 14;
    bool CheckSha256 = 15;
    bytes FileSha256 = 16;
    bool IsProfilePhoto = 17;
    int64 GroupID = 18;
    int64 ThumbID = 19;
    string ThumbPath = 20;
}

// ClientFileStatus
message ClientFileStatus {
    int32 Status = 1;
    int64 Progress = 2;
    string FilePath = 3;
}

// CachedMediaInfo
message ClientCachedMediaInfo {
    repeated ClientPeerMediaInfo MediaInfo = 1;
}

// PeerMediaInfo
message ClientPeerMediaInfo {
    int64 PeerID = 1;
    PeerType PeerType = 2;
    repeated ClientMediaSize Media = 3;
}

// ClientMediaSize
message ClientMediaSize {
    ClientMediaType MediaType = 1;
    int64 TotalSize = 2;
}

// ClientMediaType
enum ClientMediaType {
    ClientMediaNone = 0;
    ClientMediaFile = 1;
    ClientMediaMedia = 2;
    ClientMediaVoice = 3;
    ClientMediaAudio = 4;
    ClientMediaLink = 5;
    ClientMediaGif = 6;
}

// ClientRecentSearch
message ClientRecentSearch {
    Peer Peer = 1;
    int32 Date = 2;
}

// RecentSearchMany
message ClientRecentSearchMany {
    repeated ClientRecentSearch RecentSearches = 1;
    repeated User Users = 2;
    repeated Group Groups = 3;
}

// ClientTeamCounters
message ClientTeamCounters {
    int64 UnreadCount = 1;
    int64 MentionCount = 2;
}

// ClientGetFrequentReactions
// @Function
// @Return: ClientFrequentReactions
message ClientGetFrequentReactions {

}

message ClientFrequentReactions {
    repeated string Reactions = 1;
}

// ClientDismissNotification
// @Function
// @Return: Bool
message ClientDismissNotification {
    InputPeer Peer = 1;
    int64 Ts = 2;
}

// ClientGetNotificationDismissTime
// @Function
// @Return: ClientNotificationDismissTime
message ClientGetNotificationDismissTime {
    InputPeer Peer = 1;
}

message ClientNotificationDismissTime {
    int64 Ts = 1;
}