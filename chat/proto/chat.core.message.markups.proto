syntax = "proto2";
package msg;
import "chat.core.types.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
option (gogoproto.goproto_enum_prefix_all) = false;

/*
    Creation Time: 2018 - Nov - 28
    Created by:  (ehsan)
    Maintainers:
       1.  Ehsan N. Moosa (E2)
    Auditor: Ehsan N. Moosa (E2)
    Copyright Ronak Software Group 2018
*/

message ReplyKeyboardMarkup {
    // Requests clients to hide the keyboard as soon as it's been used.
    // The keyboard will still be available, but clients will automatically display the usual letter-keyboard
    // in the chat – the user can press a special button in the input field
    // to see the custom keyboard again.
    optional bool SingleUse = 1;
    // Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users
    // that are @mentioned in the text of the Message object; 2) if the bot's message is a reply
    // (has reply_to_message_id), sender of the original message.
    // Example: A user requests to change the bot‘s language, bot replies to the request with a keyboard
    // to select the new language. Other users in the group don’t see the keyboard.
    optional bool Selective = 2;
    // Requests clients to resize the keyboard vertically for optimal fit
    // (e.g., make the keyboard smaller if there are just two rows of buttons). If not set, the custom
    // keyboard is always of the same height as the app's standard keyboard.
    optional bool Resize = 3;
    repeated KeyboardButtonRow Rows = 4;
}

message ReplyInlineMarkup {
    repeated KeyboardButtonRow Rows = 1;
}

message KeyboardButtonRow {
    repeated KeyboardButtonEnvelope Buttons = 1;
}

message KeyboardButtonEnvelope {
    required int64 Constructor = 1;
    optional bytes Data = 2;
}

message Button {
    required string Text = 1;
}

message ButtonUrl {
    required string Text = 1;
    required string Url = 2;
}

message ButtonCallback {
    required string Text = 1;
    optional bytes Data = 2;
}

message ButtonRequestPhone {
    required string Text = 1;
}

message ButtonRequestGeoLocation {
    required string Text = 1;
}

message ButtonSwitchInline {
    required string Text = 1;
    required string Query = 2;
    optional bool SamePeer = 3;
}

message ButtonBuy {
    required string Text = 1;
}

message ButtonUrlAuth {
    required string Text = 1;
    optional string FwdText = 2;
    required string Url = 3;
    required int32 ButtonID = 4;
}

message InputButtonUrlAuth {
    required string Text = 1;
    optional string FwdText = 2;
    required string Url = 3;
    optional bool RequestWriteAccess = 4;
    required InputUser Bot = 5;
}
