// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bot.api.proto

package msg

import (
	fmt "fmt"
	pbytes "github.com/gobwas/pool/pbytes"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	sync "sync"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

const C_StartBot int64 = 3294108684

type poolStartBot struct {
	pool sync.Pool
}

func (p *poolStartBot) Get() *StartBot {
	x, ok := p.pool.Get().(*StartBot)
	if !ok {
		return &StartBot{}
	}
	return x
}

func (p *poolStartBot) Put(x *StartBot) {
	p.pool.Put(x)
}

var PoolStartBot = poolStartBot{}

func ResultStartBot(out *MessageEnvelope, res *StartBot) {
	out.Constructor = C_StartBot
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_BotSetInfo int64 = 3735815245

type poolBotSetInfo struct {
	pool sync.Pool
}

func (p *poolBotSetInfo) Get() *BotSetInfo {
	x, ok := p.pool.Get().(*BotSetInfo)
	if !ok {
		return &BotSetInfo{}
	}
	x.BotCommands = x.BotCommands[:0]
	return x
}

func (p *poolBotSetInfo) Put(x *BotSetInfo) {
	p.pool.Put(x)
}

var PoolBotSetInfo = poolBotSetInfo{}

func ResultBotSetInfo(out *MessageEnvelope, res *BotSetInfo) {
	out.Constructor = C_BotSetInfo
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_BotGet int64 = 911895569

type poolBotGet struct {
	pool sync.Pool
}

func (p *poolBotGet) Get() *BotGet {
	x, ok := p.pool.Get().(*BotGet)
	if !ok {
		return &BotGet{}
	}
	x.Limit = 0
	return x
}

func (p *poolBotGet) Put(x *BotGet) {
	p.pool.Put(x)
}

var PoolBotGet = poolBotGet{}

func ResultBotGet(out *MessageEnvelope, res *BotGet) {
	out.Constructor = C_BotGet
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_BotsMany int64 = 2942918011

type poolBotsMany struct {
	pool sync.Pool
}

func (p *poolBotsMany) Get() *BotsMany {
	x, ok := p.pool.Get().(*BotsMany)
	if !ok {
		return &BotsMany{}
	}
	x.Bots = x.Bots[:0]
	return x
}

func (p *poolBotsMany) Put(x *BotsMany) {
	p.pool.Put(x)
}

var PoolBotsMany = poolBotsMany{}

func ResultBotsMany(out *MessageEnvelope, res *BotsMany) {
	out.Constructor = C_BotsMany
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

func init() {
	ConstructorNames[3294108684] = "StartBot"
	ConstructorNames[3735815245] = "BotSetInfo"
	ConstructorNames[911895569] = "BotGet"
	ConstructorNames[2942918011] = "BotsMany"
}
