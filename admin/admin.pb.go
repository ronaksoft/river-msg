// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: admin.proto

package admin

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type PushProviderType int32

const (
	PushProviderType_Unknown  PushProviderType = 0
	PushProviderType_Firebase PushProviderType = 1
	PushProviderType_Apple    PushProviderType = 2
)

var PushProviderType_name = map[int32]string{
	0: "Unknown",
	1: "Firebase",
	2: "Apple",
}

var PushProviderType_value = map[string]int32{
	"Unknown":  0,
	"Firebase": 1,
	"Apple":    2,
}

func (x PushProviderType) Enum() *PushProviderType {
	p := new(PushProviderType)
	*p = x
	return p
}

func (x PushProviderType) String() string {
	return proto.EnumName(PushProviderType_name, int32(x))
}

func (x *PushProviderType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PushProviderType_value, data, "PushProviderType")
	if err != nil {
		return err
	}
	*x = PushProviderType(value)
	return nil
}

func (PushProviderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{0}
}

type FileLocation struct {
	ClusterID  int32  `protobuf:"varint,1,req,name=ClusterID" json:"cluster_id" bson:"cluster_id"`
	FileID     string `protobuf:"bytes,2,req,name=FileID" json:"file_id" bson:"file_id"`
	AccessHash string `protobuf:"bytes,3,req,name=AccessHash" json:"access_hash" bson:"access_hash"`
}

func (m *FileLocation) Reset()         { *m = FileLocation{} }
func (m *FileLocation) String() string { return proto.CompactTextString(m) }
func (*FileLocation) ProtoMessage()    {}
func (*FileLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{0}
}
func (m *FileLocation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FileLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FileLocation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FileLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileLocation.Merge(m, src)
}
func (m *FileLocation) XXX_Size() int {
	return m.Size()
}
func (m *FileLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_FileLocation.DiscardUnknown(m)
}

var xxx_messageInfo_FileLocation proto.InternalMessageInfo

func (m *FileLocation) GetClusterID() int32 {
	if m != nil {
		return m.ClusterID
	}
	return 0
}

func (m *FileLocation) GetFileID() string {
	if m != nil {
		return m.FileID
	}
	return ""
}

func (m *FileLocation) GetAccessHash() string {
	if m != nil {
		return m.AccessHash
	}
	return ""
}

type User struct {
	ID         string        `protobuf:"bytes,1,req,name=ID" json:"id" bson:"_id"`
	Username   string        `protobuf:"bytes,2,opt,name=Username" json:"username,omitempty" bson:"username"`
	FirstName  string        `protobuf:"bytes,3,opt,name=FirstName" json:"first_name,omitempty" bson:"first_name"`
	LastName   string        `protobuf:"bytes,4,opt,name=LastName" json:"last_name,omitempty" bson:"last_name"`
	Phone      string        `protobuf:"bytes,5,opt,name=Phone" json:"phone,omitempty" bson:"phone"`
	PhotoID    string        `protobuf:"bytes,6,opt,name=PhotoID" json:"photo_id,omitempty" bson:"photo_id"`
	PhotoBig   *FileLocation `protobuf:"bytes,7,opt,name=PhotoBig" json:"photo_big,omitempty" bson:"photo_big"`
	PhotoSmall *FileLocation `protobuf:"bytes,8,opt,name=PhotoSmall" json:"photo_small,omitempty" bson:"photo_small"`
	AuthIDs    []string      `protobuf:"bytes,9,rep,name=AuthIDs" json:"auth_ids,omitempty" bson:"auth_ids"`
	CreatedOn  string        `protobuf:"bytes,10,opt,name=CreatedOn" json:"created_on,omitempty" bson:"created_on"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{1}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_User.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return m.Size()
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *User) GetPhotoID() string {
	if m != nil {
		return m.PhotoID
	}
	return ""
}

func (m *User) GetPhotoBig() *FileLocation {
	if m != nil {
		return m.PhotoBig
	}
	return nil
}

func (m *User) GetPhotoSmall() *FileLocation {
	if m != nil {
		return m.PhotoSmall
	}
	return nil
}

func (m *User) GetAuthIDs() []string {
	if m != nil {
		return m.AuthIDs
	}
	return nil
}

func (m *User) GetCreatedOn() string {
	if m != nil {
		return m.CreatedOn
	}
	return ""
}

type WelcomeMessage struct {
	Lang     string `protobuf:"bytes,1,req,name=Lang" json:"lang" bson:"lang"`
	Template string `protobuf:"bytes,2,req,name=Template" json:"template" bson:"template"`
}

func (m *WelcomeMessage) Reset()         { *m = WelcomeMessage{} }
func (m *WelcomeMessage) String() string { return proto.CompactTextString(m) }
func (*WelcomeMessage) ProtoMessage()    {}
func (*WelcomeMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{2}
}
func (m *WelcomeMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WelcomeMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WelcomeMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WelcomeMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WelcomeMessage.Merge(m, src)
}
func (m *WelcomeMessage) XXX_Size() int {
	return m.Size()
}
func (m *WelcomeMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_WelcomeMessage.DiscardUnknown(m)
}

var xxx_messageInfo_WelcomeMessage proto.InternalMessageInfo

func (m *WelcomeMessage) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

func (m *WelcomeMessage) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

type PushProvider struct {
	ID          string           `protobuf:"bytes,1,opt,name=ID" json:"id,omitempty" bson:"_id"`
	Type        PushProviderType `protobuf:"varint,2,req,name=Type,enum=admin.PushProviderType" json:"type,omitempty" bson:"type"`
	Name        string           `protobuf:"bytes,3,req,name=Name" json:"name,omitempty" bson:"name"`
	Credentials []byte           `protobuf:"bytes,4,opt,name=Credentials" json:"credentials,omitempty" bson:"credentials"`
	KeyID       string           `protobuf:"bytes,5,opt,name=KeyID" json:"key_id,omitempty" bson:"key_id"`
	TeamID      string           `protobuf:"bytes,6,opt,name=TeamID" json:"team_id,omitempty" bson:"team_id"`
	Topic       string           `protobuf:"bytes,7,opt,name=Topic" json:"topic,omitempty" bson:"topic"`
	TestMode    bool             `protobuf:"varint,8,req,name=TestMode" json:"test_mode" bson:"test_mode"`
}

func (m *PushProvider) Reset()         { *m = PushProvider{} }
func (m *PushProvider) String() string { return proto.CompactTextString(m) }
func (*PushProvider) ProtoMessage()    {}
func (*PushProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{3}
}
func (m *PushProvider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PushProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PushProvider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PushProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushProvider.Merge(m, src)
}
func (m *PushProvider) XXX_Size() int {
	return m.Size()
}
func (m *PushProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_PushProvider.DiscardUnknown(m)
}

var xxx_messageInfo_PushProvider proto.InternalMessageInfo

func (m *PushProvider) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *PushProvider) GetType() PushProviderType {
	if m != nil {
		return m.Type
	}
	return PushProviderType_Unknown
}

func (m *PushProvider) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PushProvider) GetCredentials() []byte {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *PushProvider) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *PushProvider) GetTeamID() string {
	if m != nil {
		return m.TeamID
	}
	return ""
}

func (m *PushProvider) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PushProvider) GetTestMode() bool {
	if m != nil {
		return m.TestMode
	}
	return false
}

type GetNotifTemplatesRequest struct {
}

func (m *GetNotifTemplatesRequest) Reset()         { *m = GetNotifTemplatesRequest{} }
func (m *GetNotifTemplatesRequest) String() string { return proto.CompactTextString(m) }
func (*GetNotifTemplatesRequest) ProtoMessage()    {}
func (*GetNotifTemplatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{4}
}
func (m *GetNotifTemplatesRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetNotifTemplatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetNotifTemplatesRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetNotifTemplatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNotifTemplatesRequest.Merge(m, src)
}
func (m *GetNotifTemplatesRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetNotifTemplatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNotifTemplatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNotifTemplatesRequest proto.InternalMessageInfo

type GetNotifTemplatesResponse struct {
	Templates []*NotifTemplate `protobuf:"bytes,1,rep,name=Templates" json:"Templates,omitempty"`
}

func (m *GetNotifTemplatesResponse) Reset()         { *m = GetNotifTemplatesResponse{} }
func (m *GetNotifTemplatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetNotifTemplatesResponse) ProtoMessage()    {}
func (*GetNotifTemplatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{5}
}
func (m *GetNotifTemplatesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetNotifTemplatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetNotifTemplatesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetNotifTemplatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNotifTemplatesResponse.Merge(m, src)
}
func (m *GetNotifTemplatesResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetNotifTemplatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNotifTemplatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNotifTemplatesResponse proto.InternalMessageInfo

func (m *GetNotifTemplatesResponse) GetTemplates() []*NotifTemplate {
	if m != nil {
		return m.Templates
	}
	return nil
}

type NotifTemplate struct {
	Type  int32  `protobuf:"varint,1,req,name=Type" json:"Type"`
	Title string `protobuf:"bytes,2,req,name=Title" json:"Title"`
	Body  string `protobuf:"bytes,3,req,name=Body" json:"Body"`
}

func (m *NotifTemplate) Reset()         { *m = NotifTemplate{} }
func (m *NotifTemplate) String() string { return proto.CompactTextString(m) }
func (*NotifTemplate) ProtoMessage()    {}
func (*NotifTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a7fc70dcc2027c, []int{6}
}
func (m *NotifTemplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NotifTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NotifTemplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NotifTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotifTemplate.Merge(m, src)
}
func (m *NotifTemplate) XXX_Size() int {
	return m.Size()
}
func (m *NotifTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_NotifTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_NotifTemplate proto.InternalMessageInfo

func (m *NotifTemplate) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *NotifTemplate) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *NotifTemplate) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto.RegisterEnum("admin.PushProviderType", PushProviderType_name, PushProviderType_value)
	proto.RegisterType((*FileLocation)(nil), "admin.FileLocation")
	proto.RegisterType((*User)(nil), "admin.User")
	proto.RegisterType((*WelcomeMessage)(nil), "admin.WelcomeMessage")
	proto.RegisterType((*PushProvider)(nil), "admin.PushProvider")
	proto.RegisterType((*GetNotifTemplatesRequest)(nil), "admin.GetNotifTemplatesRequest")
	proto.RegisterType((*GetNotifTemplatesResponse)(nil), "admin.GetNotifTemplatesResponse")
	proto.RegisterType((*NotifTemplate)(nil), "admin.NotifTemplate")
}

func init() { proto.RegisterFile("admin.proto", fileDescriptor_73a7fc70dcc2027c) }

var fileDescriptor_73a7fc70dcc2027c = []byte{
	// 950 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x95, 0x4d, 0x6f, 0x1b, 0x45,
	0x1c, 0xc6, 0xb3, 0x8e, 0x9d, 0xd8, 0x7f, 0xbb, 0xae, 0x33, 0x6d, 0xc5, 0x12, 0x24, 0xdb, 0x0c,
	0x42, 0x18, 0x4a, 0x63, 0x61, 0x2e, 0x14, 0x09, 0x55, 0x59, 0x9b, 0x14, 0xab, 0x69, 0x13, 0x0d,
	0x8e, 0xb8, 0x20, 0x59, 0x63, 0xef, 0xc4, 0x5e, 0x75, 0x77, 0x67, 0xf1, 0x8c, 0x41, 0xbe, 0xf2,
	0x09, 0xf8, 0x28, 0x7c, 0x8c, 0x1e, 0x7b, 0x44, 0x42, 0xb2, 0x50, 0x72, 0xeb, 0x31, 0x57, 0x2e,
	0x68, 0x5e, 0x76, 0xfd, 0x52, 0x73, 0xf3, 0xfe, 0x9f, 0x7d, 0x7e, 0xbb, 0x33, 0xfb, 0x3c, 0x63,
	0x28, 0x53, 0x3f, 0x0a, 0xe2, 0x93, 0x64, 0xc6, 0x25, 0x47, 0x05, 0x7d, 0x71, 0xfc, 0x64, 0x12,
	0xc8, 0xe9, 0x7c, 0x74, 0x32, 0xe6, 0x51, 0x7b, 0xc2, 0x27, 0xbc, 0xad, 0xd5, 0xd1, 0xfc, 0x5a,
	0x5f, 0xe9, 0x0b, 0xfd, 0xcb, 0xb8, 0xf0, 0xdf, 0x0e, 0x54, 0xce, 0x82, 0x90, 0x9d, 0xf3, 0x31,
	0x95, 0x01, 0x8f, 0xd1, 0xf7, 0x50, 0xea, 0x86, 0x73, 0x21, 0xd9, 0xac, 0xdf, 0x73, 0x9d, 0x66,
	0xae, 0x55, 0xf0, 0x3e, 0x7b, 0xb3, 0x6c, 0xec, 0xbd, 0x5b, 0x36, 0x60, 0x6c, 0x84, 0x61, 0xe0,
	0xdf, 0x2d, 0x1b, 0x47, 0x23, 0xc1, 0xe3, 0x6f, 0xf1, 0x6a, 0x86, 0xc9, 0xca, 0x89, 0x9e, 0xc2,
	0x81, 0xc2, 0xf6, 0x7b, 0x6e, 0xae, 0x99, 0x6b, 0x95, 0xbc, 0x8f, 0x2d, 0xe3, 0xf0, 0x3a, 0x08,
	0x99, 0x01, 0x54, 0x0d, 0xc0, 0x0e, 0x30, 0xb1, 0x06, 0xd4, 0x07, 0x38, 0x1d, 0x8f, 0x99, 0x10,
	0x3f, 0x50, 0x31, 0x75, 0xf7, 0xb5, 0xfd, 0x73, 0x6b, 0x2f, 0x53, 0xad, 0x0c, 0xa7, 0x54, 0x4c,
	0xef, 0x96, 0x0d, 0x64, 0x10, 0x6b, 0x43, 0x4c, 0xd6, 0xcc, 0xf8, 0xdf, 0x02, 0xe4, 0xaf, 0x04,
	0x9b, 0xa1, 0x16, 0xe4, 0xec, 0x72, 0x4a, 0x9e, 0x6b, 0x59, 0x39, 0xfd, 0x16, 0x60, 0x10, 0xfa,
	0x0d, 0x72, 0xfa, 0xe9, 0x45, 0xe5, 0x88, 0x69, 0xc4, 0xdc, 0x5c, 0xd3, 0x69, 0x95, 0xbc, 0x27,
	0xf6, 0x7e, 0x34, 0xb7, 0xf3, 0x2f, 0x79, 0x14, 0x48, 0x16, 0x25, 0x72, 0x71, 0xb7, 0x6c, 0xdc,
	0x37, 0xfe, 0x54, 0xc3, 0x24, 0xb3, 0xa3, 0x0b, 0x28, 0x9d, 0x05, 0x33, 0x21, 0x5f, 0x29, 0xd6,
	0xbe, 0x66, 0x7d, 0x65, 0x59, 0x0f, 0xaf, 0x95, 0x30, 0x7c, 0x8f, 0x76, 0x94, 0xee, 0x49, 0xaa,
	0x62, 0xb2, 0x62, 0xa0, 0x17, 0x50, 0x3c, 0xa7, 0x96, 0x97, 0xd7, 0xbc, 0xb6, 0xe5, 0x3d, 0x08,
	0xe9, 0x2e, 0x5c, 0xcd, 0xe0, 0x32, 0x11, 0x93, 0x0c, 0x80, 0xbe, 0x83, 0xc2, 0xe5, 0x94, 0xc7,
	0xcc, 0x2d, 0x68, 0x52, 0xfa, 0x91, 0xef, 0x27, 0x6a, 0xb8, 0x41, 0xa9, 0x18, 0x8a, 0x16, 0x30,
	0x31, 0x2e, 0xf4, 0x1c, 0x0e, 0x2f, 0xa7, 0x5c, 0xf2, 0x7e, 0xcf, 0x3d, 0xd8, 0xdc, 0xa6, 0x44,
	0x8d, 0x87, 0x81, 0xbf, 0x6b, 0x9b, 0x52, 0x0d, 0x93, 0xd4, 0x8d, 0x7e, 0x86, 0xa2, 0xfe, 0xe9,
	0x05, 0x13, 0xf7, 0xb0, 0xe9, 0xb4, 0xca, 0x9d, 0x07, 0x27, 0x26, 0xd7, 0xeb, 0xb9, 0xf4, 0x1e,
	0xab, 0x55, 0x1a, 0xfb, 0x28, 0x98, 0xec, 0x5a, 0x65, 0x26, 0x62, 0x92, 0x11, 0x91, 0x0f, 0xa0,
	0x7f, 0xff, 0x18, 0xd1, 0x30, 0x74, 0x8b, 0xff, 0xcf, 0x6f, 0xbf, 0x5b, 0x36, 0x1e, 0x19, 0x84,
	0x50, 0xf7, 0x6e, 0x3c, 0x01, 0xad, 0x3f, 0x41, 0xcb, 0x98, 0xac, 0x71, 0x51, 0x17, 0x0e, 0x4f,
	0xe7, 0x72, 0xda, 0xef, 0x09, 0xb7, 0xd4, 0xdc, 0x57, 0x79, 0x55, 0x1b, 0x41, 0xe7, 0x72, 0x3a,
	0x0c, 0x7c, 0xb1, 0x6b, 0x23, 0x52, 0x0d, 0x93, 0xd4, 0xa9, 0xe2, 0xd2, 0x9d, 0x31, 0x2a, 0x99,
	0x7f, 0x11, 0xbb, 0xb0, 0x19, 0x97, 0xb1, 0x11, 0x86, 0x3c, 0xde, 0x15, 0x97, 0x95, 0xaa, 0x3a,
	0x98, 0x32, 0xf0, 0xef, 0x0e, 0x54, 0x7f, 0x62, 0xe1, 0x98, 0x47, 0xec, 0x25, 0x13, 0x82, 0x4e,
	0x18, 0x6a, 0x43, 0xfe, 0x9c, 0xc6, 0x13, 0xdb, 0x84, 0x8f, 0x2c, 0x3e, 0x1f, 0xd2, 0x78, 0x72,
	0xb7, 0x6c, 0x94, 0xd3, 0xb8, 0xc4, 0x13, 0x4c, 0xf4, 0x8d, 0xe8, 0x19, 0x14, 0x07, 0x2c, 0x4a,
	0x42, 0x2a, 0x99, 0x6d, 0xf2, 0x27, 0xd6, 0x54, 0x94, 0x76, 0xbe, 0x5a, 0x54, 0x3a, 0xc1, 0x24,
	0x33, 0xe1, 0x3f, 0xf3, 0x50, 0xb9, 0x9c, 0x8b, 0xe9, 0xe5, 0x8c, 0xff, 0x1a, 0xf8, 0x6c, 0x86,
	0x3a, 0xb6, 0x8a, 0x6a, 0x7d, 0xd8, 0xb2, 0x2a, 0x5b, 0x69, 0xd9, 0x2e, 0x25, 0x81, 0xfc, 0x60,
	0x91, 0x98, 0x37, 0xa8, 0x76, 0x3e, 0xb0, 0xdf, 0x6f, 0x1d, 0xab, 0x64, 0xef, 0x53, 0x8b, 0xab,
	0xca, 0x45, 0xb2, 0x19, 0x61, 0xbb, 0x32, 0x35, 0xc7, 0x44, 0xb3, 0xd0, 0x53, 0xc8, 0xdb, 0x62,
	0xaa, 0x55, 0x65, 0xd6, 0xf7, 0x3a, 0x64, 0xad, 0xa6, 0x3e, 0xda, 0x82, 0xae, 0xa0, 0xdc, 0x9d,
	0x31, 0x9f, 0xc5, 0x32, 0xa0, 0xa1, 0xd0, 0x55, 0xac, 0x78, 0x5f, 0x5b, 0xc2, 0xa3, 0xf1, 0x4a,
	0xda, 0x15, 0xa2, 0x35, 0x19, 0x93, 0x75, 0x0e, 0x7a, 0x06, 0x85, 0x17, 0x6c, 0xd1, 0xef, 0xd9,
	0x46, 0xa6, 0x67, 0x5e, 0xed, 0x35, 0x5b, 0x6c, 0xd7, 0xe9, 0x9e, 0x61, 0x19, 0x05, 0x13, 0xe3,
	0x43, 0x5d, 0x38, 0x18, 0x30, 0x1a, 0x65, 0x95, 0x7c, 0x6c, 0x09, 0x47, 0x92, 0xd1, 0x68, 0x1b,
	0x51, 0x4d, 0xbf, 0x99, 0x96, 0x30, 0xb1, 0x56, 0x75, 0x2e, 0x0c, 0x78, 0x12, 0x8c, 0x75, 0x19,
	0xd7, 0xce, 0x05, 0xa9, 0x86, 0xbb, 0xce, 0x05, 0x2d, 0x60, 0x62, 0x5c, 0xe8, 0x54, 0x05, 0x46,
	0xc8, 0x97, 0xdc, 0x67, 0x6e, 0xb1, 0x99, 0x6b, 0x15, 0xb3, 0xad, 0x2d, 0x49, 0x26, 0xe4, 0x30,
	0xe2, 0x3e, 0x5b, 0x75, 0x36, 0x1b, 0xe9, 0xc8, 0x18, 0x1b, 0x3e, 0x06, 0xf7, 0x39, 0x93, 0xaf,
	0xb8, 0x0c, 0xae, 0xd3, 0x18, 0x09, 0xc2, 0x7e, 0x99, 0x33, 0x21, 0xf1, 0x05, 0x7c, 0xb8, 0x43,
	0x13, 0x09, 0x8f, 0x05, 0x43, 0x1d, 0x28, 0x65, 0x43, 0xd7, 0x69, 0xee, 0xb7, 0xca, 0x9d, 0x87,
	0x36, 0x2b, 0x1b, 0x0e, 0xb2, 0xba, 0x0d, 0x0f, 0xe1, 0xde, 0x86, 0x86, 0x5c, 0x9b, 0x35, 0xf3,
	0xdf, 0x97, 0x57, 0x2f, 0x6f, 0x13, 0x73, 0x0c, 0x85, 0x41, 0x20, 0xc3, 0xb4, 0x08, 0x46, 0x32,
	0x23, 0xe5, 0xf2, 0xb8, 0xbf, 0xb0, 0x69, 0xb2, 0x2e, 0x35, 0xf9, 0xe2, 0x1b, 0xa8, 0x6d, 0x07,
	0x15, 0x95, 0xe1, 0xf0, 0x2a, 0x7e, 0x1d, 0xf3, 0xdf, 0xe2, 0xda, 0x1e, 0xaa, 0x40, 0xf1, 0x2c,
	0x98, 0xb1, 0x11, 0x15, 0xac, 0xe6, 0xa0, 0x12, 0x14, 0x4e, 0x93, 0x24, 0x64, 0xb5, 0x9c, 0xe7,
	0xbe, 0xb9, 0xa9, 0x3b, 0x6f, 0x6f, 0xea, 0xce, 0x3f, 0x37, 0x75, 0xe7, 0x8f, 0xdb, 0xfa, 0xde,
	0xdb, 0xdb, 0xfa, 0xde, 0x5f, 0xb7, 0xf5, 0xbd, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x61, 0xc8,
	0x60, 0xdc, 0xf9, 0x07, 0x00, 0x00,
}

func (m *FileLocation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileLocation) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(m.ClusterID))
	dAtA[i] = 0x12
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.FileID)))
	i += copy(dAtA[i:], m.FileID)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.AccessHash)))
	i += copy(dAtA[i:], m.AccessHash)
	return i, nil
}

func (m *User) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *User) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.ID)))
	i += copy(dAtA[i:], m.ID)
	dAtA[i] = 0x12
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Username)))
	i += copy(dAtA[i:], m.Username)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.FirstName)))
	i += copy(dAtA[i:], m.FirstName)
	dAtA[i] = 0x22
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.LastName)))
	i += copy(dAtA[i:], m.LastName)
	dAtA[i] = 0x2a
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Phone)))
	i += copy(dAtA[i:], m.Phone)
	dAtA[i] = 0x32
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.PhotoID)))
	i += copy(dAtA[i:], m.PhotoID)
	if m.PhotoBig != nil {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintAdmin(dAtA, i, uint64(m.PhotoBig.Size()))
		n1, err := m.PhotoBig.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.PhotoSmall != nil {
		dAtA[i] = 0x42
		i++
		i = encodeVarintAdmin(dAtA, i, uint64(m.PhotoSmall.Size()))
		n2, err := m.PhotoSmall.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if len(m.AuthIDs) > 0 {
		for _, s := range m.AuthIDs {
			dAtA[i] = 0x4a
			i++
			l = len(s)
			for l >= 1<<7 {
				dAtA[i] = uint8(uint64(l)&0x7f | 0x80)
				l >>= 7
				i++
			}
			dAtA[i] = uint8(l)
			i++
			i += copy(dAtA[i:], s)
		}
	}
	dAtA[i] = 0x52
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.CreatedOn)))
	i += copy(dAtA[i:], m.CreatedOn)
	return i, nil
}

func (m *WelcomeMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WelcomeMessage) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Lang)))
	i += copy(dAtA[i:], m.Lang)
	dAtA[i] = 0x12
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Template)))
	i += copy(dAtA[i:], m.Template)
	return i, nil
}

func (m *PushProvider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PushProvider) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.ID)))
	i += copy(dAtA[i:], m.ID)
	dAtA[i] = 0x10
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(m.Type))
	dAtA[i] = 0x1a
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Name)))
	i += copy(dAtA[i:], m.Name)
	if m.Credentials != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintAdmin(dAtA, i, uint64(len(m.Credentials)))
		i += copy(dAtA[i:], m.Credentials)
	}
	dAtA[i] = 0x2a
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.KeyID)))
	i += copy(dAtA[i:], m.KeyID)
	dAtA[i] = 0x32
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.TeamID)))
	i += copy(dAtA[i:], m.TeamID)
	dAtA[i] = 0x3a
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Topic)))
	i += copy(dAtA[i:], m.Topic)
	dAtA[i] = 0x40
	i++
	if m.TestMode {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}

func (m *GetNotifTemplatesRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetNotifTemplatesRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *GetNotifTemplatesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetNotifTemplatesResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Templates) > 0 {
		for _, msg := range m.Templates {
			dAtA[i] = 0xa
			i++
			i = encodeVarintAdmin(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *NotifTemplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NotifTemplate) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(m.Type))
	dAtA[i] = 0x12
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Title)))
	i += copy(dAtA[i:], m.Title)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintAdmin(dAtA, i, uint64(len(m.Body)))
	i += copy(dAtA[i:], m.Body)
	return i, nil
}

func encodeVarintAdmin(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *FileLocation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovAdmin(uint64(m.ClusterID))
	l = len(m.FileID)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.AccessHash)
	n += 1 + l + sovAdmin(uint64(l))
	return n
}

func (m *User) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.Username)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.FirstName)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.LastName)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.Phone)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.PhotoID)
	n += 1 + l + sovAdmin(uint64(l))
	if m.PhotoBig != nil {
		l = m.PhotoBig.Size()
		n += 1 + l + sovAdmin(uint64(l))
	}
	if m.PhotoSmall != nil {
		l = m.PhotoSmall.Size()
		n += 1 + l + sovAdmin(uint64(l))
	}
	if len(m.AuthIDs) > 0 {
		for _, s := range m.AuthIDs {
			l = len(s)
			n += 1 + l + sovAdmin(uint64(l))
		}
	}
	l = len(m.CreatedOn)
	n += 1 + l + sovAdmin(uint64(l))
	return n
}

func (m *WelcomeMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Lang)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.Template)
	n += 1 + l + sovAdmin(uint64(l))
	return n
}

func (m *PushProvider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	n += 1 + l + sovAdmin(uint64(l))
	n += 1 + sovAdmin(uint64(m.Type))
	l = len(m.Name)
	n += 1 + l + sovAdmin(uint64(l))
	if m.Credentials != nil {
		l = len(m.Credentials)
		n += 1 + l + sovAdmin(uint64(l))
	}
	l = len(m.KeyID)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.TeamID)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.Topic)
	n += 1 + l + sovAdmin(uint64(l))
	n += 2
	return n
}

func (m *GetNotifTemplatesRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GetNotifTemplatesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Templates) > 0 {
		for _, e := range m.Templates {
			l = e.Size()
			n += 1 + l + sovAdmin(uint64(l))
		}
	}
	return n
}

func (m *NotifTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovAdmin(uint64(m.Type))
	l = len(m.Title)
	n += 1 + l + sovAdmin(uint64(l))
	l = len(m.Body)
	n += 1 + l + sovAdmin(uint64(l))
	return n
}

func sovAdmin(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozAdmin(x uint64) (n int) {
	return sovAdmin(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FileLocation) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileLocation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileLocation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterID", wireType)
			}
			m.ClusterID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClusterID |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClusterID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("FileID")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AccessHash")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *User) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: User: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: User: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhotoID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhotoID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhotoBig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PhotoBig == nil {
				m.PhotoBig = &FileLocation{}
			}
			if err := m.PhotoBig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhotoSmall", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PhotoSmall == nil {
				m.PhotoSmall = &FileLocation{}
			}
			if err := m.PhotoSmall.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthIDs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthIDs = append(m.AuthIDs, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedOn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedOn = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WelcomeMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WelcomeMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WelcomeMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lang", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Lang = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Template = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Lang")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Template")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PushProvider) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PushProvider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PushProvider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= PushProviderType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credentials", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Credentials = append(m.Credentials[:0], dAtA[iNdEx:postIndex]...)
			if m.Credentials == nil {
				m.Credentials = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KeyID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TeamID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TeamID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Topic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Topic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TestMode", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TestMode = bool(v != 0)
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Type")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Name")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("TestMode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetNotifTemplatesRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetNotifTemplatesRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetNotifTemplatesRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetNotifTemplatesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetNotifTemplatesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetNotifTemplatesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Templates", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Templates = append(m.Templates, &NotifTemplate{})
			if err := m.Templates[len(m.Templates)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NotifTemplate) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NotifTemplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NotifTemplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAdmin
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAdmin
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipAdmin(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthAdmin
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Type")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Title")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Body")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAdmin(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAdmin
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAdmin
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAdmin
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthAdmin
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowAdmin
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipAdmin(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthAdmin
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthAdmin = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAdmin   = fmt.Errorf("proto: integer overflow")
)
