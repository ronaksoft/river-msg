// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.phone.proto

package msg

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type DiscardReason int32

const (
	DiscardReasonUnknown    DiscardReason = 0
	DiscardReasonMissed     DiscardReason = 1
	DiscardReasonBusy       DiscardReason = 2
	DiscardReasonHangup     DiscardReason = 3
	DiscardReasonDisconnect DiscardReason = 4
	DiscardReasonReserved1  DiscardReason = 5
	DiscardReasonReserved2  DiscardReason = 6
	DiscardReasonReserved3  DiscardReason = 7
	DiscardReasonReserved4  DiscardReason = 8
	DiscardReasonReserved5  DiscardReason = 9
	DiscardReasonReserved6  DiscardReason = 10
	DiscardReasonReserved7  DiscardReason = 11
	DiscardReasonReserved8  DiscardReason = 12
	DiscardReasonReserved9  DiscardReason = 13
)

var DiscardReason_name = map[int32]string{
	0:  "DiscardReasonUnknown",
	1:  "DiscardReasonMissed",
	2:  "DiscardReasonBusy",
	3:  "DiscardReasonHangup",
	4:  "DiscardReasonDisconnect",
	5:  "DiscardReasonReserved1",
	6:  "DiscardReasonReserved2",
	7:  "DiscardReasonReserved3",
	8:  "DiscardReasonReserved4",
	9:  "DiscardReasonReserved5",
	10: "DiscardReasonReserved6",
	11: "DiscardReasonReserved7",
	12: "DiscardReasonReserved8",
	13: "DiscardReasonReserved9",
}

var DiscardReason_value = map[string]int32{
	"DiscardReasonUnknown":    0,
	"DiscardReasonMissed":     1,
	"DiscardReasonBusy":       2,
	"DiscardReasonHangup":     3,
	"DiscardReasonDisconnect": 4,
	"DiscardReasonReserved1":  5,
	"DiscardReasonReserved2":  6,
	"DiscardReasonReserved3":  7,
	"DiscardReasonReserved4":  8,
	"DiscardReasonReserved5":  9,
	"DiscardReasonReserved6":  10,
	"DiscardReasonReserved7":  11,
	"DiscardReasonReserved8":  12,
	"DiscardReasonReserved9":  13,
}

func (x DiscardReason) Enum() *DiscardReason {
	p := new(DiscardReason)
	*p = x
	return p
}

func (x DiscardReason) String() string {
	return proto.EnumName(DiscardReason_name, int32(x))
}

func (x *DiscardReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DiscardReason_value, data, "DiscardReason")
	if err != nil {
		return err
	}
	*x = DiscardReason(value)
	return nil
}

func (DiscardReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{0}
}

type PhoneCallAction int32

const (
	PhoneCallEmpty       PhoneCallAction = 0
	PhoneCallAccepted    PhoneCallAction = 1
	PhoneCallRequested   PhoneCallAction = 2
	PhoneCallCallWaiting PhoneCallAction = 3
	PhoneCallDiscarded   PhoneCallAction = 4
	PhoneCallReserved1   PhoneCallAction = 5
	PhoneCallReserved2   PhoneCallAction = 6
	PhoneCallReserved3   PhoneCallAction = 7
	PhoneCallReserved4   PhoneCallAction = 8
	PhoneCallReserved5   PhoneCallAction = 9
	PhoneCallReserved6   PhoneCallAction = 10
	PhoneCallReserved7   PhoneCallAction = 11
	PhoneCallReserved8   PhoneCallAction = 12
	PhoneCallReserved9   PhoneCallAction = 13
)

var PhoneCallAction_name = map[int32]string{
	0:  "PhoneCallEmpty",
	1:  "PhoneCallAccepted",
	2:  "PhoneCallRequested",
	3:  "PhoneCallCallWaiting",
	4:  "PhoneCallDiscarded",
	5:  "PhoneCallReserved1",
	6:  "PhoneCallReserved2",
	7:  "PhoneCallReserved3",
	8:  "PhoneCallReserved4",
	9:  "PhoneCallReserved5",
	10: "PhoneCallReserved6",
	11: "PhoneCallReserved7",
	12: "PhoneCallReserved8",
	13: "PhoneCallReserved9",
}

var PhoneCallAction_value = map[string]int32{
	"PhoneCallEmpty":       0,
	"PhoneCallAccepted":    1,
	"PhoneCallRequested":   2,
	"PhoneCallCallWaiting": 3,
	"PhoneCallDiscarded":   4,
	"PhoneCallReserved1":   5,
	"PhoneCallReserved2":   6,
	"PhoneCallReserved3":   7,
	"PhoneCallReserved4":   8,
	"PhoneCallReserved5":   9,
	"PhoneCallReserved6":   10,
	"PhoneCallReserved7":   11,
	"PhoneCallReserved8":   12,
	"PhoneCallReserved9":   13,
}

func (x PhoneCallAction) Enum() *PhoneCallAction {
	p := new(PhoneCallAction)
	*p = x
	return p
}

func (x PhoneCallAction) String() string {
	return proto.EnumName(PhoneCallAction_name, int32(x))
}

func (x *PhoneCallAction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PhoneCallAction_value, data, "PhoneCallAction")
	if err != nil {
		return err
	}
	*x = PhoneCallAction(value)
	return nil
}

func (PhoneCallAction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{1}
}

// PhoneAcceptCall
// @Function
// @Return: PhoneCall
type PhoneAcceptCall struct {
	CallID    int64      `protobuf:"varint,1,req,name=CallID" json:"CallID"`
	Peer      *InputUser `protobuf:"bytes,2,req,name=Peer" json:"Peer,omitempty"`
	AnswerSDP string     `protobuf:"bytes,3,req,name=AnswerSDP" json:"AnswerSDP"`
}

func (m *PhoneAcceptCall) Reset()         { *m = PhoneAcceptCall{} }
func (m *PhoneAcceptCall) String() string { return proto.CompactTextString(m) }
func (*PhoneAcceptCall) ProtoMessage()    {}
func (*PhoneAcceptCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{0}
}
func (m *PhoneAcceptCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneAcceptCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneAcceptCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneAcceptCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneAcceptCall.Merge(m, src)
}
func (m *PhoneAcceptCall) XXX_Size() int {
	return m.Size()
}
func (m *PhoneAcceptCall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneAcceptCall.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneAcceptCall proto.InternalMessageInfo

func (m *PhoneAcceptCall) GetCallID() int64 {
	if m != nil {
		return m.CallID
	}
	return 0
}

func (m *PhoneAcceptCall) GetPeer() *InputUser {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *PhoneAcceptCall) GetAnswerSDP() string {
	if m != nil {
		return m.AnswerSDP
	}
	return ""
}

// PhoneRequestCall
// @Function
// @Return: PhoneCall
type PhoneRequestCall struct {
	Peer     *InputUser `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	OfferSDP string     `protobuf:"bytes,2,req,name=OfferSDP" json:"OfferSDP"`
	Video    bool       `protobuf:"varint,3,req,name=Video" json:"Video"`
	RandomID int64      `protobuf:"varint,4,req,name=RandomID" json:"RandomID"`
}

func (m *PhoneRequestCall) Reset()         { *m = PhoneRequestCall{} }
func (m *PhoneRequestCall) String() string { return proto.CompactTextString(m) }
func (*PhoneRequestCall) ProtoMessage()    {}
func (*PhoneRequestCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{1}
}
func (m *PhoneRequestCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneRequestCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneRequestCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneRequestCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneRequestCall.Merge(m, src)
}
func (m *PhoneRequestCall) XXX_Size() int {
	return m.Size()
}
func (m *PhoneRequestCall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneRequestCall.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneRequestCall proto.InternalMessageInfo

func (m *PhoneRequestCall) GetPeer() *InputUser {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *PhoneRequestCall) GetOfferSDP() string {
	if m != nil {
		return m.OfferSDP
	}
	return ""
}

func (m *PhoneRequestCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *PhoneRequestCall) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

// PhoneDiscardCall
// @Function
type PhoneDiscardCall struct {
	CallID   int64         `protobuf:"varint,1,req,name=CallID" json:"CallID"`
	Peer     *InputUser    `protobuf:"bytes,2,req,name=Peer" json:"Peer,omitempty"`
	Duration int32         `protobuf:"varint,3,req,name=Duration" json:"Duration"`
	Video    bool          `protobuf:"varint,4,req,name=Video" json:"Video"`
	Reason   DiscardReason `protobuf:"varint,5,req,name=Reason,enum=msg.DiscardReason" json:"Reason"`
}

func (m *PhoneDiscardCall) Reset()         { *m = PhoneDiscardCall{} }
func (m *PhoneDiscardCall) String() string { return proto.CompactTextString(m) }
func (*PhoneDiscardCall) ProtoMessage()    {}
func (*PhoneDiscardCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{2}
}
func (m *PhoneDiscardCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneDiscardCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneDiscardCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneDiscardCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneDiscardCall.Merge(m, src)
}
func (m *PhoneDiscardCall) XXX_Size() int {
	return m.Size()
}
func (m *PhoneDiscardCall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneDiscardCall.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneDiscardCall proto.InternalMessageInfo

func (m *PhoneDiscardCall) GetCallID() int64 {
	if m != nil {
		return m.CallID
	}
	return 0
}

func (m *PhoneDiscardCall) GetPeer() *InputUser {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *PhoneDiscardCall) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *PhoneDiscardCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *PhoneDiscardCall) GetReason() DiscardReason {
	if m != nil {
		return m.Reason
	}
	return DiscardReasonUnknown
}

// PhoneReceivedCall
// @Function
type PhoneReceivedCall struct {
	Peer *InputUser `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
}

func (m *PhoneReceivedCall) Reset()         { *m = PhoneReceivedCall{} }
func (m *PhoneReceivedCall) String() string { return proto.CompactTextString(m) }
func (*PhoneReceivedCall) ProtoMessage()    {}
func (*PhoneReceivedCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{3}
}
func (m *PhoneReceivedCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneReceivedCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneReceivedCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneReceivedCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneReceivedCall.Merge(m, src)
}
func (m *PhoneReceivedCall) XXX_Size() int {
	return m.Size()
}
func (m *PhoneReceivedCall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneReceivedCall.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneReceivedCall proto.InternalMessageInfo

func (m *PhoneReceivedCall) GetPeer() *InputUser {
	if m != nil {
		return m.Peer
	}
	return nil
}

// PhoneSetCallRating
// @Function
type PhoneSetCallRating struct {
	Peer      *InputUser `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	Initiator bool       `protobuf:"varint,2,req,name=Initiator" json:"Initiator"`
	Rate      int32      `protobuf:"varint,3,req,name=Rate" json:"Rate"`
	Comment   string     `protobuf:"bytes,4,opt,name=Comment" json:"Comment"`
}

func (m *PhoneSetCallRating) Reset()         { *m = PhoneSetCallRating{} }
func (m *PhoneSetCallRating) String() string { return proto.CompactTextString(m) }
func (*PhoneSetCallRating) ProtoMessage()    {}
func (*PhoneSetCallRating) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{4}
}
func (m *PhoneSetCallRating) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneSetCallRating) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneSetCallRating.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneSetCallRating) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneSetCallRating.Merge(m, src)
}
func (m *PhoneSetCallRating) XXX_Size() int {
	return m.Size()
}
func (m *PhoneSetCallRating) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneSetCallRating.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneSetCallRating proto.InternalMessageInfo

func (m *PhoneSetCallRating) GetPeer() *InputUser {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *PhoneSetCallRating) GetInitiator() bool {
	if m != nil {
		return m.Initiator
	}
	return false
}

func (m *PhoneSetCallRating) GetRate() int32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *PhoneSetCallRating) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

// PhoneCall
type PhoneCall struct {
	ID          int64    `protobuf:"varint,1,req,name=ID" json:"ID"`
	UserID      int64    `protobuf:"varint,2,req,name=UserID" json:"UserID"`
	AccessHash  uint64   `protobuf:"fixed64,3,req,name=AccessHash" json:"AccessHash"`
	Video       bool     `protobuf:"varint,4,req,name=Video" json:"Video"`
	Date        int64    `protobuf:"varint,5,req,name=Date" json:"Date"`
	StunServers []string `protobuf:"bytes,6,rep,name=StunServers" json:"StunServers,omitempty"`
}

func (m *PhoneCall) Reset()         { *m = PhoneCall{} }
func (m *PhoneCall) String() string { return proto.CompactTextString(m) }
func (*PhoneCall) ProtoMessage()    {}
func (*PhoneCall) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{5}
}
func (m *PhoneCall) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneCall) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneCall.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneCall) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneCall.Merge(m, src)
}
func (m *PhoneCall) XXX_Size() int {
	return m.Size()
}
func (m *PhoneCall) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneCall.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneCall proto.InternalMessageInfo

func (m *PhoneCall) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PhoneCall) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *PhoneCall) GetAccessHash() uint64 {
	if m != nil {
		return m.AccessHash
	}
	return 0
}

func (m *PhoneCall) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *PhoneCall) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *PhoneCall) GetStunServers() []string {
	if m != nil {
		return m.StunServers
	}
	return nil
}

// PhoneActionCallEmpty
type PhoneActionCallEmpty struct {
	Empty bool `protobuf:"varint,1,opt,name=Empty" json:"Empty"`
}

func (m *PhoneActionCallEmpty) Reset()         { *m = PhoneActionCallEmpty{} }
func (m *PhoneActionCallEmpty) String() string { return proto.CompactTextString(m) }
func (*PhoneActionCallEmpty) ProtoMessage()    {}
func (*PhoneActionCallEmpty) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{6}
}
func (m *PhoneActionCallEmpty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneActionCallEmpty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneActionCallEmpty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneActionCallEmpty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneActionCallEmpty.Merge(m, src)
}
func (m *PhoneActionCallEmpty) XXX_Size() int {
	return m.Size()
}
func (m *PhoneActionCallEmpty) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneActionCallEmpty.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneActionCallEmpty proto.InternalMessageInfo

func (m *PhoneActionCallEmpty) GetEmpty() bool {
	if m != nil {
		return m.Empty
	}
	return false
}

// PhoneActionAccepted
type PhoneActionAccepted struct {
	SDP string `protobuf:"bytes,1,req,name=SDP" json:"SDP"`
}

func (m *PhoneActionAccepted) Reset()         { *m = PhoneActionAccepted{} }
func (m *PhoneActionAccepted) String() string { return proto.CompactTextString(m) }
func (*PhoneActionAccepted) ProtoMessage()    {}
func (*PhoneActionAccepted) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{7}
}
func (m *PhoneActionAccepted) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneActionAccepted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneActionAccepted.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneActionAccepted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneActionAccepted.Merge(m, src)
}
func (m *PhoneActionAccepted) XXX_Size() int {
	return m.Size()
}
func (m *PhoneActionAccepted) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneActionAccepted.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneActionAccepted proto.InternalMessageInfo

func (m *PhoneActionAccepted) GetSDP() string {
	if m != nil {
		return m.SDP
	}
	return ""
}

// PhoneActionRequested
type PhoneActionRequested struct {
	SDP string `protobuf:"bytes,1,req,name=SDP" json:"SDP"`
}

func (m *PhoneActionRequested) Reset()         { *m = PhoneActionRequested{} }
func (m *PhoneActionRequested) String() string { return proto.CompactTextString(m) }
func (*PhoneActionRequested) ProtoMessage()    {}
func (*PhoneActionRequested) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{8}
}
func (m *PhoneActionRequested) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneActionRequested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneActionRequested.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneActionRequested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneActionRequested.Merge(m, src)
}
func (m *PhoneActionRequested) XXX_Size() int {
	return m.Size()
}
func (m *PhoneActionRequested) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneActionRequested.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneActionRequested proto.InternalMessageInfo

func (m *PhoneActionRequested) GetSDP() string {
	if m != nil {
		return m.SDP
	}
	return ""
}

// PhoneActionCallWaiting
type PhoneActionCallWaiting struct {
	Empty bool `protobuf:"varint,1,opt,name=Empty" json:"Empty"`
}

func (m *PhoneActionCallWaiting) Reset()         { *m = PhoneActionCallWaiting{} }
func (m *PhoneActionCallWaiting) String() string { return proto.CompactTextString(m) }
func (*PhoneActionCallWaiting) ProtoMessage()    {}
func (*PhoneActionCallWaiting) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{9}
}
func (m *PhoneActionCallWaiting) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneActionCallWaiting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneActionCallWaiting.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneActionCallWaiting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneActionCallWaiting.Merge(m, src)
}
func (m *PhoneActionCallWaiting) XXX_Size() int {
	return m.Size()
}
func (m *PhoneActionCallWaiting) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneActionCallWaiting.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneActionCallWaiting proto.InternalMessageInfo

func (m *PhoneActionCallWaiting) GetEmpty() bool {
	if m != nil {
		return m.Empty
	}
	return false
}

// PhoneActionDiscarded
type PhoneActionDiscarded struct {
	Duration int32         `protobuf:"varint,1,req,name=Duration" json:"Duration"`
	Video    bool          `protobuf:"varint,2,req,name=Video" json:"Video"`
	Reason   DiscardReason `protobuf:"varint,3,req,name=Reason,enum=msg.DiscardReason" json:"Reason"`
}

func (m *PhoneActionDiscarded) Reset()         { *m = PhoneActionDiscarded{} }
func (m *PhoneActionDiscarded) String() string { return proto.CompactTextString(m) }
func (*PhoneActionDiscarded) ProtoMessage()    {}
func (*PhoneActionDiscarded) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8b8a723e6958ad9, []int{10}
}
func (m *PhoneActionDiscarded) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneActionDiscarded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneActionDiscarded.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneActionDiscarded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneActionDiscarded.Merge(m, src)
}
func (m *PhoneActionDiscarded) XXX_Size() int {
	return m.Size()
}
func (m *PhoneActionDiscarded) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneActionDiscarded.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneActionDiscarded proto.InternalMessageInfo

func (m *PhoneActionDiscarded) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *PhoneActionDiscarded) GetVideo() bool {
	if m != nil {
		return m.Video
	}
	return false
}

func (m *PhoneActionDiscarded) GetReason() DiscardReason {
	if m != nil {
		return m.Reason
	}
	return DiscardReasonUnknown
}

func init() {
	proto.RegisterEnum("msg.DiscardReason", DiscardReason_name, DiscardReason_value)
	proto.RegisterEnum("msg.PhoneCallAction", PhoneCallAction_name, PhoneCallAction_value)
	proto.RegisterType((*PhoneAcceptCall)(nil), "msg.PhoneAcceptCall")
	proto.RegisterType((*PhoneRequestCall)(nil), "msg.PhoneRequestCall")
	proto.RegisterType((*PhoneDiscardCall)(nil), "msg.PhoneDiscardCall")
	proto.RegisterType((*PhoneReceivedCall)(nil), "msg.PhoneReceivedCall")
	proto.RegisterType((*PhoneSetCallRating)(nil), "msg.PhoneSetCallRating")
	proto.RegisterType((*PhoneCall)(nil), "msg.PhoneCall")
	proto.RegisterType((*PhoneActionCallEmpty)(nil), "msg.PhoneActionCallEmpty")
	proto.RegisterType((*PhoneActionAccepted)(nil), "msg.PhoneActionAccepted")
	proto.RegisterType((*PhoneActionRequested)(nil), "msg.PhoneActionRequested")
	proto.RegisterType((*PhoneActionCallWaiting)(nil), "msg.PhoneActionCallWaiting")
	proto.RegisterType((*PhoneActionDiscarded)(nil), "msg.PhoneActionDiscarded")
}

func init() { proto.RegisterFile("chat.phone.proto", fileDescriptor_d8b8a723e6958ad9) }

var fileDescriptor_d8b8a723e6958ad9 = []byte{
	// 784 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xc1, 0x4e, 0xf3, 0x46,
	0x10, 0xc7, 0xb3, 0xb6, 0x93, 0x2f, 0x19, 0x0a, 0xdd, 0x6f, 0x3f, 0x1a, 0xac, 0xb4, 0x72, 0x2d,
	0x1f, 0xaa, 0x08, 0x89, 0x40, 0x53, 0x5a, 0xca, 0x11, 0x70, 0x25, 0x72, 0xa8, 0x8a, 0x1c, 0xd1,
	0x9e, 0x8d, 0xbd, 0x24, 0x56, 0xc9, 0x3a, 0xf5, 0xda, 0xa0, 0xbc, 0x40, 0x2f, 0xbd, 0xf4, 0xd4,
	0x17, 0xaa, 0x54, 0x71, 0xe4, 0xd8, 0x13, 0x6a, 0xe1, 0x45, 0xaa, 0x5d, 0xdb, 0x89, 0x0d, 0x76,
	0xc4, 0xa1, 0xa7, 0xd8, 0xbf, 0xff, 0xee, 0xcc, 0xec, 0xcc, 0x7f, 0x1d, 0xc0, 0xde, 0xd4, 0x8d,
	0x07, 0xf3, 0x69, 0xc8, 0xe8, 0x60, 0x1e, 0x85, 0x71, 0x48, 0xd4, 0x19, 0x9f, 0xf4, 0xb0, 0x17,
	0x46, 0x74, 0x10, 0x2f, 0xe6, 0x94, 0xa7, 0xb8, 0xb7, 0x37, 0x09, 0xe2, 0x69, 0x72, 0x35, 0xf0,
	0xc2, 0xd9, 0xfe, 0x24, 0x9c, 0x84, 0xfb, 0x12, 0x5f, 0x25, 0xd7, 0xf2, 0x4d, 0xbe, 0xc8, 0xa7,
	0x74, 0xb9, 0xb5, 0x80, 0x8f, 0x2f, 0x44, 0xd0, 0x13, 0xcf, 0xa3, 0xf3, 0xf8, 0xcc, 0xbd, 0xb9,
	0x21, 0x06, 0xb4, 0xc4, 0xef, 0xc8, 0xd6, 0x91, 0xa9, 0xf4, 0xd5, 0xd3, 0xd6, 0xfd, 0xe3, 0xe7,
	0x8d, 0x03, 0xe4, 0x64, 0x94, 0x58, 0xa0, 0x5d, 0x50, 0x1a, 0xe9, 0x8a, 0xa9, 0xf4, 0x37, 0x86,
	0x5b, 0x83, 0x19, 0x9f, 0x0c, 0x46, 0x6c, 0x9e, 0xc4, 0x97, 0x9c, 0x46, 0x8e, 0xd4, 0x88, 0x05,
	0x9d, 0x13, 0xc6, 0xef, 0x68, 0x34, 0xb6, 0x2f, 0x74, 0xd5, 0x54, 0xfa, 0x9d, 0x53, 0x4d, 0x84,
	0x71, 0x56, 0xd8, 0xfa, 0x03, 0x01, 0x96, 0xb9, 0x1d, 0xfa, 0x4b, 0x42, 0x79, 0x9a, 0x3c, 0x0f,
	0x8e, 0xd6, 0x04, 0x37, 0xa1, 0xfd, 0xc3, 0xf5, 0x75, 0x1a, 0x5b, 0x29, 0xc4, 0x5e, 0x52, 0xd2,
	0x83, 0xe6, 0x8f, 0x81, 0x4f, 0x43, 0x99, 0xba, 0x9d, 0xc9, 0x29, 0x12, 0xbb, 0x1d, 0x97, 0xf9,
	0xe1, 0x6c, 0x64, 0xeb, 0x9a, 0x3c, 0x60, 0xb6, 0x3b, 0xa7, 0xd6, 0x5f, 0x79, 0x61, 0x76, 0xc0,
	0x3d, 0x37, 0xf2, 0xff, 0xb7, 0xae, 0x98, 0xd0, 0xb6, 0x93, 0xc8, 0x8d, 0x83, 0x90, 0xc9, 0xca,
	0x9a, 0x79, 0xea, 0x9c, 0xae, 0x0a, 0xd7, 0x5e, 0x17, 0x7e, 0x00, 0x2d, 0x87, 0xba, 0x3c, 0x64,
	0x7a, 0xd3, 0x54, 0xfa, 0x5b, 0x43, 0x22, 0x73, 0x64, 0x35, 0xa6, 0x4a, 0xb6, 0x21, 0x5b, 0x67,
	0x1d, 0xc1, 0xfb, 0xac, 0xc1, 0x1e, 0x0d, 0x6e, 0xa9, 0xff, 0xd6, 0x0e, 0x8b, 0xd1, 0x10, 0xb9,
	0x73, 0x4c, 0xe5, 0x58, 0x1c, 0x37, 0x0e, 0xd8, 0xe4, 0x4d, 0xc3, 0xb1, 0xa0, 0x33, 0x62, 0x41,
	0x1c, 0xb8, 0x71, 0x98, 0x36, 0x23, 0x3f, 0xc5, 0x0a, 0x13, 0x1d, 0x34, 0xc7, 0x8d, 0x69, 0xa9,
	0x07, 0x92, 0x10, 0x03, 0xde, 0x9d, 0x85, 0xb3, 0x19, 0x65, 0xb1, 0xae, 0x99, 0x68, 0x39, 0xd9,
	0x1c, 0x5a, 0x7f, 0x22, 0xe8, 0xc8, 0xc2, 0xe4, 0x51, 0xba, 0xa0, 0xbc, 0x9a, 0x87, 0x32, 0xb2,
	0xc5, 0xac, 0x44, 0x45, 0x23, 0x5b, 0x16, 0x50, 0x98, 0x55, 0x4a, 0xc9, 0x17, 0x00, 0xc2, 0xef,
	0x9c, 0x9f, 0xbb, 0x7c, 0x2a, 0xab, 0x68, 0x2d, 0xd7, 0x14, 0x94, 0xb5, 0xd3, 0xd0, 0x41, 0xb3,
	0xc5, 0x19, 0x9a, 0x05, 0x0b, 0x49, 0x42, 0x4c, 0xd8, 0x18, 0xc7, 0x09, 0x1b, 0xd3, 0xe8, 0x96,
	0x46, 0x5c, 0x6f, 0x99, 0x6a, 0xbf, 0xe3, 0x14, 0x91, 0x35, 0x84, 0xed, 0xec, 0xd2, 0x89, 0xa1,
	0x8b, 0xa3, 0x7c, 0x37, 0x9b, 0xc7, 0x0b, 0x91, 0x4f, 0x3e, 0xe8, 0xc8, 0x44, 0xab, 0x7c, 0x12,
	0x59, 0x7b, 0xf0, 0xa1, 0xb0, 0x27, 0xbd, 0xae, 0xd4, 0x27, 0x5d, 0x50, 0xc5, 0x35, 0x40, 0x85,
	0x6b, 0x20, 0x80, 0x35, 0x28, 0xa5, 0xc8, 0x6e, 0xd8, 0x9a, 0xf5, 0x87, 0xd0, 0x7d, 0x51, 0xd2,
	0x4f, 0x6e, 0x20, 0x87, 0xbe, 0xae, 0xa8, 0x5f, 0x51, 0x29, 0x4d, 0xe6, 0x45, 0xea, 0x97, 0x9c,
	0x8e, 0xd6, 0x3b, 0x5d, 0x59, 0xe7, 0x74, 0xf5, 0x6d, 0x4e, 0xdf, 0xfd, 0x4d, 0x85, 0xcd, 0x92,
	0x4e, 0x74, 0xd8, 0x2e, 0x81, 0x4b, 0xf6, 0x33, 0x0b, 0xef, 0x18, 0x6e, 0x90, 0x1d, 0xf8, 0x50,
	0x52, 0xbe, 0x0f, 0x38, 0xa7, 0x3e, 0x46, 0xe4, 0x13, 0x78, 0x5f, 0xce, 0x91, 0xf0, 0x05, 0x56,
	0x5e, 0xad, 0x3f, 0x77, 0xd9, 0x24, 0x99, 0x63, 0x95, 0x7c, 0x0a, 0x3b, 0x25, 0x41, 0xbc, 0x84,
	0x8c, 0x51, 0x2f, 0xc6, 0x1a, 0xe9, 0x41, 0xb7, 0x24, 0x3a, 0x94, 0x8b, 0xe9, 0xfb, 0x5f, 0xe2,
	0x66, 0xad, 0x36, 0xc4, 0xad, 0x5a, 0xed, 0x2b, 0xfc, 0xae, 0x56, 0x3b, 0xc4, 0xed, 0x5a, 0xed,
	0x6b, 0xdc, 0xa9, 0xd5, 0xbe, 0xc1, 0x50, 0xab, 0x1d, 0xe1, 0x8d, 0x5a, 0xed, 0x5b, 0xfc, 0x51,
	0xad, 0x76, 0x8c, 0x37, 0x77, 0x1f, 0x95, 0xec, 0x5f, 0x45, 0xf8, 0x28, 0xb5, 0x06, 0x21, 0xb0,
	0xb5, 0x44, 0xd2, 0x3c, 0xb8, 0x21, 0x1a, 0x5e, 0x58, 0x96, 0x3a, 0x1a, 0x23, 0xd2, 0xcd, 0x3e,
	0x3e, 0xf2, 0xcb, 0x93, 0x3b, 0x17, 0x2b, 0x62, 0xa4, 0x4b, 0x5e, 0x70, 0x28, 0x56, 0x4b, 0x3b,
	0x96, 0x26, 0xc4, 0xda, 0x8b, 0x48, 0xab, 0x01, 0x54, 0x71, 0xd1, 0xfc, 0x2a, 0x2e, 0x1a, 0x5f,
	0xc5, 0x45, 0xd3, 0xab, 0xb8, 0x68, 0x78, 0x15, 0x17, 0xcd, 0xae, 0xe2, 0xa2, 0xd1, 0x55, 0x5c,
	0x34, 0xb9, 0x8a, 0x1f, 0xe3, 0xcd, 0xd3, 0xcf, 0x1e, 0xfe, 0x35, 0x1a, 0xf7, 0x4f, 0x06, 0x7a,
	0x78, 0x32, 0xd0, 0x3f, 0x4f, 0x06, 0xfa, 0xfd, 0xd9, 0x68, 0x3c, 0x3c, 0x1b, 0x8d, 0xbf, 0x9f,
	0x8d, 0xc6, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x07, 0x57, 0xff, 0x7c, 0x2c, 0x08, 0x00, 0x00,
}

func (m *PhoneAcceptCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneAcceptCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneAcceptCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.AnswerSDP)
	copy(dAtA[i:], m.AnswerSDP)
	i = encodeVarintChatPhone(dAtA, i, uint64(len(m.AnswerSDP)))
	i--
	dAtA[i] = 0x1a
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatPhone(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i = encodeVarintChatPhone(dAtA, i, uint64(m.CallID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *PhoneRequestCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneRequestCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneRequestCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatPhone(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x20
	i--
	if m.Video {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x18
	i -= len(m.OfferSDP)
	copy(dAtA[i:], m.OfferSDP)
	i = encodeVarintChatPhone(dAtA, i, uint64(len(m.OfferSDP)))
	i--
	dAtA[i] = 0x12
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatPhone(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhoneDiscardCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneDiscardCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneDiscardCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatPhone(dAtA, i, uint64(m.Reason))
	i--
	dAtA[i] = 0x28
	i--
	if m.Video {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x20
	i = encodeVarintChatPhone(dAtA, i, uint64(m.Duration))
	i--
	dAtA[i] = 0x18
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatPhone(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i = encodeVarintChatPhone(dAtA, i, uint64(m.CallID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *PhoneReceivedCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneReceivedCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneReceivedCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatPhone(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhoneSetCallRating) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneSetCallRating) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneSetCallRating) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Comment)
	copy(dAtA[i:], m.Comment)
	i = encodeVarintChatPhone(dAtA, i, uint64(len(m.Comment)))
	i--
	dAtA[i] = 0x22
	i = encodeVarintChatPhone(dAtA, i, uint64(m.Rate))
	i--
	dAtA[i] = 0x18
	i--
	if m.Initiator {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatPhone(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhoneCall) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneCall) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneCall) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.StunServers) > 0 {
		for iNdEx := len(m.StunServers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.StunServers[iNdEx])
			copy(dAtA[i:], m.StunServers[iNdEx])
			i = encodeVarintChatPhone(dAtA, i, uint64(len(m.StunServers[iNdEx])))
			i--
			dAtA[i] = 0x32
		}
	}
	i = encodeVarintChatPhone(dAtA, i, uint64(m.Date))
	i--
	dAtA[i] = 0x28
	i--
	if m.Video {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x20
	i -= 8
	encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(m.AccessHash))
	i--
	dAtA[i] = 0x19
	i = encodeVarintChatPhone(dAtA, i, uint64(m.UserID))
	i--
	dAtA[i] = 0x10
	i = encodeVarintChatPhone(dAtA, i, uint64(m.ID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *PhoneActionCallEmpty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneActionCallEmpty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneActionCallEmpty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.Empty {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *PhoneActionAccepted) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneActionAccepted) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneActionAccepted) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.SDP)
	copy(dAtA[i:], m.SDP)
	i = encodeVarintChatPhone(dAtA, i, uint64(len(m.SDP)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *PhoneActionRequested) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneActionRequested) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneActionRequested) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.SDP)
	copy(dAtA[i:], m.SDP)
	i = encodeVarintChatPhone(dAtA, i, uint64(len(m.SDP)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *PhoneActionCallWaiting) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneActionCallWaiting) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneActionCallWaiting) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.Empty {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *PhoneActionDiscarded) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneActionDiscarded) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneActionDiscarded) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatPhone(dAtA, i, uint64(m.Reason))
	i--
	dAtA[i] = 0x18
	i--
	if m.Video {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	i = encodeVarintChatPhone(dAtA, i, uint64(m.Duration))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func encodeVarintChatPhone(dAtA []byte, offset int, v uint64) int {
	offset -= sovChatPhone(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PhoneAcceptCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatPhone(uint64(m.CallID))
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatPhone(uint64(l))
	}
	l = len(m.AnswerSDP)
	n += 1 + l + sovChatPhone(uint64(l))
	return n
}

func (m *PhoneRequestCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatPhone(uint64(l))
	}
	l = len(m.OfferSDP)
	n += 1 + l + sovChatPhone(uint64(l))
	n += 2
	n += 1 + sovChatPhone(uint64(m.RandomID))
	return n
}

func (m *PhoneDiscardCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatPhone(uint64(m.CallID))
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatPhone(uint64(l))
	}
	n += 1 + sovChatPhone(uint64(m.Duration))
	n += 2
	n += 1 + sovChatPhone(uint64(m.Reason))
	return n
}

func (m *PhoneReceivedCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatPhone(uint64(l))
	}
	return n
}

func (m *PhoneSetCallRating) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatPhone(uint64(l))
	}
	n += 2
	n += 1 + sovChatPhone(uint64(m.Rate))
	l = len(m.Comment)
	n += 1 + l + sovChatPhone(uint64(l))
	return n
}

func (m *PhoneCall) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatPhone(uint64(m.ID))
	n += 1 + sovChatPhone(uint64(m.UserID))
	n += 9
	n += 2
	n += 1 + sovChatPhone(uint64(m.Date))
	if len(m.StunServers) > 0 {
		for _, s := range m.StunServers {
			l = len(s)
			n += 1 + l + sovChatPhone(uint64(l))
		}
	}
	return n
}

func (m *PhoneActionCallEmpty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}

func (m *PhoneActionAccepted) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SDP)
	n += 1 + l + sovChatPhone(uint64(l))
	return n
}

func (m *PhoneActionRequested) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SDP)
	n += 1 + l + sovChatPhone(uint64(l))
	return n
}

func (m *PhoneActionCallWaiting) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}

func (m *PhoneActionDiscarded) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatPhone(uint64(m.Duration))
	n += 2
	n += 1 + sovChatPhone(uint64(m.Reason))
	return n
}

func sovChatPhone(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozChatPhone(x uint64) (n int) {
	return sovChatPhone(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PhoneAcceptCall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneAcceptCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneAcceptCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallID", wireType)
			}
			m.CallID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputUser{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnswerSDP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AnswerSDP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("CallID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AnswerSDP")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneRequestCall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneRequestCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneRequestCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputUser{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OfferSDP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OfferSDP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("OfferSDP")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Video")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneDiscardCall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneDiscardCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneDiscardCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallID", wireType)
			}
			m.CallID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CallID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputUser{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= DiscardReason(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000010)
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("CallID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Duration")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Video")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Reason")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneReceivedCall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneReceivedCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneReceivedCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputUser{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneSetCallRating) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneSetCallRating: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneSetCallRating: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputUser{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Initiator", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Initiator = bool(v != 0)
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rate", wireType)
			}
			m.Rate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Rate |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Initiator")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Rate")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneCall) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneCall: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneCall: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			m.UserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessHash", wireType)
			}
			m.AccessHash = 0
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessHash = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			m.Date = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Date |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StunServers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StunServers = append(m.StunServers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("UserID")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AccessHash")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Video")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Date")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneActionCallEmpty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneActionCallEmpty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneActionCallEmpty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Empty", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Empty = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneActionAccepted) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneActionAccepted: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneActionAccepted: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SDP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SDP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("SDP")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneActionRequested) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneActionRequested: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneActionRequested: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SDP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatPhone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatPhone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SDP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("SDP")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneActionCallWaiting) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneActionCallWaiting: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneActionCallWaiting: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Empty", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Empty = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneActionDiscarded) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneActionDiscarded: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneActionDiscarded: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Video", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Video = bool(v != 0)
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			m.Reason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reason |= DiscardReason(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipChatPhone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatPhone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Duration")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Video")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Reason")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipChatPhone(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowChatPhone
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatPhone
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthChatPhone
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupChatPhone
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthChatPhone
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthChatPhone        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowChatPhone          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupChatPhone = fmt.Errorf("proto: unexpected end of group")
)
