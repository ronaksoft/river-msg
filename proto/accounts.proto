syntax = "proto3";
package msg;
import "core.types.proto";
option go_package = './;msg';

// AccountSetNotifySettings
// @Function
// @Return: Bool
message AccountSetNotifySettings {
    InputPeer Peer = 1;
    PeerNotifySettings Settings = 2;
}

// AccountGetNotifySettings
// @Function
// @Return: NotifySettings
message AccountGetNotifySettings {
    InputPeer Peer = 1;
}

// AccountRegisterDevice
// @Function
// @Return: Bool
message AccountRegisterDevice {
    string Token = 2;
    string DeviceModel = 3;
    string SystemVersion = 4;
    string AppVersion = 5;
    string LangCode = 6;
    PushTokenProvider TokenType = 7;
    string ClientID = 8;
}

// AccountUnregisterDevice
// @Function
// @Return: Bool
message AccountUnregisterDevice {
    int32 TokenType = 1;
    string Token = 2;
}

// AccountUpdateProfile
// @Function
// @Return: UserFull
message AccountUpdateProfile {
    string FirstName = 1;
    string LastName = 2;
    string Bio = 3;
}

// AccountCheckUsername
// @Function
// @Return: Bool
message AccountCheckUsername {
    string Username = 1;
}

// AccountUpdateUsername
// @Function
// @Return: UserFull
message AccountUpdateUsername {
    string Username = 1;
}

// AccountUploadPhoto
// @Function
// @Return: Bool / UserPhoto
message AccountUploadPhoto {
    InputFile File = 1;
    bool ReturnObject = 2;
}

// AccountUpdatePhoto
// @Function
// @Return: Bool
message AccountUpdatePhoto {
    int64 PhotoID = 1 [jstype = JS_STRING];
}

// AccountSetWebPhoto
// @Function
// @Return: UserPhoto
message AccountSetWebPhoto {
    InputWebLocation BigPhoto = 1;
    InputWebLocation SmallPhoto = 2;
}

// AccountRemotePhoto
// @Function
// @Return: Bool
message AccountRemovePhoto {
    int64 PhotoID = 1 [jstype = JS_STRING];
}

// AccountSendChangePhoneCode
// @Function
// @Return: AuthSentCode
message AccountSendChangePhoneCode {
    string Phone = 1;
    string AppHash = 2;
}

// AccountResendChangePhoneCode
// @Function
// @Return: Bool
message AccountResendChangePhoneCode {
    string Phone = 1;
    string PhoneCodeHash = 2;
}

// AccountChangePhone
// @Function
// @Return: User
message AccountChangePhone {
    string Phone = 1;
    string PhoneCodeHash = 2;
    string PhoneCode = 3;
    InputPassword Password = 4;
}

// AccountSetPrivacy
// @Function
// @Return: AccountPrivacyRules
message AccountSetPrivacy {
    repeated PrivacyRule ChatInvite = 1;
    repeated PrivacyRule LastSeen = 2;
    repeated PrivacyRule PhoneNumber = 3;
    repeated PrivacyRule ProfilePhoto = 4;
    repeated PrivacyRule ForwardedMessage = 5;
    repeated PrivacyRule Call = 6;
}

// AccountGetPrivacy
// @Function
// @Return: AccountPrivacyRules
message AccountGetPrivacy {
    PrivacyKey Key = 1;
}

// AccountGetAuthorizations
// @Function
// @Returns: Authorizations
message AccountGetAuthorizations {
}

// AccountResetAuthorization
// @Function
// @Returns: Bool
message AccountResetAuthorization {
    int64 AuthID = 1 [jstype = JS_STRING];
}

// AccountUpdateStatus
// @Function
// @Returns: Bool
message AccountUpdateStatus {
    bool Online = 1;
}

// AccountSetLang
// @Function
// @Returns: Bool
message AccountSetLang {
    string LangCode = 1;
}

// AccountGetPassword
// @Function
// @Returns: AccountPassword
// Obtain configuration for two-factor authorization with password
message AccountGetPassword {
}

// AccountGetPasswordSettings
// @Function
// @Returns: AccountPasswordSettings
// Get private info associated to the password info (recovery email & so on)
message AccountGetPasswordSettings {
    InputPassword Password = 1;
}

// AccountUpdatePassword
// @Function
// @Returns: Bool
message AccountUpdatePasswordSettings {
    InputPassword Password = 1;
    bytes PasswordHash = 2;
    int64 Algorithm = 3;
    bytes AlgorithmData = 4;
    string Hint = 6;
    repeated SecurityQuestion Questions = 7;
}

// AccountRecoverPassword
// @Function
// @Returns: AccountPassword, AuthAuthorization
message AccountRecoverPassword {
    repeated SecurityAnswer Answers = 1;
    int64 Algorithm = 2;
    bytes AlgorithmData = 3;
    int64 SrpID = 4 [jstype = JS_STRING];
}

// AccountGetTeams
// @Function
// @Returns: TeamsMany
message AccountGetTeams {}

// AccountPasswordSettings
// Private info associated to the password info (recovery email and so on)
message AccountPasswordSettings {
    string Hint = 2;
    repeated RecoveryQuestion Questions = 3;
}

// SecurityQuestions
message SecurityQuestions {
    repeated SecurityQuestion Questions = 1;
}

// RecoverQuestion
message RecoveryQuestion {
    int32 ID = 1;
    string Text = 2;
}

// SecurityQuestion
message SecurityQuestion {
    int32 ID = 1;
    string Text = 2;
    string Answer = 3;
}

// SecurityAnswer
message SecurityAnswer {
    int32 QuestionID = 1;
    string Answer = 2;
}

// AccountPassword
// Configuration for two-factor authorization
message AccountPassword {
    bool HasPassword = 1;
    string Hint = 2;
    int64 Algorithm = 3;
    bytes AlgorithmData = 4;
    bytes SrpB = 5;
    bytes RandomData = 6;
    int64 SrpID = 7 [jstype = JS_STRING];
    repeated RecoveryQuestion Questions = 8;
}

// AccountAuthorizations
message AccountAuthorizations {
    repeated AccountAuthorization Authorizations = 1;
}

// AccountAuthorization
message AccountAuthorization {
    int64 AuthID = 100 [jstype = JS_STRING];
    string Model = 1;
    string AppVersion = 2;
    string SystemVersion = 3;
    string LangCode = 4;
    int64 CreatedAt = 5;
    int64 ActiveAt = 6;    // @Deprecated
    string ClientIP = 7;
    int64 LastAccess = 8;
}

// AccountPrivacyRules
message AccountPrivacyRules {
    repeated PrivacyRule Rules = 1;
}

