syntax = "proto3";
package msg;
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
option (gogoproto.goproto_enum_prefix_all) = false;
option go_package = '.;msg';

/*
    Creation Time: 2018 - Nov - 28
    Created by:  (ehsan)
    Maintainers:
       1.  Ehsan N. Moosa (E2)
    Auditor: Ehsan N. Moosa (E2)
    Copyright Ronak Software Group 2018
*/

// ReplyKeyboardMarkup
message ReplyKeyboardMarkup {
    // Requests clients to hide the keyboard as soon as it's been used.
    // The keyboard will still be available, but clients will automatically display the usual letter-keyboard
    // in the chat – the user can press a special button in the input field
    // to see the custom keyboard again.
    bool SingleUse = 1;
    // Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users
    // that are @mentioned in the text of the Message object; 2) if the bot's message is a reply
    // (has reply_to_message_id), sender of the original message.
    // Example: A user requests to change the bot‘s language, bot replies to the request with a keyboard
    // to select the new language. Other users in the group don’t see the keyboard.
    bool Selective = 2;
    // Requests clients to resize the keyboard vertically for optimal fit
    // (e.g., make the keyboard smaller if there are just two rows of buttons). If not set, the custom
    // keyboard is always of the same height as the app's standard keyboard.
    bool Resize = 3;
    repeated KeyboardButtonRow Rows = 4;
}

// ReplyInlineMarkup
message ReplyInlineMarkup {
    repeated KeyboardButtonRow Rows = 1;
}

// ReplyKeyboardHide
message ReplyKeyboardHide {
    // Use this flag if you want to remove the keyboard for specific users only. Targets:
    // 1) users that are @mentioned in the text of the Message object;
    // 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.
    bool Selective = 1;
}

// ReplyKeyboardHide
// Force the user to send a reply
message ReplyKeyboardForceReply {
    // Requests clients to hide the keyboard as soon as it's been used.
    // The keyboard will still be available, but clients will automatically display the usual letter-keyboard
    // in the chat – the user can press a special button in the input field
    // to see the custom keyboard again.
    bool SingleUse = 1;
    // Use this flag if you want to remove the keyboard for specific users only. Targets:
    // 1) users that are @mentioned in the text of the Message object;
    // 2) if the bot's message is a reply (has reply_to_message_id), sender of the original message.
    bool Selective = 2;
}

// Keyboard Buttons

// KeyboardButtonRow
// This is a list of buttons
message KeyboardButtonRow {
    repeated KeyboardButtonEnvelope Buttons = 1;
}

// KeyboardButtonEnvelope
// This is an envelope for buttons
message KeyboardButtonEnvelope {
    int64 Constructor = 1;
    bytes Data = 2;
}

// Button
// This button do nothing and is just showing a text
message Button {
    string Text = 1;
}

// ButtonUrl
// Client must open the url
message ButtonUrl {
    string Text = 1;
    string Url = 2;
}

// ButtonCallback
// Client must use BotGetCallbackQuery to get a CallbackAnswer from the bot
message ButtonCallback {
    string Text = 1;
    bytes Data = 2;
}

// ButtonRequestPhone
// Button to request a user's phone number
message ButtonRequestPhone {
    string Text = 1;
}

// ButtonRequestGeoLocation
// Button to request a user's geolocation
message ButtonRequestGeoLocation {
    string Text = 1;
}

// ButtonSwitchInline
// Button to force a user to switch to inline mode Pressing the button will prompt the user
// to select one of their chats, open that chat and insert the bot‘s username and the
// specified inline query in the input field.
message ButtonSwitchInline {
    string Text = 1;
    string Query = 2;
    bool SamePeer = 3;
}

// ButtonBuy
// Button to buy a product
message ButtonBuy {
    string Text = 1;
}
