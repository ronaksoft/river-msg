syntax = "proto2";
package msg;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "core.types.proto";

option (gogoproto.goproto_enum_prefix_all) = false;

// AdminBroadcastMessage
message AdminBroadcastMessage {
    required string Body = 1;
    repeated int64 ReceiverIDs = 2;
    repeated MessageEntity Entities = 3;
    optional InputMediaType MediaType = 4;
    optional bytes MediaData = 5;
}

// AdminSetWelcomeMessage
// @Function
// @Return: Bool
message AdminSetWelcomeMessage {
    required string AccessToken = 1;
    required string Lang = 2;
    required string Template = 3;
}

// AdminGetWelcomeMessage
// @Function
// @Return: WelcomeMessagesMany
message AdminGetWelcomeMessages {
    required string AccessToken = 1;
}

// AdminDeleteWelcomeMessage
// @Function
// @Return: Bool
message AdminDeleteWelcomeMessage {
    required string AccessToken = 1;
    required string Lang = 2;
}

// AdminSetPushProvider
// @Function
// @Return: Bool
message AdminSetPushProvider {
    required string AccessToken = 1;
    required PushProvider Provider = 2;
}

// AdminGetPushProvider
// @Function
// @Return: PushProvidersMany
message AdminGetPushProviders {
    required string AccessToken = 1;
}

// AdminDeletePushProvider
// @Function
// @Return: Bool
message AdminDeletePushProvider {
    required string AccessToken = 1;
    required string Name = 2;
    required PushProviderType Type = 3;
}

// AdminSetVersion
// @Function
// @Return: Bool
message AdminSetVersion {
    required string AccessToken = 1;
    required Version Version = 2;
}

// AdminGetVersions
// @Function
// @Return: VersionsMany
message AdminGetVersions {
    required string AccessToken = 1;
}

// AdminPrivilege
enum AdminPrivilege {
    PrivilegeNone = 0;
    PrivilegeAdmin = 1;
    PrivilegeSuperAdmin = 2;
}

// AdminSetToken
// @Function
// @Return: AdminToken
message AdminSetToken {
    required string AccessToken = 1;
    required AdminPrivilege Privilege = 2;
}

// AdminDeleteToken
// @Function
// @Return: Bool
message AdminDeleteToken {
    required string AccessToken = 1;
    required string DeletedToken = 2;
}

// AdminReserveUsername
// @Function
// @Return: Bool
message AdminReserveUsername {
    required string AccessToken = 1;
    repeated string Usernames = 2;
    required bool Delete = 3;
}

// AdminGetReservedUsernames
// @Function
// @Return: ReservedUsername
message AdminGetReservedUsernames {
    required string AccessToken = 1;
}

// AdminTeamCreate
// @Function
// @Return: Team
message AdminTeamCreate {
    required string AccessToken = 1;
    required int32 Capacity = 2; // maximum number of team members
    required int64 ExpireDate = 3; // license expire time
    required bool Community = 4; // if team supports community users, send messages to team members
    required string Title = 5;
    required int64 CreatorID = 6;
}

// AdminToken
message AdminToken {
    required AdminPrivilege Privilege = 1;
    required string Token = 2;
}

// WelcomeMessagesMany
message WelcomeMessagesMany {
    repeated WelcomeMessage Messages = 1;
    required int32 Count = 2;
}

// VersionsMany
message VersionsMany {
    repeated Version Versions = 1;
    required int32 Count = 2;
}

// PushProvidersMany
message PushProvidersMany {
    repeated PushProvider Providers = 1;
    required int32 Count = 2;
}

// WelcomeMessage
message WelcomeMessage {
    required string Lang = 2;
    required string Template = 3;
}

// PushProvider
message PushProvider {
    required string Name = 1;
    required PushProviderType Type = 2;
    required bool TestMode = 3;
    optional bytes Credentials = 4;
    optional string KeyID = 5;
    optional string TeamID = 6;
    optional string Topic = 7;

}

// PushProviderType
enum PushProviderType {
    PushProviderUnknown = 0;
    PushProviderFirebase = 1;
    PushProviderApple = 2;
    PushProviderPushKit = 3;
}

// AppUpdate
message Version {
    required string Vendor = 1; // river android | river ios | nested android | nested ios
    required string Stage = 2; // debug | production | test
    required string OS = 3; // ios | android | mac | web | windows | linux
    required string MinVersion = 4;
    required string CurrentVersion = 5;
    repeated string ForcedVersions = 6;
}

// ReservedUsernames
message ReservedUsernames {
    repeated string Usernames = 1;
    required int32 Count = 2;
}