// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.accounts.proto

package msg

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// AccountPrivacyKey
type AccountPrivacyKey int32

const (
	AccountPrivacyKey_None             AccountPrivacyKey = 0
	AccountPrivacyKey_ChatInvite       AccountPrivacyKey = 1
	AccountPrivacyKey_LastSeen         AccountPrivacyKey = 2
	AccountPrivacyKey_PhoneNumber      AccountPrivacyKey = 3
	AccountPrivacyKey_ProfilePhoto     AccountPrivacyKey = 4
	AccountPrivacyKey_ForwardedMessage AccountPrivacyKey = 5
	AccountPrivacyKey_Call             AccountPrivacyKey = 6
)

var AccountPrivacyKey_name = map[int32]string{
	0: "None",
	1: "ChatInvite",
	2: "LastSeen",
	3: "PhoneNumber",
	4: "ProfilePhoto",
	5: "ForwardedMessage",
	6: "Call",
}

var AccountPrivacyKey_value = map[string]int32{
	"None":             0,
	"ChatInvite":       1,
	"LastSeen":         2,
	"PhoneNumber":      3,
	"ProfilePhoto":     4,
	"ForwardedMessage": 5,
	"Call":             6,
}

func (x AccountPrivacyKey) Enum() *AccountPrivacyKey {
	p := new(AccountPrivacyKey)
	*p = x
	return p
}

func (x AccountPrivacyKey) String() string {
	return proto.EnumName(AccountPrivacyKey_name, int32(x))
}

func (x *AccountPrivacyKey) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountPrivacyKey_value, data, "AccountPrivacyKey")
	if err != nil {
		return err
	}
	*x = AccountPrivacyKey(value)
	return nil
}

func (AccountPrivacyKey) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{0}
}

// AccountPrivacyValue
type AccountPrivacyType int32

const (
	AccountPrivacyType_AllowAll         AccountPrivacyType = 0
	AccountPrivacyType_AllowContacts    AccountPrivacyType = 1
	AccountPrivacyType_DisallowAll      AccountPrivacyType = 2
	AccountPrivacyType_DisallowContacts AccountPrivacyType = 3
	//    Order is very important, exceptions are started from 101
	AccountPrivacyType_AllowUsers    AccountPrivacyType = 101
	AccountPrivacyType_DisallowUsers AccountPrivacyType = 102
)

var AccountPrivacyType_name = map[int32]string{
	0:   "AllowAll",
	1:   "AllowContacts",
	2:   "DisallowAll",
	3:   "DisallowContacts",
	101: "AllowUsers",
	102: "DisallowUsers",
}

var AccountPrivacyType_value = map[string]int32{
	"AllowAll":         0,
	"AllowContacts":    1,
	"DisallowAll":      2,
	"DisallowContacts": 3,
	"AllowUsers":       101,
	"DisallowUsers":    102,
}

func (x AccountPrivacyType) Enum() *AccountPrivacyType {
	p := new(AccountPrivacyType)
	*p = x
	return p
}

func (x AccountPrivacyType) String() string {
	return proto.EnumName(AccountPrivacyType_name, int32(x))
}

func (x *AccountPrivacyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountPrivacyType_value, data, "AccountPrivacyType")
	if err != nil {
		return err
	}
	*x = AccountPrivacyType(value)
	return nil
}

func (AccountPrivacyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{1}
}

// AccountSetNotifySettings
// @Function
// @Return: Bool
type AccountSetNotifySettings struct {
	Peer     *InputPeer          `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	Settings *PeerNotifySettings `protobuf:"bytes,2,req,name=Settings" json:"Settings,omitempty"`
}

func (m *AccountSetNotifySettings) Reset()         { *m = AccountSetNotifySettings{} }
func (m *AccountSetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*AccountSetNotifySettings) ProtoMessage()    {}
func (*AccountSetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{0}
}
func (m *AccountSetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountSetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountSetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountSetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSetNotifySettings.Merge(m, src)
}
func (m *AccountSetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *AccountSetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSetNotifySettings proto.InternalMessageInfo

func (m *AccountSetNotifySettings) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *AccountSetNotifySettings) GetSettings() *PeerNotifySettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// AccountGetNotifySettings
// @Function
// @Return: NotifySettings
type AccountGetNotifySettings struct {
	Peer *InputPeer `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
}

func (m *AccountGetNotifySettings) Reset()         { *m = AccountGetNotifySettings{} }
func (m *AccountGetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*AccountGetNotifySettings) ProtoMessage()    {}
func (*AccountGetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{1}
}
func (m *AccountGetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetNotifySettings.Merge(m, src)
}
func (m *AccountGetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetNotifySettings proto.InternalMessageInfo

func (m *AccountGetNotifySettings) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// AccountRegisterDevice
// @Function
// @Return: Bool
type AccountRegisterDevice struct {
	Token         string            `protobuf:"bytes,2,req,name=Token" json:"Token"`
	DeviceModel   string            `protobuf:"bytes,3,req,name=DeviceModel" json:"DeviceModel"`
	SystemVersion string            `protobuf:"bytes,4,req,name=SystemVersion" json:"SystemVersion"`
	AppVersion    string            `protobuf:"bytes,5,req,name=AppVersion" json:"AppVersion"`
	LangCode      string            `protobuf:"bytes,6,req,name=LangCode" json:"LangCode"`
	TokenType     PushTokenProvider `protobuf:"varint,7,req,name=TokenType,enum=msg.PushTokenProvider" json:"TokenType"`
	ClientID      string            `protobuf:"bytes,8,req,name=ClientID" json:"ClientID"`
}

func (m *AccountRegisterDevice) Reset()         { *m = AccountRegisterDevice{} }
func (m *AccountRegisterDevice) String() string { return proto.CompactTextString(m) }
func (*AccountRegisterDevice) ProtoMessage()    {}
func (*AccountRegisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{2}
}
func (m *AccountRegisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountRegisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountRegisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountRegisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRegisterDevice.Merge(m, src)
}
func (m *AccountRegisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *AccountRegisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRegisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRegisterDevice proto.InternalMessageInfo

func (m *AccountRegisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AccountRegisterDevice) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *AccountRegisterDevice) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *AccountRegisterDevice) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *AccountRegisterDevice) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *AccountRegisterDevice) GetTokenType() PushTokenProvider {
	if m != nil {
		return m.TokenType
	}
	return PushTokenFirebase
}

func (m *AccountRegisterDevice) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

// AccountUnregisterDevice
// @Function
// @Return: Bool
type AccountUnregisterDevice struct {
	TokenType int32  `protobuf:"varint,1,req,name=TokenType" json:"TokenType"`
	Token     string `protobuf:"bytes,2,req,name=Token" json:"Token"`
}

func (m *AccountUnregisterDevice) Reset()         { *m = AccountUnregisterDevice{} }
func (m *AccountUnregisterDevice) String() string { return proto.CompactTextString(m) }
func (*AccountUnregisterDevice) ProtoMessage()    {}
func (*AccountUnregisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{3}
}
func (m *AccountUnregisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUnregisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUnregisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUnregisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUnregisterDevice.Merge(m, src)
}
func (m *AccountUnregisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *AccountUnregisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUnregisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUnregisterDevice proto.InternalMessageInfo

func (m *AccountUnregisterDevice) GetTokenType() int32 {
	if m != nil {
		return m.TokenType
	}
	return 0
}

func (m *AccountUnregisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// AccountUpdateProfile
// @Function
// @Return: UserFull
type AccountUpdateProfile struct {
	FirstName string `protobuf:"bytes,1,req,name=FirstName" json:"FirstName"`
	LastName  string `protobuf:"bytes,2,req,name=LastName" json:"LastName"`
	Bio       string `protobuf:"bytes,3,opt,name=Bio" json:"Bio"`
}

func (m *AccountUpdateProfile) Reset()         { *m = AccountUpdateProfile{} }
func (m *AccountUpdateProfile) String() string { return proto.CompactTextString(m) }
func (*AccountUpdateProfile) ProtoMessage()    {}
func (*AccountUpdateProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{4}
}
func (m *AccountUpdateProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUpdateProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUpdateProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUpdateProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdateProfile.Merge(m, src)
}
func (m *AccountUpdateProfile) XXX_Size() int {
	return m.Size()
}
func (m *AccountUpdateProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdateProfile.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdateProfile proto.InternalMessageInfo

func (m *AccountUpdateProfile) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *AccountUpdateProfile) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *AccountUpdateProfile) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

// AccountCheckUsername
// @Function
// @Return: Bool
type AccountCheckUsername struct {
	Username string `protobuf:"bytes,1,req,name=Username" json:"Username"`
}

func (m *AccountCheckUsername) Reset()         { *m = AccountCheckUsername{} }
func (m *AccountCheckUsername) String() string { return proto.CompactTextString(m) }
func (*AccountCheckUsername) ProtoMessage()    {}
func (*AccountCheckUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{5}
}
func (m *AccountCheckUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountCheckUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountCheckUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountCheckUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountCheckUsername.Merge(m, src)
}
func (m *AccountCheckUsername) XXX_Size() int {
	return m.Size()
}
func (m *AccountCheckUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountCheckUsername.DiscardUnknown(m)
}

var xxx_messageInfo_AccountCheckUsername proto.InternalMessageInfo

func (m *AccountCheckUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// AccountUpdateUsername
// @Function
// @Return: UserFull
type AccountUpdateUsername struct {
	Username string `protobuf:"bytes,1,req,name=Username" json:"Username"`
}

func (m *AccountUpdateUsername) Reset()         { *m = AccountUpdateUsername{} }
func (m *AccountUpdateUsername) String() string { return proto.CompactTextString(m) }
func (*AccountUpdateUsername) ProtoMessage()    {}
func (*AccountUpdateUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{6}
}
func (m *AccountUpdateUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUpdateUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUpdateUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUpdateUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdateUsername.Merge(m, src)
}
func (m *AccountUpdateUsername) XXX_Size() int {
	return m.Size()
}
func (m *AccountUpdateUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdateUsername.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdateUsername proto.InternalMessageInfo

func (m *AccountUpdateUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// AccountUploadPhoto
// @Function
// @Return: Bool / UserPhoto
type AccountUploadPhoto struct {
	File         *InputFile `protobuf:"bytes,1,req,name=File" json:"File,omitempty"`
	ReturnObject bool       `protobuf:"varint,2,opt,name=ReturnObject" json:"ReturnObject"`
}

func (m *AccountUploadPhoto) Reset()         { *m = AccountUploadPhoto{} }
func (m *AccountUploadPhoto) String() string { return proto.CompactTextString(m) }
func (*AccountUploadPhoto) ProtoMessage()    {}
func (*AccountUploadPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{7}
}
func (m *AccountUploadPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUploadPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUploadPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUploadPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUploadPhoto.Merge(m, src)
}
func (m *AccountUploadPhoto) XXX_Size() int {
	return m.Size()
}
func (m *AccountUploadPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUploadPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUploadPhoto proto.InternalMessageInfo

func (m *AccountUploadPhoto) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *AccountUploadPhoto) GetReturnObject() bool {
	if m != nil {
		return m.ReturnObject
	}
	return false
}

// AccountUpdatePhoto
// @Function
// @Return: Bool
type AccountUpdatePhoto struct {
	Photo *InputDocument `protobuf:"bytes,1,req,name=Photo" json:"Photo,omitempty"`
}

func (m *AccountUpdatePhoto) Reset()         { *m = AccountUpdatePhoto{} }
func (m *AccountUpdatePhoto) String() string { return proto.CompactTextString(m) }
func (*AccountUpdatePhoto) ProtoMessage()    {}
func (*AccountUpdatePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{8}
}
func (m *AccountUpdatePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUpdatePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUpdatePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUpdatePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdatePhoto.Merge(m, src)
}
func (m *AccountUpdatePhoto) XXX_Size() int {
	return m.Size()
}
func (m *AccountUpdatePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdatePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdatePhoto proto.InternalMessageInfo

func (m *AccountUpdatePhoto) GetPhoto() *InputDocument {
	if m != nil {
		return m.Photo
	}
	return nil
}

// AccountRemotePhoto
// @Function
// @Return: Bool
type AccountRemovePhoto struct {
}

func (m *AccountRemovePhoto) Reset()         { *m = AccountRemovePhoto{} }
func (m *AccountRemovePhoto) String() string { return proto.CompactTextString(m) }
func (*AccountRemovePhoto) ProtoMessage()    {}
func (*AccountRemovePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{9}
}
func (m *AccountRemovePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountRemovePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountRemovePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountRemovePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRemovePhoto.Merge(m, src)
}
func (m *AccountRemovePhoto) XXX_Size() int {
	return m.Size()
}
func (m *AccountRemovePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRemovePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRemovePhoto proto.InternalMessageInfo

// AccountChangePhone
// @Function
// @Return: User
type AccountChangePhone struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	PhoneCodeHash string `protobuf:"bytes,2,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
	PhoneCode     string `protobuf:"bytes,3,req,name=PhoneCode" json:"PhoneCode"`
}

func (m *AccountChangePhone) Reset()         { *m = AccountChangePhone{} }
func (m *AccountChangePhone) String() string { return proto.CompactTextString(m) }
func (*AccountChangePhone) ProtoMessage()    {}
func (*AccountChangePhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{10}
}
func (m *AccountChangePhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountChangePhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountChangePhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountChangePhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountChangePhone.Merge(m, src)
}
func (m *AccountChangePhone) XXX_Size() int {
	return m.Size()
}
func (m *AccountChangePhone) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountChangePhone.DiscardUnknown(m)
}

var xxx_messageInfo_AccountChangePhone proto.InternalMessageInfo

func (m *AccountChangePhone) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AccountChangePhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *AccountChangePhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

// AccountSetPrivacy
// @Function
// @Return: AccountPrivacyRules
type AccountSetPrivacy struct {
	ChatInvite       []*AccountPrivacyRule `protobuf:"bytes,1,rep,name=ChatInvite" json:"ChatInvite,omitempty"`
	LastSeen         []*AccountPrivacyRule `protobuf:"bytes,2,rep,name=LastSeen" json:"LastSeen,omitempty"`
	PhoneNumber      []*AccountPrivacyRule `protobuf:"bytes,3,rep,name=PhoneNumber" json:"PhoneNumber,omitempty"`
	ProfilePhoto     []*AccountPrivacyRule `protobuf:"bytes,4,rep,name=ProfilePhoto" json:"ProfilePhoto,omitempty"`
	ForwardedMessage []*AccountPrivacyRule `protobuf:"bytes,5,rep,name=ForwardedMessage" json:"ForwardedMessage,omitempty"`
	Call             []*AccountPrivacyRule `protobuf:"bytes,6,rep,name=Call" json:"Call,omitempty"`
}

func (m *AccountSetPrivacy) Reset()         { *m = AccountSetPrivacy{} }
func (m *AccountSetPrivacy) String() string { return proto.CompactTextString(m) }
func (*AccountSetPrivacy) ProtoMessage()    {}
func (*AccountSetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{11}
}
func (m *AccountSetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountSetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountSetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountSetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSetPrivacy.Merge(m, src)
}
func (m *AccountSetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *AccountSetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSetPrivacy proto.InternalMessageInfo

func (m *AccountSetPrivacy) GetChatInvite() []*AccountPrivacyRule {
	if m != nil {
		return m.ChatInvite
	}
	return nil
}

func (m *AccountSetPrivacy) GetLastSeen() []*AccountPrivacyRule {
	if m != nil {
		return m.LastSeen
	}
	return nil
}

func (m *AccountSetPrivacy) GetPhoneNumber() []*AccountPrivacyRule {
	if m != nil {
		return m.PhoneNumber
	}
	return nil
}

func (m *AccountSetPrivacy) GetProfilePhoto() []*AccountPrivacyRule {
	if m != nil {
		return m.ProfilePhoto
	}
	return nil
}

func (m *AccountSetPrivacy) GetForwardedMessage() []*AccountPrivacyRule {
	if m != nil {
		return m.ForwardedMessage
	}
	return nil
}

func (m *AccountSetPrivacy) GetCall() []*AccountPrivacyRule {
	if m != nil {
		return m.Call
	}
	return nil
}

// AccountGetPrivacy
// @Function
// @Return: AccountPrivacyRules
type AccountGetPrivacy struct {
	Key AccountPrivacyKey `protobuf:"varint,1,req,name=Key,enum=msg.AccountPrivacyKey" json:"Key"`
}

func (m *AccountGetPrivacy) Reset()         { *m = AccountGetPrivacy{} }
func (m *AccountGetPrivacy) String() string { return proto.CompactTextString(m) }
func (*AccountGetPrivacy) ProtoMessage()    {}
func (*AccountGetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{12}
}
func (m *AccountGetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetPrivacy.Merge(m, src)
}
func (m *AccountGetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetPrivacy proto.InternalMessageInfo

func (m *AccountGetPrivacy) GetKey() AccountPrivacyKey {
	if m != nil {
		return m.Key
	}
	return AccountPrivacyKey_None
}

// AccountGetAuthorizations
// @Function
// @Returns: Authorizations
type AccountGetAuthorizations struct {
}

func (m *AccountGetAuthorizations) Reset()         { *m = AccountGetAuthorizations{} }
func (m *AccountGetAuthorizations) String() string { return proto.CompactTextString(m) }
func (*AccountGetAuthorizations) ProtoMessage()    {}
func (*AccountGetAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{13}
}
func (m *AccountGetAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetAuthorizations.Merge(m, src)
}
func (m *AccountGetAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetAuthorizations proto.InternalMessageInfo

// AccountResetAuthorization
// @Function
// @Returns: Bool
type AccountResetAuthorization struct {
	AuthID int64 `protobuf:"varint,1,req,name=AuthID" json:"AuthID"`
}

func (m *AccountResetAuthorization) Reset()         { *m = AccountResetAuthorization{} }
func (m *AccountResetAuthorization) String() string { return proto.CompactTextString(m) }
func (*AccountResetAuthorization) ProtoMessage()    {}
func (*AccountResetAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{14}
}
func (m *AccountResetAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountResetAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountResetAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountResetAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountResetAuthorization.Merge(m, src)
}
func (m *AccountResetAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *AccountResetAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountResetAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_AccountResetAuthorization proto.InternalMessageInfo

func (m *AccountResetAuthorization) GetAuthID() int64 {
	if m != nil {
		return m.AuthID
	}
	return 0
}

// AccountAuthorizations
type AccountAuthorizations struct {
	Authorizations []*AccountAuthorization `protobuf:"bytes,1,rep,name=Authorizations" json:"Authorizations,omitempty"`
}

func (m *AccountAuthorizations) Reset()         { *m = AccountAuthorizations{} }
func (m *AccountAuthorizations) String() string { return proto.CompactTextString(m) }
func (*AccountAuthorizations) ProtoMessage()    {}
func (*AccountAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{15}
}
func (m *AccountAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountAuthorizations.Merge(m, src)
}
func (m *AccountAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *AccountAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_AccountAuthorizations proto.InternalMessageInfo

func (m *AccountAuthorizations) GetAuthorizations() []*AccountAuthorization {
	if m != nil {
		return m.Authorizations
	}
	return nil
}

// AccountAuthorization
type AccountAuthorization struct {
	AuthID        int64  `protobuf:"varint,100,req,name=AuthID" json:"AuthID"`
	Model         string `protobuf:"bytes,1,req,name=Model" json:"Model"`
	AppVersion    string `protobuf:"bytes,2,req,name=AppVersion" json:"AppVersion"`
	SystemVersion string `protobuf:"bytes,3,req,name=SystemVersion" json:"SystemVersion"`
	LangCode      string `protobuf:"bytes,4,req,name=LangCode" json:"LangCode"`
	CreatedAt     int64  `protobuf:"varint,5,req,name=CreatedAt" json:"CreatedAt"`
	ActiveAt      int64  `protobuf:"varint,6,req,name=ActiveAt" json:"ActiveAt"`
	ClientIP      string `protobuf:"bytes,7,req,name=ClientIP" json:"ClientIP"`
	LastAccess    int64  `protobuf:"varint,8,req,name=LastAccess" json:"LastAccess"`
}

func (m *AccountAuthorization) Reset()         { *m = AccountAuthorization{} }
func (m *AccountAuthorization) String() string { return proto.CompactTextString(m) }
func (*AccountAuthorization) ProtoMessage()    {}
func (*AccountAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{16}
}
func (m *AccountAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountAuthorization.Merge(m, src)
}
func (m *AccountAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *AccountAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_AccountAuthorization proto.InternalMessageInfo

func (m *AccountAuthorization) GetAuthID() int64 {
	if m != nil {
		return m.AuthID
	}
	return 0
}

func (m *AccountAuthorization) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *AccountAuthorization) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *AccountAuthorization) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *AccountAuthorization) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *AccountAuthorization) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *AccountAuthorization) GetActiveAt() int64 {
	if m != nil {
		return m.ActiveAt
	}
	return 0
}

func (m *AccountAuthorization) GetClientIP() string {
	if m != nil {
		return m.ClientIP
	}
	return ""
}

func (m *AccountAuthorization) GetLastAccess() int64 {
	if m != nil {
		return m.LastAccess
	}
	return 0
}

// AccountPrivacyRules
type AccountPrivacyRules struct {
	Rules []*AccountPrivacyRule `protobuf:"bytes,1,rep,name=Rules" json:"Rules,omitempty"`
}

func (m *AccountPrivacyRules) Reset()         { *m = AccountPrivacyRules{} }
func (m *AccountPrivacyRules) String() string { return proto.CompactTextString(m) }
func (*AccountPrivacyRules) ProtoMessage()    {}
func (*AccountPrivacyRules) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{17}
}
func (m *AccountPrivacyRules) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountPrivacyRules) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountPrivacyRules.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountPrivacyRules) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountPrivacyRules.Merge(m, src)
}
func (m *AccountPrivacyRules) XXX_Size() int {
	return m.Size()
}
func (m *AccountPrivacyRules) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountPrivacyRules.DiscardUnknown(m)
}

var xxx_messageInfo_AccountPrivacyRules proto.InternalMessageInfo

func (m *AccountPrivacyRules) GetRules() []*AccountPrivacyRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

// AccountPrivacyRule
type AccountPrivacyRule struct {
	PrivacyType AccountPrivacyType `protobuf:"varint,1,req,name=PrivacyType,enum=msg.AccountPrivacyType" json:"PrivacyType"`
	UserIDs     []int64            `protobuf:"varint,2,rep,name=UserIDs" json:"UserIDs,omitempty"`
}

func (m *AccountPrivacyRule) Reset()         { *m = AccountPrivacyRule{} }
func (m *AccountPrivacyRule) String() string { return proto.CompactTextString(m) }
func (*AccountPrivacyRule) ProtoMessage()    {}
func (*AccountPrivacyRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{18}
}
func (m *AccountPrivacyRule) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountPrivacyRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountPrivacyRule.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountPrivacyRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountPrivacyRule.Merge(m, src)
}
func (m *AccountPrivacyRule) XXX_Size() int {
	return m.Size()
}
func (m *AccountPrivacyRule) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountPrivacyRule.DiscardUnknown(m)
}

var xxx_messageInfo_AccountPrivacyRule proto.InternalMessageInfo

func (m *AccountPrivacyRule) GetPrivacyType() AccountPrivacyType {
	if m != nil {
		return m.PrivacyType
	}
	return AccountPrivacyType_AllowAll
}

func (m *AccountPrivacyRule) GetUserIDs() []int64 {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

func init() {
	proto.RegisterEnum("msg.AccountPrivacyKey", AccountPrivacyKey_name, AccountPrivacyKey_value)
	proto.RegisterEnum("msg.AccountPrivacyType", AccountPrivacyType_name, AccountPrivacyType_value)
	proto.RegisterType((*AccountSetNotifySettings)(nil), "msg.AccountSetNotifySettings")
	proto.RegisterType((*AccountGetNotifySettings)(nil), "msg.AccountGetNotifySettings")
	proto.RegisterType((*AccountRegisterDevice)(nil), "msg.AccountRegisterDevice")
	proto.RegisterType((*AccountUnregisterDevice)(nil), "msg.AccountUnregisterDevice")
	proto.RegisterType((*AccountUpdateProfile)(nil), "msg.AccountUpdateProfile")
	proto.RegisterType((*AccountCheckUsername)(nil), "msg.AccountCheckUsername")
	proto.RegisterType((*AccountUpdateUsername)(nil), "msg.AccountUpdateUsername")
	proto.RegisterType((*AccountUploadPhoto)(nil), "msg.AccountUploadPhoto")
	proto.RegisterType((*AccountUpdatePhoto)(nil), "msg.AccountUpdatePhoto")
	proto.RegisterType((*AccountRemovePhoto)(nil), "msg.AccountRemovePhoto")
	proto.RegisterType((*AccountChangePhone)(nil), "msg.AccountChangePhone")
	proto.RegisterType((*AccountSetPrivacy)(nil), "msg.AccountSetPrivacy")
	proto.RegisterType((*AccountGetPrivacy)(nil), "msg.AccountGetPrivacy")
	proto.RegisterType((*AccountGetAuthorizations)(nil), "msg.AccountGetAuthorizations")
	proto.RegisterType((*AccountResetAuthorization)(nil), "msg.AccountResetAuthorization")
	proto.RegisterType((*AccountAuthorizations)(nil), "msg.AccountAuthorizations")
	proto.RegisterType((*AccountAuthorization)(nil), "msg.AccountAuthorization")
	proto.RegisterType((*AccountPrivacyRules)(nil), "msg.AccountPrivacyRules")
	proto.RegisterType((*AccountPrivacyRule)(nil), "msg.AccountPrivacyRule")
}

func init() { proto.RegisterFile("chat.api.accounts.proto", fileDescriptor_36a0c5dd1cea0696) }

var fileDescriptor_36a0c5dd1cea0696 = []byte{
	// 1011 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x5f, 0x6f, 0xdb, 0x54,
	0x14, 0x8f, 0xed, 0xa4, 0x4b, 0x4f, 0xbb, 0xe0, 0x5d, 0xba, 0xd5, 0xeb, 0x43, 0x88, 0xae, 0x10,
	0x8a, 0x8a, 0x88, 0xd0, 0x78, 0x80, 0x31, 0x69, 0xc8, 0x75, 0xd4, 0x11, 0x95, 0x95, 0xc8, 0xdd,
	0x90, 0xe0, 0xcd, 0x75, 0x4e, 0x13, 0x33, 0xc7, 0x37, 0xf2, 0xbd, 0xc9, 0x14, 0x1e, 0x80, 0x8f,
	0xc0, 0x17, 0xe1, 0x7b, 0xec, 0x71, 0x0f, 0x3c, 0xf0, 0x84, 0x50, 0xfb, 0xc8, 0x97, 0x40, 0xf7,
	0xda, 0xbe, 0xb1, 0x9b, 0x36, 0x88, 0xbd, 0xd9, 0xbf, 0xf3, 0x3b, 0xbf, 0x73, 0x7c, 0x7c, 0xfe,
	0xc0, 0x7e, 0x38, 0x09, 0x44, 0x2f, 0x98, 0x45, 0xbd, 0x20, 0x0c, 0xd9, 0x3c, 0x11, 0xbc, 0x37,
	0x4b, 0x99, 0x60, 0xc4, 0x9a, 0xf2, 0xf1, 0xc1, 0x7d, 0x65, 0x0d, 0x59, 0x8a, 0x3d, 0xb1, 0x9c,
	0x61, 0x6e, 0xa3, 0x1c, 0x1c, 0x37, 0x63, 0x9f, 0xa1, 0x38, 0x65, 0x22, 0xba, 0x58, 0x9e, 0xa1,
	0x10, 0x51, 0x32, 0xe6, 0x84, 0x42, 0x7d, 0x88, 0x98, 0x3a, 0x46, 0xc7, 0xec, 0xee, 0x3c, 0x6a,
	0xf5, 0xa6, 0x7c, 0xdc, 0x1b, 0x24, 0xb3, 0xb9, 0x90, 0xa8, 0xaf, 0x6c, 0xe4, 0x33, 0x68, 0x16,
	0x7c, 0xc7, 0x54, 0xbc, 0x7d, 0xc5, 0x93, 0xc6, 0xaa, 0x9c, 0xaf, 0x89, 0xf4, 0xa9, 0x0e, 0xfa,
	0xec, 0x5d, 0x82, 0xd2, 0xdf, 0x4d, 0xb8, 0x9f, 0x0b, 0xf8, 0x38, 0x8e, 0xb8, 0xc0, 0xb4, 0x8f,
	0x8b, 0x28, 0x44, 0x72, 0x00, 0x8d, 0x17, 0xec, 0x15, 0x26, 0x2a, 0x97, 0xed, 0xa3, 0xfa, 0x9b,
	0xbf, 0x3e, 0xa8, 0xf9, 0x19, 0x44, 0x3e, 0x82, 0x9d, 0x8c, 0xf5, 0x9c, 0x8d, 0x30, 0x76, 0xac,
	0x12, 0xa3, 0x6c, 0x20, 0x87, 0x70, 0xf7, 0x6c, 0xc9, 0x05, 0x4e, 0xbf, 0xc3, 0x94, 0x47, 0x2c,
	0x71, 0xea, 0x25, 0x66, 0xd5, 0x44, 0x3e, 0x04, 0x70, 0x67, 0xb3, 0x82, 0xd8, 0x28, 0x11, 0x4b,
	0x38, 0xe9, 0x40, 0xf3, 0x9b, 0x20, 0x19, 0x7b, 0x6c, 0x84, 0xce, 0x56, 0x89, 0xa3, 0x51, 0xf2,
	0x25, 0x6c, 0xab, 0x24, 0x5f, 0x2c, 0x67, 0xe8, 0xdc, 0xe9, 0x98, 0xdd, 0xd6, 0xa3, 0x07, 0x59,
	0x1d, 0xe7, 0x7c, 0xa2, 0x2c, 0xc3, 0x94, 0x2d, 0xa2, 0x11, 0xa6, 0xb9, 0xeb, 0x8a, 0x2e, 0xd5,
	0xbd, 0x38, 0xc2, 0x44, 0x0c, 0xfa, 0x4e, 0xb3, 0xac, 0x5e, 0xa0, 0xf4, 0x7b, 0xd8, 0xcf, 0xcb,
	0xf5, 0x32, 0x49, 0xab, 0x05, 0xa3, 0xe5, 0xc0, 0xb2, 0xe6, 0x8d, 0xf5, 0x00, 0x1b, 0x8a, 0x4a,
	0x05, 0xec, 0x15, 0xd2, 0xb3, 0x51, 0x20, 0x70, 0x98, 0xb2, 0x8b, 0x28, 0x56, 0xba, 0xc7, 0x51,
	0xca, 0xc5, 0x69, 0x30, 0xcd, 0x74, 0x0b, 0xbf, 0x15, 0x9c, 0x95, 0x25, 0xa7, 0x98, 0xd5, 0xb2,
	0xe4, 0x8c, 0x07, 0x60, 0x1d, 0x45, 0xcc, 0xb1, 0x3a, 0x86, 0x36, 0x4a, 0x80, 0x7e, 0xa1, 0xa3,
	0x7a, 0x13, 0x0c, 0x5f, 0xbd, 0xe4, 0x98, 0x26, 0xb9, 0x62, 0xf1, 0x5c, 0x09, 0xaa, 0x51, 0xfa,
	0x58, 0x77, 0x4e, 0x96, 0xef, 0xff, 0x70, 0x3d, 0x07, 0xa2, 0x5d, 0x63, 0x16, 0x8c, 0x86, 0x13,
	0x39, 0x5c, 0x14, 0xea, 0xc7, 0x51, 0x8c, 0xeb, 0xfd, 0x2a, 0x51, 0x5f, 0xd9, 0x48, 0x17, 0x76,
	0x7d, 0x14, 0xf3, 0x34, 0xf9, 0xf6, 0xfc, 0x47, 0x0c, 0x85, 0x63, 0x76, 0x8c, 0x6e, 0x33, 0xd7,
	0xaf, 0x58, 0xe8, 0xd3, 0x52, 0x0c, 0x55, 0x4e, 0x15, 0xa3, 0x0b, 0x0d, 0xf5, 0x90, 0x07, 0x21,
	0xab, 0x20, 0x7d, 0x16, 0xce, 0xa7, 0x98, 0x08, 0x3f, 0x23, 0xd0, 0x3d, 0xed, 0xef, 0xe3, 0x94,
	0x2d, 0x32, 0x7f, 0xfa, 0xab, 0xa1, 0x61, 0x6f, 0x12, 0x24, 0x63, 0x09, 0x27, 0xea, 0xbf, 0xaa,
	0x87, 0xca, 0xf7, 0x66, 0x90, 0x1c, 0x02, 0xf5, 0x20, 0xbb, 0xf3, 0xeb, 0x80, 0x4f, 0x2a, 0x3f,
	0xa8, 0x6a, 0x92, 0xff, 0x5a, 0x03, 0x95, 0xb1, 0x5a, 0xc1, 0xf4, 0x1f, 0x13, 0xee, 0xad, 0x16,
	0xcd, 0x30, 0x8d, 0x16, 0x41, 0xb8, 0x24, 0x9f, 0x03, 0x78, 0x93, 0x40, 0x0c, 0x92, 0x45, 0x24,
	0x64, 0x1a, 0x96, 0xde, 0x1f, 0x39, 0x37, 0x27, 0xfa, 0xf3, 0x18, 0xfd, 0x12, 0x55, 0xae, 0x1d,
	0xd9, 0x24, 0x67, 0xa8, 0xba, 0x72, 0xa3, 0x9b, 0x26, 0x92, 0xc7, 0xb0, 0xa3, 0x12, 0x3a, 0x9d,
	0x4f, 0xcf, 0x31, 0x75, 0xac, 0xcd, 0x7e, 0x65, 0x2e, 0x79, 0x02, 0xbb, 0x79, 0x67, 0x67, 0x3f,
	0xa2, 0xbe, 0xd9, 0xb7, 0x42, 0x26, 0x1e, 0xd8, 0xc7, 0x2c, 0x7d, 0x1d, 0xa4, 0x23, 0x1c, 0x3d,
	0x47, 0xce, 0x83, 0x31, 0x3a, 0x8d, 0xcd, 0x02, 0x6b, 0x0e, 0xe4, 0x63, 0xa8, 0x7b, 0x41, 0x1c,
	0x3b, 0x5b, 0x9b, 0x1d, 0x15, 0x89, 0x7a, 0xba, 0xd8, 0xcf, 0x56, 0xc5, 0xee, 0x81, 0x75, 0x82,
	0x4b, 0xf5, 0xb3, 0x8b, 0xed, 0x52, 0x15, 0x38, 0xc1, 0x65, 0x31, 0x64, 0x27, 0xb8, 0xa4, 0x07,
	0xe5, 0x2d, 0xed, 0xce, 0xc5, 0x84, 0xa5, 0xd1, 0x4f, 0x81, 0x88, 0x58, 0xc2, 0xe9, 0x13, 0x78,
	0xa8, 0xfb, 0x8c, 0x5f, 0xb3, 0x92, 0x36, 0x6c, 0x49, 0x60, 0xd0, 0x57, 0xb1, 0xac, 0xa3, 0x2d,
	0xa9, 0xf9, 0xa9, 0xe1, 0xe7, 0x28, 0xfd, 0x41, 0xcf, 0x60, 0x55, 0x95, 0xb8, 0xd0, 0xaa, 0x22,
	0x79, 0x4b, 0x3c, 0x2c, 0x27, 0x5b, 0x61, 0xf8, 0xd7, 0x1c, 0xe8, 0x1f, 0xa6, 0x5e, 0x0d, 0xb7,
	0x25, 0x35, 0xba, 0x29, 0x29, 0x39, 0x0c, 0xd9, 0x5d, 0xa8, 0x0c, 0x43, 0x76, 0x11, 0xaa, 0x5b,
	0xde, 0xbc, 0x65, 0xcb, 0xaf, 0xdd, 0x0d, 0xeb, 0xf6, 0xbb, 0x51, 0xbe, 0x08, 0xf5, 0x1b, 0x2f,
	0x02, 0x85, 0x6d, 0x2f, 0xc5, 0x40, 0xe0, 0xc8, 0x15, 0xea, 0xb0, 0x58, 0xc5, 0x50, 0x69, 0x58,
	0xaa, 0xb8, 0xa1, 0x88, 0x16, 0xe8, 0x0a, 0x75, 0x57, 0x0a, 0x8a, 0x46, 0x4b, 0xb7, 0x61, 0xa8,
	0xce, 0xca, 0xf5, 0xdb, 0x30, 0x94, 0xdf, 0x26, 0x07, 0xc4, 0x0d, 0x43, 0xe4, 0x5c, 0xdd, 0x8f,
	0x42, 0xa5, 0x84, 0xd3, 0x3e, 0xbc, 0xbf, 0xde, 0x6c, 0x9c, 0x7c, 0x02, 0x0d, 0xf5, 0xf0, 0x5f,
	0xa3, 0x9b, 0xb1, 0x28, 0xd3, 0x6b, 0xa8, 0x64, 0x24, 0x5f, 0xc1, 0x4e, 0xfe, 0xaa, 0x8f, 0x50,
	0xeb, 0x46, 0x29, 0x69, 0x2e, 0x0e, 0x76, 0x09, 0x22, 0x0e, 0xdc, 0x91, 0x4b, 0x7a, 0xd0, 0xe7,
	0x6a, 0x17, 0x58, 0x7e, 0xf1, 0x7a, 0xf8, 0xb3, 0x9e, 0x83, 0x55, 0x8b, 0x93, 0x26, 0xd4, 0x4f,
	0x59, 0x82, 0x76, 0x8d, 0xb4, 0xca, 0xeb, 0xc7, 0x36, 0xc8, 0xee, 0x6a, 0xab, 0xd8, 0x26, 0x79,
	0xaf, 0xb2, 0x2e, 0x6c, 0x8b, 0xd8, 0xd5, 0x25, 0x60, 0xd7, 0xc9, 0xde, 0xfa, 0x64, 0xdb, 0x0d,
	0x19, 0x40, 0x4e, 0xa1, 0xbd, 0x75, 0xf8, 0xcb, 0xf5, 0x0f, 0x56, 0xf9, 0xee, 0x42, 0xd3, 0x8d,
	0x63, 0xf6, 0xda, 0x8d, 0x63, 0xbb, 0x46, 0xee, 0xc1, 0x5d, 0xf5, 0xe6, 0xb1, 0x44, 0x04, 0xa1,
	0xe0, 0xb6, 0x21, 0x23, 0xf7, 0x23, 0x1e, 0x14, 0x1c, 0x53, 0xc6, 0x29, 0x00, 0x4d, 0xb3, 0x64,
	0xfa, 0xca, 0x53, 0x7e, 0x2d, 0xb7, 0x51, 0x2a, 0x15, 0xac, 0x0c, 0xba, 0x38, 0x72, 0xde, 0x5c,
	0xb6, 0x8d, 0xb7, 0x97, 0x6d, 0xe3, 0xef, 0xcb, 0xb6, 0xf1, 0xdb, 0x55, 0xbb, 0xf6, 0xf6, 0xaa,
	0x5d, 0xfb, 0xf3, 0xaa, 0x5d, 0xfb, 0x37, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x92, 0xf7, 0xa4, 0x2e,
	0x0a, 0x00, 0x00,
}

func (m *AccountSetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountSetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.Peer.Size()))
		n1, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.Settings == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Settings")
	} else {
		dAtA[i] = 0x12
		i++
		i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.Settings.Size()))
		n2, err := m.Settings.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	return i, nil
}

func (m *AccountGetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.Peer.Size()))
		n3, err := m.Peer.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n3
	}
	return i, nil
}

func (m *AccountRegisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountRegisterDevice) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x12
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Token)))
	i += copy(dAtA[i:], m.Token)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.DeviceModel)))
	i += copy(dAtA[i:], m.DeviceModel)
	dAtA[i] = 0x22
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.SystemVersion)))
	i += copy(dAtA[i:], m.SystemVersion)
	dAtA[i] = 0x2a
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.AppVersion)))
	i += copy(dAtA[i:], m.AppVersion)
	dAtA[i] = 0x32
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.LangCode)))
	i += copy(dAtA[i:], m.LangCode)
	dAtA[i] = 0x38
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.TokenType))
	dAtA[i] = 0x42
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.ClientID)))
	i += copy(dAtA[i:], m.ClientID)
	return i, nil
}

func (m *AccountUnregisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUnregisterDevice) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.TokenType))
	dAtA[i] = 0x12
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Token)))
	i += copy(dAtA[i:], m.Token)
	return i, nil
}

func (m *AccountUpdateProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUpdateProfile) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.FirstName)))
	i += copy(dAtA[i:], m.FirstName)
	dAtA[i] = 0x12
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.LastName)))
	i += copy(dAtA[i:], m.LastName)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Bio)))
	i += copy(dAtA[i:], m.Bio)
	return i, nil
}

func (m *AccountCheckUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountCheckUsername) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Username)))
	i += copy(dAtA[i:], m.Username)
	return i, nil
}

func (m *AccountUpdateUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUpdateUsername) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Username)))
	i += copy(dAtA[i:], m.Username)
	return i, nil
}

func (m *AccountUploadPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUploadPhoto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.File == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("File")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.File.Size()))
		n4, err := m.File.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n4
	}
	dAtA[i] = 0x10
	i++
	if m.ReturnObject {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	return i, nil
}

func (m *AccountUpdatePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUpdatePhoto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Photo == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Photo")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.Photo.Size()))
		n5, err := m.Photo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n5
	}
	return i, nil
}

func (m *AccountRemovePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountRemovePhoto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *AccountChangePhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountChangePhone) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Phone)))
	i += copy(dAtA[i:], m.Phone)
	dAtA[i] = 0x12
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i += copy(dAtA[i:], m.PhoneCodeHash)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.PhoneCode)))
	i += copy(dAtA[i:], m.PhoneCode)
	return i, nil
}

func (m *AccountSetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountSetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ChatInvite) > 0 {
		for _, msg := range m.ChatInvite {
			dAtA[i] = 0xa
			i++
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.LastSeen) > 0 {
		for _, msg := range m.LastSeen {
			dAtA[i] = 0x12
			i++
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.PhoneNumber) > 0 {
		for _, msg := range m.PhoneNumber {
			dAtA[i] = 0x1a
			i++
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ProfilePhoto) > 0 {
		for _, msg := range m.ProfilePhoto {
			dAtA[i] = 0x22
			i++
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.ForwardedMessage) > 0 {
		for _, msg := range m.ForwardedMessage {
			dAtA[i] = 0x2a
			i++
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.Call) > 0 {
		for _, msg := range m.Call {
			dAtA[i] = 0x32
			i++
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *AccountGetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.Key))
	return i, nil
}

func (m *AccountGetAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *AccountResetAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountResetAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.AuthID))
	return i, nil
}

func (m *AccountAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Authorizations) > 0 {
		for _, msg := range m.Authorizations {
			dAtA[i] = 0xa
			i++
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *AccountAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountAuthorization) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Model)))
	i += copy(dAtA[i:], m.Model)
	dAtA[i] = 0x12
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.AppVersion)))
	i += copy(dAtA[i:], m.AppVersion)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.SystemVersion)))
	i += copy(dAtA[i:], m.SystemVersion)
	dAtA[i] = 0x22
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.LangCode)))
	i += copy(dAtA[i:], m.LangCode)
	dAtA[i] = 0x28
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.CreatedAt))
	dAtA[i] = 0x30
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.ActiveAt))
	dAtA[i] = 0x3a
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.ClientIP)))
	i += copy(dAtA[i:], m.ClientIP)
	dAtA[i] = 0x40
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.LastAccess))
	dAtA[i] = 0xa0
	i++
	dAtA[i] = 0x6
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.AuthID))
	return i, nil
}

func (m *AccountPrivacyRules) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountPrivacyRules) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Rules) > 0 {
		for _, msg := range m.Rules {
			dAtA[i] = 0xa
			i++
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *AccountPrivacyRule) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountPrivacyRule) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.PrivacyType))
	if len(m.UserIDs) > 0 {
		for _, num := range m.UserIDs {
			dAtA[i] = 0x10
			i++
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(num))
		}
	}
	return i, nil
}

func encodeVarintChatApiAccounts(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AccountSetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	return n
}

func (m *AccountGetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	return n
}

func (m *AccountRegisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.DeviceModel)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.SystemVersion)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.AppVersion)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.LangCode)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	n += 1 + sovChatApiAccounts(uint64(m.TokenType))
	l = len(m.ClientID)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountUnregisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAccounts(uint64(m.TokenType))
	l = len(m.Token)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountUpdateProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FirstName)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.LastName)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.Bio)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountCheckUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountUpdateUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountUploadPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	n += 2
	return n
}

func (m *AccountUpdatePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Photo != nil {
		l = m.Photo.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	return n
}

func (m *AccountRemovePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AccountChangePhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.PhoneCode)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountSetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ChatInvite) > 0 {
		for _, e := range m.ChatInvite {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	if len(m.LastSeen) > 0 {
		for _, e := range m.LastSeen {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	if len(m.PhoneNumber) > 0 {
		for _, e := range m.PhoneNumber {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	if len(m.ProfilePhoto) > 0 {
		for _, e := range m.ProfilePhoto {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	if len(m.ForwardedMessage) > 0 {
		for _, e := range m.ForwardedMessage {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	if len(m.Call) > 0 {
		for _, e := range m.Call {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	return n
}

func (m *AccountGetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAccounts(uint64(m.Key))
	return n
}

func (m *AccountGetAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AccountResetAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAccounts(uint64(m.AuthID))
	return n
}

func (m *AccountAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Authorizations) > 0 {
		for _, e := range m.Authorizations {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	return n
}

func (m *AccountAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Model)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.AppVersion)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.SystemVersion)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.LangCode)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	n += 1 + sovChatApiAccounts(uint64(m.CreatedAt))
	n += 1 + sovChatApiAccounts(uint64(m.ActiveAt))
	l = len(m.ClientIP)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	n += 1 + sovChatApiAccounts(uint64(m.LastAccess))
	n += 2 + sovChatApiAccounts(uint64(m.AuthID))
	return n
}

func (m *AccountPrivacyRules) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Rules) > 0 {
		for _, e := range m.Rules {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	return n
}

func (m *AccountPrivacyRule) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAccounts(uint64(m.PrivacyType))
	if len(m.UserIDs) > 0 {
		for _, e := range m.UserIDs {
			n += 1 + sovChatApiAccounts(uint64(e))
		}
	}
	return n
}

func sovChatApiAccounts(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozChatApiAccounts(x uint64) (n int) {
	return sovChatApiAccounts(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AccountSetNotifySettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountSetNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountSetNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &PeerNotifySettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Settings")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetNotifySettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountRegisterDevice) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountRegisterDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountRegisterDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceModel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceModel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= PushTokenProvider(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000020)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000040)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Token")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeviceModel")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("SystemVersion")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AppVersion")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LangCode")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("TokenType")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClientID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUnregisterDevice) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUnregisterDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUnregisterDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("TokenType")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Token")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUpdateProfile) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUpdateProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUpdateProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("FirstName")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LastName")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountCheckUsername) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountCheckUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountCheckUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Username")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUpdateUsername) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUpdateUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUpdateUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Username")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUploadPhoto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUploadPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUploadPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReturnObject", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReturnObject = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("File")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUpdatePhoto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUpdatePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUpdatePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Photo == nil {
				m.Photo = &InputDocument{}
			}
			if err := m.Photo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Photo")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountRemovePhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountRemovePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountRemovePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountChangePhone) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountChangePhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountChangePhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountSetPrivacy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountSetPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountSetPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatInvite", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatInvite = append(m.ChatInvite, &AccountPrivacyRule{})
			if err := m.ChatInvite[len(m.ChatInvite)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastSeen", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastSeen = append(m.LastSeen, &AccountPrivacyRule{})
			if err := m.LastSeen[len(m.LastSeen)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = append(m.PhoneNumber, &AccountPrivacyRule{})
			if err := m.PhoneNumber[len(m.PhoneNumber)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfilePhoto", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProfilePhoto = append(m.ProfilePhoto, &AccountPrivacyRule{})
			if err := m.ProfilePhoto[len(m.ProfilePhoto)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardedMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForwardedMessage = append(m.ForwardedMessage, &AccountPrivacyRule{})
			if err := m.ForwardedMessage[len(m.ForwardedMessage)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Call = append(m.Call, &AccountPrivacyRule{})
			if err := m.Call[len(m.Call)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetPrivacy) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			m.Key = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Key |= AccountPrivacyKey(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Key")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountResetAuthorization) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountResetAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountResetAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthID", wireType)
			}
			m.AuthID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuthID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AuthID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authorizations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authorizations = append(m.Authorizations, &AccountAuthorization{})
			if err := m.Authorizations[len(m.Authorizations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountAuthorization) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Model", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Model = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveAt", wireType)
			}
			m.ActiveAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActiveAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000040)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastAccess", wireType)
			}
			m.LastAccess = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastAccess |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000080)
		case 100:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthID", wireType)
			}
			m.AuthID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuthID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000100)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Model")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AppVersion")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("SystemVersion")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LangCode")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("CreatedAt")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ActiveAt")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClientIP")
	}
	if hasFields[0]&uint64(0x00000080) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LastAccess")
	}
	if hasFields[0]&uint64(0x00000100) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AuthID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountPrivacyRules) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountPrivacyRules: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountPrivacyRules: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rules", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rules = append(m.Rules, &AccountPrivacyRule{})
			if err := m.Rules[len(m.Rules)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountPrivacyRule) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountPrivacyRule: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountPrivacyRule: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrivacyType", wireType)
			}
			m.PrivacyType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PrivacyType |= AccountPrivacyType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowChatApiAccounts
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.UserIDs = append(m.UserIDs, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowChatApiAccounts
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthChatApiAccounts
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthChatApiAccounts
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.UserIDs) == 0 {
					m.UserIDs = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowChatApiAccounts
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.UserIDs = append(m.UserIDs, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field UserIDs", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PrivacyType")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipChatApiAccounts(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthChatApiAccounts
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthChatApiAccounts
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowChatApiAccounts
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipChatApiAccounts(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthChatApiAccounts
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthChatApiAccounts = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowChatApiAccounts   = fmt.Errorf("proto: integer overflow")
)
