// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.labels.proto

package msg

import (
	fmt "fmt"
	pbytes "github.com/gobwas/pool/pbytes"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	sync "sync"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

const C_LabelsSet int64 = 2192484525

type poolLabelsSet struct {
	pool sync.Pool
}

func (p *poolLabelsSet) Get() *LabelsSet {
	x, ok := p.pool.Get().(*LabelsSet)
	if !ok {
		return &LabelsSet{}
	}
	return x
}

func (p *poolLabelsSet) Put(x *LabelsSet) {
	p.pool.Put(x)
}

var PoolLabelsSet = poolLabelsSet{}

func ResultLabelsSet(out *MessageEnvelope, res *LabelsSet) {
	out.Constructor = C_LabelsSet
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_LabelsDelete int64 = 3401105936

type poolLabelsDelete struct {
	pool sync.Pool
}

func (p *poolLabelsDelete) Get() *LabelsDelete {
	x, ok := p.pool.Get().(*LabelsDelete)
	if !ok {
		return &LabelsDelete{}
	}
	x.LabelIDs = x.LabelIDs[:0]
	return x
}

func (p *poolLabelsDelete) Put(x *LabelsDelete) {
	p.pool.Put(x)
}

var PoolLabelsDelete = poolLabelsDelete{}

func ResultLabelsDelete(out *MessageEnvelope, res *LabelsDelete) {
	out.Constructor = C_LabelsDelete
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_LabelsGet int64 = 2575409921

type poolLabelsGet struct {
	pool sync.Pool
}

func (p *poolLabelsGet) Get() *LabelsGet {
	x, ok := p.pool.Get().(*LabelsGet)
	if !ok {
		return &LabelsGet{}
	}
	return x
}

func (p *poolLabelsGet) Put(x *LabelsGet) {
	p.pool.Put(x)
}

var PoolLabelsGet = poolLabelsGet{}

func ResultLabelsGet(out *MessageEnvelope, res *LabelsGet) {
	out.Constructor = C_LabelsGet
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_LabelsAddToDialog int64 = 572246739

type poolLabelsAddToDialog struct {
	pool sync.Pool
}

func (p *poolLabelsAddToDialog) Get() *LabelsAddToDialog {
	x, ok := p.pool.Get().(*LabelsAddToDialog)
	if !ok {
		return &LabelsAddToDialog{}
	}
	x.LabelIDs = x.LabelIDs[:0]
	return x
}

func (p *poolLabelsAddToDialog) Put(x *LabelsAddToDialog) {
	p.pool.Put(x)
}

var PoolLabelsAddToDialog = poolLabelsAddToDialog{}

func ResultLabelsAddToDialog(out *MessageEnvelope, res *LabelsAddToDialog) {
	out.Constructor = C_LabelsAddToDialog
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_LabelsRemoveFromDialog int64 = 2632121923

type poolLabelsRemoveFromDialog struct {
	pool sync.Pool
}

func (p *poolLabelsRemoveFromDialog) Get() *LabelsRemoveFromDialog {
	x, ok := p.pool.Get().(*LabelsRemoveFromDialog)
	if !ok {
		return &LabelsRemoveFromDialog{}
	}
	x.LabelIDs = x.LabelIDs[:0]
	return x
}

func (p *poolLabelsRemoveFromDialog) Put(x *LabelsRemoveFromDialog) {
	p.pool.Put(x)
}

var PoolLabelsRemoveFromDialog = poolLabelsRemoveFromDialog{}

func ResultLabelsRemoveFromDialog(out *MessageEnvelope, res *LabelsRemoveFromDialog) {
	out.Constructor = C_LabelsRemoveFromDialog
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_LabelsAddToMessage int64 = 180144503

type poolLabelsAddToMessage struct {
	pool sync.Pool
}

func (p *poolLabelsAddToMessage) Get() *LabelsAddToMessage {
	x, ok := p.pool.Get().(*LabelsAddToMessage)
	if !ok {
		return &LabelsAddToMessage{}
	}
	x.LabelIDs = x.LabelIDs[:0]
	x.MessageIDs = x.MessageIDs[:0]
	return x
}

func (p *poolLabelsAddToMessage) Put(x *LabelsAddToMessage) {
	p.pool.Put(x)
}

var PoolLabelsAddToMessage = poolLabelsAddToMessage{}

func ResultLabelsAddToMessage(out *MessageEnvelope, res *LabelsAddToMessage) {
	out.Constructor = C_LabelsAddToMessage
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_LabelsRemoveFromMessage int64 = 4195197703

type poolLabelsRemoveFromMessage struct {
	pool sync.Pool
}

func (p *poolLabelsRemoveFromMessage) Get() *LabelsRemoveFromMessage {
	x, ok := p.pool.Get().(*LabelsRemoveFromMessage)
	if !ok {
		return &LabelsRemoveFromMessage{}
	}
	x.LabelIDs = x.LabelIDs[:0]
	x.MessageIDs = x.MessageIDs[:0]
	return x
}

func (p *poolLabelsRemoveFromMessage) Put(x *LabelsRemoveFromMessage) {
	p.pool.Put(x)
}

var PoolLabelsRemoveFromMessage = poolLabelsRemoveFromMessage{}

func ResultLabelsRemoveFromMessage(out *MessageEnvelope, res *LabelsRemoveFromMessage) {
	out.Constructor = C_LabelsRemoveFromMessage
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_Label int64 = 3479601132

type poolLabel struct {
	pool sync.Pool
}

func (p *poolLabel) Get() *Label {
	x, ok := p.pool.Get().(*Label)
	if !ok {
		return &Label{}
	}
	return x
}

func (p *poolLabel) Put(x *Label) {
	p.pool.Put(x)
}

var PoolLabel = poolLabel{}

func ResultLabel(out *MessageEnvelope, res *Label) {
	out.Constructor = C_Label
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_LabelsMany int64 = 1423713603

type poolLabelsMany struct {
	pool sync.Pool
}

func (p *poolLabelsMany) Get() *LabelsMany {
	x, ok := p.pool.Get().(*LabelsMany)
	if !ok {
		return &LabelsMany{}
	}
	x.Labels = x.Labels[:0]
	return x
}

func (p *poolLabelsMany) Put(x *LabelsMany) {
	p.pool.Put(x)
}

var PoolLabelsMany = poolLabelsMany{}

func ResultLabelsMany(out *MessageEnvelope, res *LabelsMany) {
	out.Constructor = C_LabelsMany
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

func init() {
	ConstructorNames[2192484525] = "LabelsSet"
	ConstructorNames[3401105936] = "LabelsDelete"
	ConstructorNames[2575409921] = "LabelsGet"
	ConstructorNames[572246739] = "LabelsAddToDialog"
	ConstructorNames[2632121923] = "LabelsRemoveFromDialog"
	ConstructorNames[180144503] = "LabelsAddToMessage"
	ConstructorNames[4195197703] = "LabelsRemoveFromMessage"
	ConstructorNames[3479601132] = "Label"
	ConstructorNames[1423713603] = "LabelsMany"
}
