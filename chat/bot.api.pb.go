// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bot.api.proto

package msg

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// BotStart
// @Function
// @Return: Bool
type BotStart struct {
	Bot        *InputPeer `protobuf:"bytes,1,req,name=Bot" json:"Bot,omitempty"`
	RandomID   int64      `protobuf:"varint,2,req,name=RandomID" json:"RandomID"`
	StartParam string     `protobuf:"bytes,3,req,name=StartParam" json:"StartParam"`
}

func (m *BotStart) Reset()         { *m = BotStart{} }
func (m *BotStart) String() string { return proto.CompactTextString(m) }
func (*BotStart) ProtoMessage()    {}
func (*BotStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{0}
}
func (m *BotStart) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotStart.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotStart.Merge(m, src)
}
func (m *BotStart) XXX_Size() int {
	return m.Size()
}
func (m *BotStart) XXX_DiscardUnknown() {
	xxx_messageInfo_BotStart.DiscardUnknown(m)
}

var xxx_messageInfo_BotStart proto.InternalMessageInfo

func (m *BotStart) GetBot() *InputPeer {
	if m != nil {
		return m.Bot
	}
	return nil
}

func (m *BotStart) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *BotStart) GetStartParam() string {
	if m != nil {
		return m.StartParam
	}
	return ""
}

// BotSetInfo
// @Function
// @Return: Bool
type BotSetInfo struct {
	BotID       int64          `protobuf:"varint,1,req,name=BotID" json:"BotID"`
	RandomID    int64          `protobuf:"varint,2,req,name=RandomID" json:"RandomID"`
	Owner       int64          `protobuf:"varint,3,req,name=Owner" json:"Owner"`
	BotCommands []*BotCommands `protobuf:"bytes,4,rep,name=BotCommands" json:"BotCommands,omitempty"`
	Description string         `protobuf:"bytes,5,req,name=Description" json:"Description"`
}

func (m *BotSetInfo) Reset()         { *m = BotSetInfo{} }
func (m *BotSetInfo) String() string { return proto.CompactTextString(m) }
func (*BotSetInfo) ProtoMessage()    {}
func (*BotSetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{1}
}
func (m *BotSetInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotSetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotSetInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotSetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotSetInfo.Merge(m, src)
}
func (m *BotSetInfo) XXX_Size() int {
	return m.Size()
}
func (m *BotSetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BotSetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BotSetInfo proto.InternalMessageInfo

func (m *BotSetInfo) GetBotID() int64 {
	if m != nil {
		return m.BotID
	}
	return 0
}

func (m *BotSetInfo) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *BotSetInfo) GetOwner() int64 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *BotSetInfo) GetBotCommands() []*BotCommands {
	if m != nil {
		return m.BotCommands
	}
	return nil
}

func (m *BotSetInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// BotGet
// @Function
// @Return: BotInfo
type BotGet struct {
	UserID int64 `protobuf:"varint,1,req,name=UserID" json:"UserID"`
	Limit  int32 `protobuf:"varint,2,opt,name=Limit" json:"Limit"`
}

func (m *BotGet) Reset()         { *m = BotGet{} }
func (m *BotGet) String() string { return proto.CompactTextString(m) }
func (*BotGet) ProtoMessage()    {}
func (*BotGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{2}
}
func (m *BotGet) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotGet.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotGet.Merge(m, src)
}
func (m *BotGet) XXX_Size() int {
	return m.Size()
}
func (m *BotGet) XXX_DiscardUnknown() {
	xxx_messageInfo_BotGet.DiscardUnknown(m)
}

var xxx_messageInfo_BotGet proto.InternalMessageInfo

func (m *BotGet) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *BotGet) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// BotSendMessage
// @Function
// @Return: Bool
type BotSendMessage struct {
	RandomID      int64                  `protobuf:"varint,1,req,name=RandomID" json:"RandomID"`
	Peer          *InputPeer             `protobuf:"bytes,2,req,name=Peer" json:"Peer,omitempty"`
	Body          string                 `protobuf:"bytes,5,req,name=Body" json:"Body"`
	ReplyTo       int64                  `protobuf:"varint,6,opt,name=ReplyTo" json:"ReplyTo"`
	ClearDraft    bool                   `protobuf:"varint,7,opt,name=ClearDraft" json:"ClearDraft"`
	Entities      []*MessageEntity       `protobuf:"bytes,8,rep,name=Entities" json:"Entities,omitempty"`
	Markups       []*ReplyKeyboardMarkup `protobuf:"bytes,9,rep,name=Markups" json:"Markups,omitempty"`
	InlineMarkups []*ReplyInlineMarkup   `protobuf:"bytes,10,rep,name=InlineMarkups" json:"InlineMarkups,omitempty"`
}

func (m *BotSendMessage) Reset()         { *m = BotSendMessage{} }
func (m *BotSendMessage) String() string { return proto.CompactTextString(m) }
func (*BotSendMessage) ProtoMessage()    {}
func (*BotSendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{3}
}
func (m *BotSendMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotSendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotSendMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotSendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotSendMessage.Merge(m, src)
}
func (m *BotSendMessage) XXX_Size() int {
	return m.Size()
}
func (m *BotSendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_BotSendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_BotSendMessage proto.InternalMessageInfo

func (m *BotSendMessage) GetRandomID() int64 {
	if m != nil {
		return m.RandomID
	}
	return 0
}

func (m *BotSendMessage) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *BotSendMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *BotSendMessage) GetReplyTo() int64 {
	if m != nil {
		return m.ReplyTo
	}
	return 0
}

func (m *BotSendMessage) GetClearDraft() bool {
	if m != nil {
		return m.ClearDraft
	}
	return false
}

func (m *BotSendMessage) GetEntities() []*MessageEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *BotSendMessage) GetMarkups() []*ReplyKeyboardMarkup {
	if m != nil {
		return m.Markups
	}
	return nil
}

func (m *BotSendMessage) GetInlineMarkups() []*ReplyInlineMarkup {
	if m != nil {
		return m.InlineMarkups
	}
	return nil
}

// BotsMany
type BotsMany struct {
	Bots []*BotInfo `protobuf:"bytes,1,rep,name=Bots" json:"Bots,omitempty"`
}

func (m *BotsMany) Reset()         { *m = BotsMany{} }
func (m *BotsMany) String() string { return proto.CompactTextString(m) }
func (*BotsMany) ProtoMessage()    {}
func (*BotsMany) Descriptor() ([]byte, []int) {
	return fileDescriptor_802c818ed586bbc7, []int{4}
}
func (m *BotsMany) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BotsMany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BotsMany.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BotsMany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BotsMany.Merge(m, src)
}
func (m *BotsMany) XXX_Size() int {
	return m.Size()
}
func (m *BotsMany) XXX_DiscardUnknown() {
	xxx_messageInfo_BotsMany.DiscardUnknown(m)
}

var xxx_messageInfo_BotsMany proto.InternalMessageInfo

func (m *BotsMany) GetBots() []*BotInfo {
	if m != nil {
		return m.Bots
	}
	return nil
}

func init() {
	proto.RegisterType((*BotStart)(nil), "msg.BotStart")
	proto.RegisterType((*BotSetInfo)(nil), "msg.BotSetInfo")
	proto.RegisterType((*BotGet)(nil), "msg.BotGet")
	proto.RegisterType((*BotSendMessage)(nil), "msg.BotSendMessage")
	proto.RegisterType((*BotsMany)(nil), "msg.BotsMany")
}

func init() { proto.RegisterFile("bot.api.proto", fileDescriptor_802c818ed586bbc7) }

var fileDescriptor_802c818ed586bbc7 = []byte{
	// 552 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xce, 0x3a, 0xbf, 0xdd, 0xd0, 0x82, 0x56, 0x80, 0x56, 0x39, 0xb8, 0x96, 0x85, 0x90, 0x0f,
	0xe0, 0x56, 0x39, 0x73, 0x72, 0x82, 0x50, 0x04, 0x51, 0x23, 0x17, 0x1e, 0x60, 0x93, 0x6c, 0x5c,
	0x8b, 0xd8, 0x6b, 0x76, 0x27, 0x05, 0xbf, 0x05, 0xcf, 0xc4, 0xa9, 0xc7, 0x1e, 0x7b, 0x42, 0x28,
	0x79, 0x11, 0xe4, 0x49, 0x9c, 0x38, 0xa2, 0x07, 0x6e, 0xbb, 0xdf, 0xf7, 0xcd, 0xcf, 0x37, 0x33,
	0xf4, 0x74, 0xaa, 0xc0, 0x17, 0x59, 0xec, 0x67, 0x5a, 0x81, 0x62, 0xf5, 0xc4, 0x44, 0xbd, 0xb7,
	0x51, 0x0c, 0x37, 0xab, 0xa9, 0x3f, 0x53, 0xc9, 0x45, 0xa4, 0x22, 0x75, 0x81, 0xdc, 0x74, 0xb5,
	0xc0, 0x1f, 0x7e, 0xf0, 0xb5, 0x8d, 0xe9, 0xbd, 0x98, 0xdd, 0x08, 0xf0, 0x67, 0x4a, 0x4b, 0x1f,
	0xf2, 0x4c, 0x9a, 0x1d, 0x7c, 0x7e, 0x80, 0x13, 0x69, 0x8c, 0x88, 0xa4, 0x9f, 0x08, 0xfd, 0x75,
	0x95, 0xed, 0x04, 0x2e, 0xd0, 0x4e, 0xa0, 0xe0, 0x1a, 0x84, 0x06, 0xe6, 0xd0, 0x7a, 0xa0, 0x80,
	0x13, 0xc7, 0xf2, 0xba, 0xfd, 0x33, 0x3f, 0x31, 0x91, 0x3f, 0x4a, 0xb3, 0x15, 0x4c, 0xa4, 0xd4,
	0x61, 0x41, 0x31, 0x87, 0x76, 0x42, 0x91, 0xce, 0x55, 0x32, 0x1a, 0x72, 0xcb, 0xb1, 0xbc, 0x7a,
	0xd0, 0xb8, 0xfb, 0x7d, 0x5e, 0x0b, 0xf7, 0x28, 0x7b, 0x45, 0x29, 0x26, 0x9b, 0x08, 0x2d, 0x12,
	0x5e, 0x77, 0x2c, 0xef, 0x64, 0xa7, 0xa9, 0xe0, 0xee, 0x2f, 0x42, 0x69, 0x51, 0x56, 0xc2, 0x28,
	0x5d, 0x28, 0xd6, 0xa3, 0xcd, 0x40, 0xc1, 0x68, 0x88, 0xa5, 0xcb, 0x9c, 0x5b, 0xe8, 0x3f, 0x4a,
	0xf6, 0x68, 0xf3, 0xea, 0x7b, 0x2a, 0x35, 0x56, 0xdb, 0x47, 0x23, 0xc4, 0xfa, 0xb4, 0x1b, 0x28,
	0x18, 0xa8, 0x24, 0x11, 0xe9, 0xdc, 0xf0, 0x86, 0x53, 0xf7, 0xba, 0xfd, 0x67, 0x68, 0xad, 0x82,
	0x87, 0x55, 0x11, 0x7b, 0x4d, 0xbb, 0x43, 0x69, 0x66, 0x3a, 0xce, 0x20, 0x56, 0x29, 0x6f, 0x56,
	0x3c, 0x54, 0x09, 0x77, 0x48, 0x5b, 0x81, 0x82, 0x0f, 0x12, 0x98, 0x4d, 0x5b, 0x5f, 0x8c, 0xd4,
	0x7b, 0x03, 0xad, 0x42, 0x7c, 0x49, 0xc2, 0x1d, 0x5a, 0x74, 0xf8, 0x29, 0x4e, 0x62, 0xe0, 0x96,
	0x43, 0xbc, 0x66, 0xd9, 0x21, 0x42, 0xee, 0x83, 0x45, 0xcf, 0x70, 0x14, 0xe9, 0x7c, 0xbc, 0xdd,
	0xd0, 0x91, 0x65, 0xf2, 0xa8, 0x65, 0x97, 0x36, 0x8a, 0xa5, 0xe0, 0x40, 0xfe, 0x5d, 0x15, 0x72,
	0x8c, 0xd3, 0x46, 0xa0, 0xe6, 0xf9, 0x51, 0xff, 0x88, 0x30, 0x9b, 0xb6, 0x43, 0x99, 0x2d, 0xf3,
	0xcf, 0x8a, 0xb7, 0x1c, 0xb2, 0x4f, 0x5f, 0x82, 0xc5, 0x0e, 0x07, 0x4b, 0x29, 0xf4, 0x50, 0x8b,
	0x05, 0xf0, 0xb6, 0x43, 0xbc, 0x4e, 0xb9, 0xc3, 0x03, 0xce, 0x7c, 0xda, 0x79, 0x9f, 0x42, 0x0c,
	0xb1, 0x34, 0xbc, 0x83, 0x73, 0x65, 0xd8, 0xc7, 0xce, 0x05, 0x72, 0x79, 0xb8, 0xd7, 0xb0, 0x3e,
	0x6d, 0x8f, 0xb7, 0xa7, 0xc7, 0x4f, 0x50, 0xce, 0x51, 0x8e, 0x45, 0x3f, 0xca, 0x7c, 0xaa, 0x84,
	0x9e, 0x6f, 0x05, 0x61, 0x29, 0x64, 0xef, 0xe8, 0xe9, 0x28, 0x5d, 0xc6, 0xa9, 0x2c, 0x23, 0x29,
	0x46, 0xbe, 0x3c, 0x44, 0x56, 0xe9, 0xf0, 0x58, 0xec, 0xbe, 0xc1, 0xdb, 0x36, 0x63, 0x91, 0xe6,
	0xcc, 0x29, 0xa6, 0x01, 0x86, 0x13, 0x4c, 0xf0, 0xa4, 0xbc, 0x80, 0xe2, 0xfc, 0x42, 0x64, 0xfa,
	0x57, 0xa8, 0x9e, 0x68, 0xf5, 0x23, 0x67, 0x03, 0xfa, 0xf4, 0x5a, 0xea, 0x5b, 0x19, 0x28, 0x08,
	0xe5, 0xb7, 0x95, 0x34, 0xc0, 0x9e, 0x1f, 0x9b, 0xbb, 0x95, 0x4b, 0x95, 0xc9, 0xde, 0xa3, 0xa8,
	0x5b, 0xf3, 0xc8, 0x25, 0x09, 0xf8, 0xdd, 0xda, 0x26, 0xf7, 0x6b, 0x9b, 0xfc, 0x59, 0xdb, 0xe4,
	0xe7, 0xc6, 0xae, 0xdd, 0x6f, 0xec, 0xda, 0xc3, 0xc6, 0xae, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x0f, 0x4b, 0x16, 0x17, 0xf0, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BotProxyClient is the client API for BotProxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BotProxyClient interface {
	ServeBotRequest(ctx context.Context, opts ...grpc.CallOption) (BotProxy_ServeBotRequestClient, error)
}

type botProxyClient struct {
	cc *grpc.ClientConn
}

func NewBotProxyClient(cc *grpc.ClientConn) BotProxyClient {
	return &botProxyClient{cc}
}

func (c *botProxyClient) ServeBotRequest(ctx context.Context, opts ...grpc.CallOption) (BotProxy_ServeBotRequestClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BotProxy_serviceDesc.Streams[0], "/msg.BotProxy/ServeBotRequest", opts...)
	if err != nil {
		return nil, err
	}
	x := &botProxyServeBotRequestClient{stream}
	return x, nil
}

type BotProxy_ServeBotRequestClient interface {
	Send(*MessageEnvelope) error
	Recv() (*MessageEnvelope, error)
	grpc.ClientStream
}

type botProxyServeBotRequestClient struct {
	grpc.ClientStream
}

func (x *botProxyServeBotRequestClient) Send(m *MessageEnvelope) error {
	return x.ClientStream.SendMsg(m)
}

func (x *botProxyServeBotRequestClient) Recv() (*MessageEnvelope, error) {
	m := new(MessageEnvelope)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BotProxyServer is the server API for BotProxy service.
type BotProxyServer interface {
	ServeBotRequest(BotProxy_ServeBotRequestServer) error
}

// UnimplementedBotProxyServer can be embedded to have forward compatible implementations.
type UnimplementedBotProxyServer struct {
}

func (*UnimplementedBotProxyServer) ServeBotRequest(srv BotProxy_ServeBotRequestServer) error {
	return status.Errorf(codes.Unimplemented, "method ServeBotRequest not implemented")
}

func RegisterBotProxyServer(s *grpc.Server, srv BotProxyServer) {
	s.RegisterService(&_BotProxy_serviceDesc, srv)
}

func _BotProxy_ServeBotRequest_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BotProxyServer).ServeBotRequest(&botProxyServeBotRequestServer{stream})
}

type BotProxy_ServeBotRequestServer interface {
	Send(*MessageEnvelope) error
	Recv() (*MessageEnvelope, error)
	grpc.ServerStream
}

type botProxyServeBotRequestServer struct {
	grpc.ServerStream
}

func (x *botProxyServeBotRequestServer) Send(m *MessageEnvelope) error {
	return x.ServerStream.SendMsg(m)
}

func (x *botProxyServeBotRequestServer) Recv() (*MessageEnvelope, error) {
	m := new(MessageEnvelope)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _BotProxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "msg.BotProxy",
	HandlerType: (*BotProxyServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ServeBotRequest",
			Handler:       _BotProxy_ServeBotRequest_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "bot.api.proto",
}

func (m *BotStart) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotStart) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotStart) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.StartParam)
	copy(dAtA[i:], m.StartParam)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.StartParam)))
	i--
	dAtA[i] = 0x1a
	i = encodeVarintBotApi(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x10
	if m.Bot == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Bot")
	} else {
		{
			size, err := m.Bot.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BotSetInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotSetInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotSetInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Description)
	copy(dAtA[i:], m.Description)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Description)))
	i--
	dAtA[i] = 0x2a
	if len(m.BotCommands) > 0 {
		for iNdEx := len(m.BotCommands) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BotCommands[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.Owner))
	i--
	dAtA[i] = 0x18
	i = encodeVarintBotApi(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x10
	i = encodeVarintBotApi(dAtA, i, uint64(m.BotID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotGet) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotGet) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotGet) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintBotApi(dAtA, i, uint64(m.Limit))
	i--
	dAtA[i] = 0x10
	i = encodeVarintBotApi(dAtA, i, uint64(m.UserID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotSendMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotSendMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotSendMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InlineMarkups) > 0 {
		for iNdEx := len(m.InlineMarkups) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InlineMarkups[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if len(m.Markups) > 0 {
		for iNdEx := len(m.Markups) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Markups[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.Entities) > 0 {
		for iNdEx := len(m.Entities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	i--
	if m.ClearDraft {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x38
	i = encodeVarintBotApi(dAtA, i, uint64(m.ReplyTo))
	i--
	dAtA[i] = 0x30
	i -= len(m.Body)
	copy(dAtA[i:], m.Body)
	i = encodeVarintBotApi(dAtA, i, uint64(len(m.Body)))
	i--
	dAtA[i] = 0x2a
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBotApi(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i = encodeVarintBotApi(dAtA, i, uint64(m.RandomID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *BotsMany) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BotsMany) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BotsMany) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Bots) > 0 {
		for iNdEx := len(m.Bots) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Bots[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBotApi(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintBotApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovBotApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BotStart) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Bot != nil {
		l = m.Bot.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	n += 1 + sovBotApi(uint64(m.RandomID))
	l = len(m.StartParam)
	n += 1 + l + sovBotApi(uint64(l))
	return n
}

func (m *BotSetInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.BotID))
	n += 1 + sovBotApi(uint64(m.RandomID))
	n += 1 + sovBotApi(uint64(m.Owner))
	if len(m.BotCommands) > 0 {
		for _, e := range m.BotCommands {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	l = len(m.Description)
	n += 1 + l + sovBotApi(uint64(l))
	return n
}

func (m *BotGet) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.UserID))
	n += 1 + sovBotApi(uint64(m.Limit))
	return n
}

func (m *BotSendMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovBotApi(uint64(m.RandomID))
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovBotApi(uint64(l))
	}
	l = len(m.Body)
	n += 1 + l + sovBotApi(uint64(l))
	n += 1 + sovBotApi(uint64(m.ReplyTo))
	n += 2
	if len(m.Entities) > 0 {
		for _, e := range m.Entities {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	if len(m.Markups) > 0 {
		for _, e := range m.Markups {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	if len(m.InlineMarkups) > 0 {
		for _, e := range m.InlineMarkups {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	return n
}

func (m *BotsMany) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Bots) > 0 {
		for _, e := range m.Bots {
			l = e.Size()
			n += 1 + l + sovBotApi(uint64(l))
		}
	}
	return n
}

func sovBotApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBotApi(x uint64) (n int) {
	return sovBotApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *BotStart) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotStart: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotStart: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bot", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Bot == nil {
				m.Bot = &InputPeer{}
			}
			if err := m.Bot.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartParam", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartParam = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Bot")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("StartParam")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotSetInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotSetInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotSetInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotID", wireType)
			}
			m.BotID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BotID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			m.Owner = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Owner |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BotCommands", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BotCommands = append(m.BotCommands, &BotCommands{})
			if err := m.BotCommands[len(m.BotCommands)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("BotID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Owner")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Description")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotGet) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotGet: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotGet: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserID", wireType)
			}
			m.UserID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("UserID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotSendMessage) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotSendMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotSendMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomID", wireType)
			}
			m.RandomID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RandomID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReplyTo", wireType)
			}
			m.ReplyTo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReplyTo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearDraft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ClearDraft = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entities = append(m.Entities, &MessageEntity{})
			if err := m.Entities[len(m.Entities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Markups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Markups = append(m.Markups, &ReplyKeyboardMarkup{})
			if err := m.Markups[len(m.Markups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InlineMarkups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InlineMarkups = append(m.InlineMarkups, &ReplyInlineMarkup{})
			if err := m.InlineMarkups[len(m.InlineMarkups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("RandomID")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Body")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BotsMany) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BotsMany: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BotsMany: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bots", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBotApi
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBotApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bots = append(m.Bots, &BotInfo{})
			if err := m.Bots[len(m.Bots)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBotApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBotApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBotApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBotApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBotApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBotApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBotApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBotApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBotApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBotApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBotApi = fmt.Errorf("proto: unexpected end of group")
)
