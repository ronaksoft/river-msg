// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.files.proto

package msg

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

const C_FileSavePart int64 = 3766876582

type poolFileSavePart struct {
	pool sync.Pool
}

func (p poolFileSavePart) Get() *FileSavePart {
	x, ok := p.pool.Get().(*FileSavePart)
	if !ok {
		return &FileSavePart{}
	}
	return x
}

func (p poolFileSavePart) Put(x *FileSavePart) {
	p.pool.Put(x)
}

var PoolFileSavePart = poolFileSavePart{}

func ResultFileSavePart(out *MessageEnvelope, res *FileSavePart) {
	out.Constructor = C_FileSavePart
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_FileGet int64 = 4282510672

type poolFileGet struct {
	pool sync.Pool
}

func (p poolFileGet) Get() *FileGet {
	x, ok := p.pool.Get().(*FileGet)
	if !ok {
		return &FileGet{}
	}
	return x
}

func (p poolFileGet) Put(x *FileGet) {
	p.pool.Put(x)
}

var PoolFileGet = poolFileGet{}

func ResultFileGet(out *MessageEnvelope, res *FileGet) {
	out.Constructor = C_FileGet
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_FileGetMany int64 = 2111810754

type poolFileGetMany struct {
	pool sync.Pool
}

func (p poolFileGetMany) Get() *FileGetMany {
	x, ok := p.pool.Get().(*FileGetMany)
	if !ok {
		return &FileGetMany{}
	}
	x.FileGetMany = x.FileGetMany[:0]
	return x
}

func (p poolFileGetMany) Put(x *FileGetMany) {
	p.pool.Put(x)
}

var PoolFileGetMany = poolFileGetMany{}

func ResultFileGetMany(out *MessageEnvelope, res *FileGetMany) {
	out.Constructor = C_FileGetMany
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_File int64 = 749574446

type poolFile struct {
	pool sync.Pool
}

func (p poolFile) Get() *File {
	x, ok := p.pool.Get().(*File)
	if !ok {
		return &File{}
	}
	x.MD5Hash = 0
	return x
}

func (p poolFile) Put(x *File) {
	p.pool.Put(x)
}

var PoolFile = poolFile{}

func ResultFile(out *MessageEnvelope, res *File) {
	out.Constructor = C_File
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

const C_FileMany int64 = 1222018159

type poolFileMany struct {
	pool sync.Pool
}

func (p poolFileMany) Get() *FileMany {
	x, ok := p.pool.Get().(*FileMany)
	if !ok {
		return &FileMany{}
	}
	x.FileMany = x.FileMany[:0]
	return x
}

func (p poolFileMany) Put(x *FileMany) {
	p.pool.Put(x)
}

var PoolFileMany = poolFileMany{}

func ResultFileMany(out *MessageEnvelope, res *FileMany) {
	out.Constructor = C_FileMany
	pbytes.Put(out.Message)
	out.Message = pbytes.GetLen(res.Size())
	res.MarshalTo(out.Message)
}

func init() {
	ConstructorNames[3766876582] = "FileSavePart"
	ConstructorNames[4282510672] = "FileGet"
	ConstructorNames[2111810754] = "FileGetMany"
	ConstructorNames[749574446] = "File"
	ConstructorNames[1222018159] = "FileMany"
}
