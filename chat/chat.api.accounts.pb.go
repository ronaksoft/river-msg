// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.accounts.proto

package msg

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// AccountSetNotifySettings
// @Function
// @Return: Bool
type AccountSetNotifySettings struct {
	Peer     *InputPeer          `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
	Settings *PeerNotifySettings `protobuf:"bytes,2,req,name=Settings" json:"Settings,omitempty"`
}

func (m *AccountSetNotifySettings) Reset()         { *m = AccountSetNotifySettings{} }
func (m *AccountSetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*AccountSetNotifySettings) ProtoMessage()    {}
func (*AccountSetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{0}
}
func (m *AccountSetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountSetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountSetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountSetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSetNotifySettings.Merge(m, src)
}
func (m *AccountSetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *AccountSetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSetNotifySettings proto.InternalMessageInfo

func (m *AccountSetNotifySettings) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *AccountSetNotifySettings) GetSettings() *PeerNotifySettings {
	if m != nil {
		return m.Settings
	}
	return nil
}

// AccountGetNotifySettings
// @Function
// @Return: NotifySettings
type AccountGetNotifySettings struct {
	Peer *InputPeer `protobuf:"bytes,1,req,name=Peer" json:"Peer,omitempty"`
}

func (m *AccountGetNotifySettings) Reset()         { *m = AccountGetNotifySettings{} }
func (m *AccountGetNotifySettings) String() string { return proto.CompactTextString(m) }
func (*AccountGetNotifySettings) ProtoMessage()    {}
func (*AccountGetNotifySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{1}
}
func (m *AccountGetNotifySettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetNotifySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetNotifySettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetNotifySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetNotifySettings.Merge(m, src)
}
func (m *AccountGetNotifySettings) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetNotifySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetNotifySettings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetNotifySettings proto.InternalMessageInfo

func (m *AccountGetNotifySettings) GetPeer() *InputPeer {
	if m != nil {
		return m.Peer
	}
	return nil
}

// AccountRegisterDevice
// @Function
// @Return: Bool
type AccountRegisterDevice struct {
	Token         string            `protobuf:"bytes,2,req,name=Token" json:"Token"`
	DeviceModel   string            `protobuf:"bytes,3,req,name=DeviceModel" json:"DeviceModel"`
	SystemVersion string            `protobuf:"bytes,4,req,name=SystemVersion" json:"SystemVersion"`
	AppVersion    string            `protobuf:"bytes,5,req,name=AppVersion" json:"AppVersion"`
	LangCode      string            `protobuf:"bytes,6,req,name=LangCode" json:"LangCode"`
	TokenType     PushTokenProvider `protobuf:"varint,7,req,name=TokenType,enum=msg.PushTokenProvider" json:"TokenType"`
	ClientID      string            `protobuf:"bytes,8,req,name=ClientID" json:"ClientID"`
}

func (m *AccountRegisterDevice) Reset()         { *m = AccountRegisterDevice{} }
func (m *AccountRegisterDevice) String() string { return proto.CompactTextString(m) }
func (*AccountRegisterDevice) ProtoMessage()    {}
func (*AccountRegisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{2}
}
func (m *AccountRegisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountRegisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountRegisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountRegisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRegisterDevice.Merge(m, src)
}
func (m *AccountRegisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *AccountRegisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRegisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRegisterDevice proto.InternalMessageInfo

func (m *AccountRegisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AccountRegisterDevice) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *AccountRegisterDevice) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *AccountRegisterDevice) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *AccountRegisterDevice) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *AccountRegisterDevice) GetTokenType() PushTokenProvider {
	if m != nil {
		return m.TokenType
	}
	return PushTokenFirebase
}

func (m *AccountRegisterDevice) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

// AccountUnregisterDevice
// @Function
// @Return: Bool
type AccountUnregisterDevice struct {
	TokenType int32  `protobuf:"varint,1,req,name=TokenType" json:"TokenType"`
	Token     string `protobuf:"bytes,2,req,name=Token" json:"Token"`
}

func (m *AccountUnregisterDevice) Reset()         { *m = AccountUnregisterDevice{} }
func (m *AccountUnregisterDevice) String() string { return proto.CompactTextString(m) }
func (*AccountUnregisterDevice) ProtoMessage()    {}
func (*AccountUnregisterDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{3}
}
func (m *AccountUnregisterDevice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUnregisterDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUnregisterDevice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUnregisterDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUnregisterDevice.Merge(m, src)
}
func (m *AccountUnregisterDevice) XXX_Size() int {
	return m.Size()
}
func (m *AccountUnregisterDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUnregisterDevice.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUnregisterDevice proto.InternalMessageInfo

func (m *AccountUnregisterDevice) GetTokenType() int32 {
	if m != nil {
		return m.TokenType
	}
	return 0
}

func (m *AccountUnregisterDevice) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// AccountUpdateProfile
// @Function
// @Return: UserFull
type AccountUpdateProfile struct {
	FirstName string `protobuf:"bytes,1,req,name=FirstName" json:"FirstName"`
	LastName  string `protobuf:"bytes,2,req,name=LastName" json:"LastName"`
	Bio       string `protobuf:"bytes,3,opt,name=Bio" json:"Bio"`
}

func (m *AccountUpdateProfile) Reset()         { *m = AccountUpdateProfile{} }
func (m *AccountUpdateProfile) String() string { return proto.CompactTextString(m) }
func (*AccountUpdateProfile) ProtoMessage()    {}
func (*AccountUpdateProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{4}
}
func (m *AccountUpdateProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUpdateProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUpdateProfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUpdateProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdateProfile.Merge(m, src)
}
func (m *AccountUpdateProfile) XXX_Size() int {
	return m.Size()
}
func (m *AccountUpdateProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdateProfile.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdateProfile proto.InternalMessageInfo

func (m *AccountUpdateProfile) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *AccountUpdateProfile) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *AccountUpdateProfile) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

// AccountCheckUsername
// @Function
// @Return: Bool
type AccountCheckUsername struct {
	Username string `protobuf:"bytes,1,req,name=Username" json:"Username"`
}

func (m *AccountCheckUsername) Reset()         { *m = AccountCheckUsername{} }
func (m *AccountCheckUsername) String() string { return proto.CompactTextString(m) }
func (*AccountCheckUsername) ProtoMessage()    {}
func (*AccountCheckUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{5}
}
func (m *AccountCheckUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountCheckUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountCheckUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountCheckUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountCheckUsername.Merge(m, src)
}
func (m *AccountCheckUsername) XXX_Size() int {
	return m.Size()
}
func (m *AccountCheckUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountCheckUsername.DiscardUnknown(m)
}

var xxx_messageInfo_AccountCheckUsername proto.InternalMessageInfo

func (m *AccountCheckUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// AccountUpdateUsername
// @Function
// @Return: UserFull
type AccountUpdateUsername struct {
	Username string `protobuf:"bytes,1,req,name=Username" json:"Username"`
}

func (m *AccountUpdateUsername) Reset()         { *m = AccountUpdateUsername{} }
func (m *AccountUpdateUsername) String() string { return proto.CompactTextString(m) }
func (*AccountUpdateUsername) ProtoMessage()    {}
func (*AccountUpdateUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{6}
}
func (m *AccountUpdateUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUpdateUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUpdateUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUpdateUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdateUsername.Merge(m, src)
}
func (m *AccountUpdateUsername) XXX_Size() int {
	return m.Size()
}
func (m *AccountUpdateUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdateUsername.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdateUsername proto.InternalMessageInfo

func (m *AccountUpdateUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// AccountUploadPhoto
// @Function
// @Return: Bool / UserPhoto
type AccountUploadPhoto struct {
	File         *InputFile `protobuf:"bytes,1,req,name=File" json:"File,omitempty"`
	ReturnObject bool       `protobuf:"varint,2,opt,name=ReturnObject" json:"ReturnObject"`
}

func (m *AccountUploadPhoto) Reset()         { *m = AccountUploadPhoto{} }
func (m *AccountUploadPhoto) String() string { return proto.CompactTextString(m) }
func (*AccountUploadPhoto) ProtoMessage()    {}
func (*AccountUploadPhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{7}
}
func (m *AccountUploadPhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUploadPhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUploadPhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUploadPhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUploadPhoto.Merge(m, src)
}
func (m *AccountUploadPhoto) XXX_Size() int {
	return m.Size()
}
func (m *AccountUploadPhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUploadPhoto.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUploadPhoto proto.InternalMessageInfo

func (m *AccountUploadPhoto) GetFile() *InputFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *AccountUploadPhoto) GetReturnObject() bool {
	if m != nil {
		return m.ReturnObject
	}
	return false
}

// AccountUpdatePhoto
// @Function
// @Return: Bool
type AccountUpdatePhoto struct {
	PhotoID int64 `protobuf:"varint,1,req,name=PhotoID" json:"PhotoID"`
}

func (m *AccountUpdatePhoto) Reset()         { *m = AccountUpdatePhoto{} }
func (m *AccountUpdatePhoto) String() string { return proto.CompactTextString(m) }
func (*AccountUpdatePhoto) ProtoMessage()    {}
func (*AccountUpdatePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{8}
}
func (m *AccountUpdatePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUpdatePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUpdatePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUpdatePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdatePhoto.Merge(m, src)
}
func (m *AccountUpdatePhoto) XXX_Size() int {
	return m.Size()
}
func (m *AccountUpdatePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdatePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdatePhoto proto.InternalMessageInfo

func (m *AccountUpdatePhoto) GetPhotoID() int64 {
	if m != nil {
		return m.PhotoID
	}
	return 0
}

// AccountRemotePhoto
// @Function
// @Return: Bool
type AccountRemovePhoto struct {
	PhotoID int64 `protobuf:"varint,1,opt,name=PhotoID" json:"PhotoID"`
}

func (m *AccountRemovePhoto) Reset()         { *m = AccountRemovePhoto{} }
func (m *AccountRemovePhoto) String() string { return proto.CompactTextString(m) }
func (*AccountRemovePhoto) ProtoMessage()    {}
func (*AccountRemovePhoto) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{9}
}
func (m *AccountRemovePhoto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountRemovePhoto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountRemovePhoto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountRemovePhoto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRemovePhoto.Merge(m, src)
}
func (m *AccountRemovePhoto) XXX_Size() int {
	return m.Size()
}
func (m *AccountRemovePhoto) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRemovePhoto.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRemovePhoto proto.InternalMessageInfo

func (m *AccountRemovePhoto) GetPhotoID() int64 {
	if m != nil {
		return m.PhotoID
	}
	return 0
}

// AccountSendChangePhoneCode
// @Function
// @Return: AuthSentCode
type AccountSendChangePhoneCode struct {
	Phone   string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	AppHash string `protobuf:"bytes,2,opt,name=AppHash" json:"AppHash"`
}

func (m *AccountSendChangePhoneCode) Reset()         { *m = AccountSendChangePhoneCode{} }
func (m *AccountSendChangePhoneCode) String() string { return proto.CompactTextString(m) }
func (*AccountSendChangePhoneCode) ProtoMessage()    {}
func (*AccountSendChangePhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{10}
}
func (m *AccountSendChangePhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountSendChangePhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountSendChangePhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountSendChangePhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSendChangePhoneCode.Merge(m, src)
}
func (m *AccountSendChangePhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *AccountSendChangePhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSendChangePhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSendChangePhoneCode proto.InternalMessageInfo

func (m *AccountSendChangePhoneCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AccountSendChangePhoneCode) GetAppHash() string {
	if m != nil {
		return m.AppHash
	}
	return ""
}

// AccountResendChangePhoneCode
// @Function
// @Return: Bool
type AccountResendChangePhoneCode struct {
	Phone         string `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	PhoneCodeHash string `protobuf:"bytes,2,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
}

func (m *AccountResendChangePhoneCode) Reset()         { *m = AccountResendChangePhoneCode{} }
func (m *AccountResendChangePhoneCode) String() string { return proto.CompactTextString(m) }
func (*AccountResendChangePhoneCode) ProtoMessage()    {}
func (*AccountResendChangePhoneCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{11}
}
func (m *AccountResendChangePhoneCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountResendChangePhoneCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountResendChangePhoneCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountResendChangePhoneCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountResendChangePhoneCode.Merge(m, src)
}
func (m *AccountResendChangePhoneCode) XXX_Size() int {
	return m.Size()
}
func (m *AccountResendChangePhoneCode) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountResendChangePhoneCode.DiscardUnknown(m)
}

var xxx_messageInfo_AccountResendChangePhoneCode proto.InternalMessageInfo

func (m *AccountResendChangePhoneCode) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AccountResendChangePhoneCode) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

// AccountChangePhone
// @Function
// @Return: User
type AccountChangePhone struct {
	Phone         string         `protobuf:"bytes,1,req,name=Phone" json:"Phone"`
	PhoneCodeHash string         `protobuf:"bytes,2,req,name=PhoneCodeHash" json:"PhoneCodeHash"`
	PhoneCode     string         `protobuf:"bytes,3,req,name=PhoneCode" json:"PhoneCode"`
	Password      *InputPassword `protobuf:"bytes,4,opt,name=Password" json:"Password,omitempty"`
}

func (m *AccountChangePhone) Reset()         { *m = AccountChangePhone{} }
func (m *AccountChangePhone) String() string { return proto.CompactTextString(m) }
func (*AccountChangePhone) ProtoMessage()    {}
func (*AccountChangePhone) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{12}
}
func (m *AccountChangePhone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountChangePhone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountChangePhone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountChangePhone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountChangePhone.Merge(m, src)
}
func (m *AccountChangePhone) XXX_Size() int {
	return m.Size()
}
func (m *AccountChangePhone) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountChangePhone.DiscardUnknown(m)
}

var xxx_messageInfo_AccountChangePhone proto.InternalMessageInfo

func (m *AccountChangePhone) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *AccountChangePhone) GetPhoneCodeHash() string {
	if m != nil {
		return m.PhoneCodeHash
	}
	return ""
}

func (m *AccountChangePhone) GetPhoneCode() string {
	if m != nil {
		return m.PhoneCode
	}
	return ""
}

func (m *AccountChangePhone) GetPassword() *InputPassword {
	if m != nil {
		return m.Password
	}
	return nil
}

// AccountSetPrivacy
// @Function
// @Return: AccountPrivacyRules
type AccountSetPrivacy struct {
	ChatInvite       []*PrivacyRule `protobuf:"bytes,1,rep,name=ChatInvite" json:"ChatInvite,omitempty"`
	LastSeen         []*PrivacyRule `protobuf:"bytes,2,rep,name=LastSeen" json:"LastSeen,omitempty"`
	PhoneNumber      []*PrivacyRule `protobuf:"bytes,3,rep,name=PhoneNumber" json:"PhoneNumber,omitempty"`
	ProfilePhoto     []*PrivacyRule `protobuf:"bytes,4,rep,name=ProfilePhoto" json:"ProfilePhoto,omitempty"`
	ForwardedMessage []*PrivacyRule `protobuf:"bytes,5,rep,name=ForwardedMessage" json:"ForwardedMessage,omitempty"`
	Call             []*PrivacyRule `protobuf:"bytes,6,rep,name=Call" json:"Call,omitempty"`
}

func (m *AccountSetPrivacy) Reset()         { *m = AccountSetPrivacy{} }
func (m *AccountSetPrivacy) String() string { return proto.CompactTextString(m) }
func (*AccountSetPrivacy) ProtoMessage()    {}
func (*AccountSetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{13}
}
func (m *AccountSetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountSetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountSetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountSetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSetPrivacy.Merge(m, src)
}
func (m *AccountSetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *AccountSetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSetPrivacy proto.InternalMessageInfo

func (m *AccountSetPrivacy) GetChatInvite() []*PrivacyRule {
	if m != nil {
		return m.ChatInvite
	}
	return nil
}

func (m *AccountSetPrivacy) GetLastSeen() []*PrivacyRule {
	if m != nil {
		return m.LastSeen
	}
	return nil
}

func (m *AccountSetPrivacy) GetPhoneNumber() []*PrivacyRule {
	if m != nil {
		return m.PhoneNumber
	}
	return nil
}

func (m *AccountSetPrivacy) GetProfilePhoto() []*PrivacyRule {
	if m != nil {
		return m.ProfilePhoto
	}
	return nil
}

func (m *AccountSetPrivacy) GetForwardedMessage() []*PrivacyRule {
	if m != nil {
		return m.ForwardedMessage
	}
	return nil
}

func (m *AccountSetPrivacy) GetCall() []*PrivacyRule {
	if m != nil {
		return m.Call
	}
	return nil
}

// AccountGetPrivacy
// @Function
// @Return: AccountPrivacyRules
type AccountGetPrivacy struct {
	Key PrivacyKey `protobuf:"varint,1,req,name=Key,enum=msg.PrivacyKey" json:"Key"`
}

func (m *AccountGetPrivacy) Reset()         { *m = AccountGetPrivacy{} }
func (m *AccountGetPrivacy) String() string { return proto.CompactTextString(m) }
func (*AccountGetPrivacy) ProtoMessage()    {}
func (*AccountGetPrivacy) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{14}
}
func (m *AccountGetPrivacy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetPrivacy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetPrivacy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetPrivacy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetPrivacy.Merge(m, src)
}
func (m *AccountGetPrivacy) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetPrivacy) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetPrivacy.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetPrivacy proto.InternalMessageInfo

func (m *AccountGetPrivacy) GetKey() PrivacyKey {
	if m != nil {
		return m.Key
	}
	return PrivacyKeyNone
}

// AccountGetAuthorizations
// @Function
// @Returns: Authorizations
type AccountGetAuthorizations struct {
}

func (m *AccountGetAuthorizations) Reset()         { *m = AccountGetAuthorizations{} }
func (m *AccountGetAuthorizations) String() string { return proto.CompactTextString(m) }
func (*AccountGetAuthorizations) ProtoMessage()    {}
func (*AccountGetAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{15}
}
func (m *AccountGetAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetAuthorizations.Merge(m, src)
}
func (m *AccountGetAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetAuthorizations proto.InternalMessageInfo

// AccountResetAuthorization
// @Function
// @Returns: Bool
type AccountResetAuthorization struct {
	AuthID int64 `protobuf:"varint,1,req,name=AuthID" json:"AuthID"`
}

func (m *AccountResetAuthorization) Reset()         { *m = AccountResetAuthorization{} }
func (m *AccountResetAuthorization) String() string { return proto.CompactTextString(m) }
func (*AccountResetAuthorization) ProtoMessage()    {}
func (*AccountResetAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{16}
}
func (m *AccountResetAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountResetAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountResetAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountResetAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountResetAuthorization.Merge(m, src)
}
func (m *AccountResetAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *AccountResetAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountResetAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_AccountResetAuthorization proto.InternalMessageInfo

func (m *AccountResetAuthorization) GetAuthID() int64 {
	if m != nil {
		return m.AuthID
	}
	return 0
}

// AccountUpdateStatus
// @Function
// @Returns: Bool
type AccountUpdateStatus struct {
	Online bool `protobuf:"varint,1,req,name=Online" json:"Online"`
}

func (m *AccountUpdateStatus) Reset()         { *m = AccountUpdateStatus{} }
func (m *AccountUpdateStatus) String() string { return proto.CompactTextString(m) }
func (*AccountUpdateStatus) ProtoMessage()    {}
func (*AccountUpdateStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{17}
}
func (m *AccountUpdateStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUpdateStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUpdateStatus.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUpdateStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdateStatus.Merge(m, src)
}
func (m *AccountUpdateStatus) XXX_Size() int {
	return m.Size()
}
func (m *AccountUpdateStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdateStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdateStatus proto.InternalMessageInfo

func (m *AccountUpdateStatus) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

// AccountSetLang
// @Function
// @Returns: Bool
type AccountSetLang struct {
	LangCode string `protobuf:"bytes,1,req,name=LangCode" json:"LangCode"`
}

func (m *AccountSetLang) Reset()         { *m = AccountSetLang{} }
func (m *AccountSetLang) String() string { return proto.CompactTextString(m) }
func (*AccountSetLang) ProtoMessage()    {}
func (*AccountSetLang) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{18}
}
func (m *AccountSetLang) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountSetLang) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountSetLang.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountSetLang) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountSetLang.Merge(m, src)
}
func (m *AccountSetLang) XXX_Size() int {
	return m.Size()
}
func (m *AccountSetLang) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountSetLang.DiscardUnknown(m)
}

var xxx_messageInfo_AccountSetLang proto.InternalMessageInfo

func (m *AccountSetLang) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

// AccountGetPassword
// @Function
// @Returns: AccountPassword
// Obtain configuration for two-factor authorization with password
type AccountGetPassword struct {
}

func (m *AccountGetPassword) Reset()         { *m = AccountGetPassword{} }
func (m *AccountGetPassword) String() string { return proto.CompactTextString(m) }
func (*AccountGetPassword) ProtoMessage()    {}
func (*AccountGetPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{19}
}
func (m *AccountGetPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetPassword.Merge(m, src)
}
func (m *AccountGetPassword) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetPassword.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetPassword proto.InternalMessageInfo

// AccountGetPasswordSettings
// @Function
// @Returns: AccountPasswordSettings
// Get private info associated to the password info (recovery email & so on)
type AccountGetPasswordSettings struct {
	Password *InputPassword `protobuf:"bytes,1,opt,name=Password" json:"Password,omitempty"`
}

func (m *AccountGetPasswordSettings) Reset()         { *m = AccountGetPasswordSettings{} }
func (m *AccountGetPasswordSettings) String() string { return proto.CompactTextString(m) }
func (*AccountGetPasswordSettings) ProtoMessage()    {}
func (*AccountGetPasswordSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{20}
}
func (m *AccountGetPasswordSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountGetPasswordSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountGetPasswordSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountGetPasswordSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountGetPasswordSettings.Merge(m, src)
}
func (m *AccountGetPasswordSettings) XXX_Size() int {
	return m.Size()
}
func (m *AccountGetPasswordSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountGetPasswordSettings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountGetPasswordSettings proto.InternalMessageInfo

func (m *AccountGetPasswordSettings) GetPassword() *InputPassword {
	if m != nil {
		return m.Password
	}
	return nil
}

// AccountUpdatePassword
// @Function
// @Returns: Bool
type AccountUpdatePasswordSettings struct {
	Password      *InputPassword `protobuf:"bytes,1,opt,name=Password" json:"Password,omitempty"`
	PasswordHash  []byte         `protobuf:"bytes,2,opt,name=PasswordHash" json:"PasswordHash"`
	Algorithm     int64          `protobuf:"varint,3,req,name=Algorithm" json:"Algorithm"`
	AlgorithmData []byte         `protobuf:"bytes,4,req,name=AlgorithmData" json:"AlgorithmData"`
	Hint          string         `protobuf:"bytes,6,opt,name=Hint" json:"Hint"`
}

func (m *AccountUpdatePasswordSettings) Reset()         { *m = AccountUpdatePasswordSettings{} }
func (m *AccountUpdatePasswordSettings) String() string { return proto.CompactTextString(m) }
func (*AccountUpdatePasswordSettings) ProtoMessage()    {}
func (*AccountUpdatePasswordSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{21}
}
func (m *AccountUpdatePasswordSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountUpdatePasswordSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountUpdatePasswordSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountUpdatePasswordSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountUpdatePasswordSettings.Merge(m, src)
}
func (m *AccountUpdatePasswordSettings) XXX_Size() int {
	return m.Size()
}
func (m *AccountUpdatePasswordSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountUpdatePasswordSettings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountUpdatePasswordSettings proto.InternalMessageInfo

func (m *AccountUpdatePasswordSettings) GetPassword() *InputPassword {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *AccountUpdatePasswordSettings) GetPasswordHash() []byte {
	if m != nil {
		return m.PasswordHash
	}
	return nil
}

func (m *AccountUpdatePasswordSettings) GetAlgorithm() int64 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *AccountUpdatePasswordSettings) GetAlgorithmData() []byte {
	if m != nil {
		return m.AlgorithmData
	}
	return nil
}

func (m *AccountUpdatePasswordSettings) GetHint() string {
	if m != nil {
		return m.Hint
	}
	return ""
}

// AccountPasswordSettings
// Private info associated to the password info (recovery email and so on)
type AccountPasswordSettings struct {
	Hint string `protobuf:"bytes,2,req,name=Hint" json:"Hint"`
}

func (m *AccountPasswordSettings) Reset()         { *m = AccountPasswordSettings{} }
func (m *AccountPasswordSettings) String() string { return proto.CompactTextString(m) }
func (*AccountPasswordSettings) ProtoMessage()    {}
func (*AccountPasswordSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{22}
}
func (m *AccountPasswordSettings) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountPasswordSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountPasswordSettings.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountPasswordSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountPasswordSettings.Merge(m, src)
}
func (m *AccountPasswordSettings) XXX_Size() int {
	return m.Size()
}
func (m *AccountPasswordSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountPasswordSettings.DiscardUnknown(m)
}

var xxx_messageInfo_AccountPasswordSettings proto.InternalMessageInfo

func (m *AccountPasswordSettings) GetHint() string {
	if m != nil {
		return m.Hint
	}
	return ""
}

// AccountPassword
// Configuration for two-factor authorization
type AccountPassword struct {
	HasPassword   bool   `protobuf:"varint,1,req,name=HasPassword" json:"HasPassword"`
	Hint          string `protobuf:"bytes,2,opt,name=Hint" json:"Hint"`
	Algorithm     int64  `protobuf:"varint,3,req,name=Algorithm" json:"Algorithm"`
	AlgorithmData []byte `protobuf:"bytes,4,req,name=AlgorithmData" json:"AlgorithmData"`
	SrpB          []byte `protobuf:"bytes,5,opt,name=SrpB" json:"SrpB"`
	RandomData    []byte `protobuf:"bytes,6,opt,name=RandomData" json:"RandomData"`
	SrpID         int64  `protobuf:"varint,7,opt,name=SrpID" json:"SrpID"`
}

func (m *AccountPassword) Reset()         { *m = AccountPassword{} }
func (m *AccountPassword) String() string { return proto.CompactTextString(m) }
func (*AccountPassword) ProtoMessage()    {}
func (*AccountPassword) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{23}
}
func (m *AccountPassword) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountPassword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountPassword.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountPassword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountPassword.Merge(m, src)
}
func (m *AccountPassword) XXX_Size() int {
	return m.Size()
}
func (m *AccountPassword) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountPassword.DiscardUnknown(m)
}

var xxx_messageInfo_AccountPassword proto.InternalMessageInfo

func (m *AccountPassword) GetHasPassword() bool {
	if m != nil {
		return m.HasPassword
	}
	return false
}

func (m *AccountPassword) GetHint() string {
	if m != nil {
		return m.Hint
	}
	return ""
}

func (m *AccountPassword) GetAlgorithm() int64 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *AccountPassword) GetAlgorithmData() []byte {
	if m != nil {
		return m.AlgorithmData
	}
	return nil
}

func (m *AccountPassword) GetSrpB() []byte {
	if m != nil {
		return m.SrpB
	}
	return nil
}

func (m *AccountPassword) GetRandomData() []byte {
	if m != nil {
		return m.RandomData
	}
	return nil
}

func (m *AccountPassword) GetSrpID() int64 {
	if m != nil {
		return m.SrpID
	}
	return 0
}

// AccountAuthorizations
type AccountAuthorizations struct {
	Authorizations []*AccountAuthorization `protobuf:"bytes,1,rep,name=Authorizations" json:"Authorizations,omitempty"`
}

func (m *AccountAuthorizations) Reset()         { *m = AccountAuthorizations{} }
func (m *AccountAuthorizations) String() string { return proto.CompactTextString(m) }
func (*AccountAuthorizations) ProtoMessage()    {}
func (*AccountAuthorizations) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{24}
}
func (m *AccountAuthorizations) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountAuthorizations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountAuthorizations.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountAuthorizations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountAuthorizations.Merge(m, src)
}
func (m *AccountAuthorizations) XXX_Size() int {
	return m.Size()
}
func (m *AccountAuthorizations) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountAuthorizations.DiscardUnknown(m)
}

var xxx_messageInfo_AccountAuthorizations proto.InternalMessageInfo

func (m *AccountAuthorizations) GetAuthorizations() []*AccountAuthorization {
	if m != nil {
		return m.Authorizations
	}
	return nil
}

// AccountAuthorization
type AccountAuthorization struct {
	AuthID        int64  `protobuf:"varint,100,req,name=AuthID" json:"AuthID"`
	Model         string `protobuf:"bytes,1,req,name=Model" json:"Model"`
	AppVersion    string `protobuf:"bytes,2,req,name=AppVersion" json:"AppVersion"`
	SystemVersion string `protobuf:"bytes,3,req,name=SystemVersion" json:"SystemVersion"`
	LangCode      string `protobuf:"bytes,4,req,name=LangCode" json:"LangCode"`
	CreatedAt     int64  `protobuf:"varint,5,req,name=CreatedAt" json:"CreatedAt"`
	ActiveAt      int64  `protobuf:"varint,6,req,name=ActiveAt" json:"ActiveAt"`
	ClientIP      string `protobuf:"bytes,7,req,name=ClientIP" json:"ClientIP"`
	LastAccess    int64  `protobuf:"varint,8,req,name=LastAccess" json:"LastAccess"`
}

func (m *AccountAuthorization) Reset()         { *m = AccountAuthorization{} }
func (m *AccountAuthorization) String() string { return proto.CompactTextString(m) }
func (*AccountAuthorization) ProtoMessage()    {}
func (*AccountAuthorization) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{25}
}
func (m *AccountAuthorization) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountAuthorization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountAuthorization.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountAuthorization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountAuthorization.Merge(m, src)
}
func (m *AccountAuthorization) XXX_Size() int {
	return m.Size()
}
func (m *AccountAuthorization) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountAuthorization.DiscardUnknown(m)
}

var xxx_messageInfo_AccountAuthorization proto.InternalMessageInfo

func (m *AccountAuthorization) GetAuthID() int64 {
	if m != nil {
		return m.AuthID
	}
	return 0
}

func (m *AccountAuthorization) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *AccountAuthorization) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *AccountAuthorization) GetSystemVersion() string {
	if m != nil {
		return m.SystemVersion
	}
	return ""
}

func (m *AccountAuthorization) GetLangCode() string {
	if m != nil {
		return m.LangCode
	}
	return ""
}

func (m *AccountAuthorization) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *AccountAuthorization) GetActiveAt() int64 {
	if m != nil {
		return m.ActiveAt
	}
	return 0
}

func (m *AccountAuthorization) GetClientIP() string {
	if m != nil {
		return m.ClientIP
	}
	return ""
}

func (m *AccountAuthorization) GetLastAccess() int64 {
	if m != nil {
		return m.LastAccess
	}
	return 0
}

// AccountPrivacyRules
type AccountPrivacyRules struct {
	Rules []*PrivacyRule `protobuf:"bytes,1,rep,name=Rules" json:"Rules,omitempty"`
}

func (m *AccountPrivacyRules) Reset()         { *m = AccountPrivacyRules{} }
func (m *AccountPrivacyRules) String() string { return proto.CompactTextString(m) }
func (*AccountPrivacyRules) ProtoMessage()    {}
func (*AccountPrivacyRules) Descriptor() ([]byte, []int) {
	return fileDescriptor_36a0c5dd1cea0696, []int{26}
}
func (m *AccountPrivacyRules) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AccountPrivacyRules) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AccountPrivacyRules.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AccountPrivacyRules) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountPrivacyRules.Merge(m, src)
}
func (m *AccountPrivacyRules) XXX_Size() int {
	return m.Size()
}
func (m *AccountPrivacyRules) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountPrivacyRules.DiscardUnknown(m)
}

var xxx_messageInfo_AccountPrivacyRules proto.InternalMessageInfo

func (m *AccountPrivacyRules) GetRules() []*PrivacyRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

func init() {
	proto.RegisterType((*AccountSetNotifySettings)(nil), "msg.AccountSetNotifySettings")
	proto.RegisterType((*AccountGetNotifySettings)(nil), "msg.AccountGetNotifySettings")
	proto.RegisterType((*AccountRegisterDevice)(nil), "msg.AccountRegisterDevice")
	proto.RegisterType((*AccountUnregisterDevice)(nil), "msg.AccountUnregisterDevice")
	proto.RegisterType((*AccountUpdateProfile)(nil), "msg.AccountUpdateProfile")
	proto.RegisterType((*AccountCheckUsername)(nil), "msg.AccountCheckUsername")
	proto.RegisterType((*AccountUpdateUsername)(nil), "msg.AccountUpdateUsername")
	proto.RegisterType((*AccountUploadPhoto)(nil), "msg.AccountUploadPhoto")
	proto.RegisterType((*AccountUpdatePhoto)(nil), "msg.AccountUpdatePhoto")
	proto.RegisterType((*AccountRemovePhoto)(nil), "msg.AccountRemovePhoto")
	proto.RegisterType((*AccountSendChangePhoneCode)(nil), "msg.AccountSendChangePhoneCode")
	proto.RegisterType((*AccountResendChangePhoneCode)(nil), "msg.AccountResendChangePhoneCode")
	proto.RegisterType((*AccountChangePhone)(nil), "msg.AccountChangePhone")
	proto.RegisterType((*AccountSetPrivacy)(nil), "msg.AccountSetPrivacy")
	proto.RegisterType((*AccountGetPrivacy)(nil), "msg.AccountGetPrivacy")
	proto.RegisterType((*AccountGetAuthorizations)(nil), "msg.AccountGetAuthorizations")
	proto.RegisterType((*AccountResetAuthorization)(nil), "msg.AccountResetAuthorization")
	proto.RegisterType((*AccountUpdateStatus)(nil), "msg.AccountUpdateStatus")
	proto.RegisterType((*AccountSetLang)(nil), "msg.AccountSetLang")
	proto.RegisterType((*AccountGetPassword)(nil), "msg.AccountGetPassword")
	proto.RegisterType((*AccountGetPasswordSettings)(nil), "msg.AccountGetPasswordSettings")
	proto.RegisterType((*AccountUpdatePasswordSettings)(nil), "msg.AccountUpdatePasswordSettings")
	proto.RegisterType((*AccountPasswordSettings)(nil), "msg.AccountPasswordSettings")
	proto.RegisterType((*AccountPassword)(nil), "msg.AccountPassword")
	proto.RegisterType((*AccountAuthorizations)(nil), "msg.AccountAuthorizations")
	proto.RegisterType((*AccountAuthorization)(nil), "msg.AccountAuthorization")
	proto.RegisterType((*AccountPrivacyRules)(nil), "msg.AccountPrivacyRules")
}

func init() { proto.RegisterFile("chat.api.accounts.proto", fileDescriptor_36a0c5dd1cea0696) }

var fileDescriptor_36a0c5dd1cea0696 = []byte{
	// 1119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xce, 0xfa, 0x2f, 0xe9, 0x49, 0x9a, 0x96, 0xa1, 0x6d, 0xb6, 0x51, 0x30, 0xd6, 0xa8, 0x2a,
	0x56, 0x85, 0xac, 0xca, 0x41, 0x88, 0x9f, 0x82, 0xe4, 0x38, 0x4a, 0x63, 0xa5, 0x4d, 0xad, 0x75,
	0x8b, 0x80, 0xbb, 0xc9, 0xee, 0xc4, 0x5e, 0xba, 0xde, 0x5d, 0xcd, 0x8c, 0x5d, 0x99, 0x3b, 0xde,
	0x80, 0x17, 0x41, 0xe2, 0x15, 0xb8, 0xeb, 0x65, 0x2f, 0xb8, 0xe0, 0x0a, 0xa1, 0xe4, 0x45, 0xd0,
	0xcc, 0xee, 0x8e, 0x67, 0x62, 0x1b, 0x51, 0x7e, 0xee, 0xd6, 0xdf, 0xf7, 0x9d, 0x33, 0x33, 0xc7,
	0xe7, 0x0f, 0x76, 0xfc, 0x11, 0x11, 0x2d, 0x92, 0x86, 0x2d, 0xe2, 0xfb, 0xc9, 0x24, 0x16, 0xbc,
	0x95, 0xb2, 0x44, 0x24, 0xa8, 0x3c, 0xe6, 0xc3, 0xdd, 0xdb, 0x8a, 0xf5, 0x13, 0x46, 0x5b, 0x62,
	0x96, 0xd2, 0x9c, 0xc3, 0x1c, 0xdc, 0x4e, 0xa6, 0x1e, 0x50, 0x71, 0x9a, 0x88, 0xf0, 0x7c, 0x36,
	0xa0, 0x42, 0x84, 0xf1, 0x90, 0x23, 0x0c, 0x95, 0x3e, 0xa5, 0xcc, 0x75, 0x1a, 0xa5, 0xe6, 0x66,
	0x7b, 0xbb, 0x35, 0xe6, 0xc3, 0x56, 0x2f, 0x4e, 0x27, 0x42, 0xa2, 0x9e, 0xe2, 0xd0, 0x3e, 0x6c,
	0x14, 0x7a, 0xb7, 0xa4, 0x74, 0x3b, 0x4a, 0x27, 0x49, 0xdb, 0x9d, 0xa7, 0x85, 0xf8, 0x4b, 0x7d,
	0xe8, 0xe3, 0x7f, 0x72, 0x28, 0xfe, 0xa9, 0x04, 0xb7, 0x73, 0x07, 0x1e, 0x1d, 0x86, 0x5c, 0x50,
	0x76, 0x48, 0xa7, 0xa1, 0x4f, 0xd1, 0x2e, 0x54, 0x9f, 0x27, 0x2f, 0x69, 0xac, 0xee, 0x72, 0xed,
	0xa0, 0xf2, 0xfa, 0xf7, 0xf7, 0xd7, 0xbc, 0x0c, 0x42, 0xf7, 0x61, 0x33, 0x53, 0x3d, 0x4d, 0x02,
	0x1a, 0xb9, 0x65, 0x43, 0x61, 0x12, 0xe8, 0x01, 0x5c, 0x1f, 0xcc, 0xb8, 0xa0, 0xe3, 0xaf, 0x28,
	0xe3, 0x61, 0x12, 0xbb, 0x15, 0x43, 0x69, 0x53, 0xe8, 0x1e, 0x40, 0x27, 0x4d, 0x0b, 0x61, 0xd5,
	0x10, 0x1a, 0x38, 0x6a, 0xc0, 0xc6, 0x13, 0x12, 0x0f, 0xbb, 0x49, 0x40, 0xdd, 0x9a, 0xa1, 0xd1,
	0x28, 0xfa, 0x0c, 0xae, 0xa9, 0x4b, 0x3e, 0x9f, 0xa5, 0xd4, 0x5d, 0x6f, 0x94, 0x9a, 0xdb, 0xed,
	0x3b, 0x59, 0x1c, 0x27, 0x7c, 0xa4, 0x98, 0x3e, 0x4b, 0xa6, 0x61, 0x40, 0x59, 0x6e, 0x3a, 0x97,
	0x4b, 0xef, 0xdd, 0x28, 0xa4, 0xb1, 0xe8, 0x1d, 0xba, 0x1b, 0xa6, 0xf7, 0x02, 0xc5, 0xdf, 0xc0,
	0x4e, 0x1e, 0xae, 0x17, 0x31, 0xb3, 0x03, 0x86, 0xcd, 0x83, 0x65, 0xcc, 0xab, 0x8b, 0x07, 0xfc,
	0x45, 0x50, 0xb1, 0x80, 0x5b, 0x85, 0xeb, 0x34, 0x20, 0x82, 0xf6, 0x59, 0x72, 0x1e, 0x46, 0xca,
	0xef, 0x51, 0xc8, 0xb8, 0x38, 0x25, 0xe3, 0xcc, 0x6f, 0x61, 0x37, 0x87, 0xb3, 0xb0, 0xe4, 0x92,
	0x92, 0x1d, 0x96, 0x5c, 0x71, 0x07, 0xca, 0x07, 0x61, 0xe2, 0x96, 0x1b, 0x8e, 0x26, 0x25, 0x80,
	0x3f, 0xd1, 0xa7, 0x76, 0x47, 0xd4, 0x7f, 0xf9, 0x82, 0x53, 0x16, 0xe7, 0x1e, 0x8b, 0x6f, 0xeb,
	0x50, 0x8d, 0xe2, 0x4f, 0x75, 0xe6, 0x64, 0xf7, 0x7d, 0x0b, 0xd3, 0x33, 0x40, 0xda, 0x34, 0x4a,
	0x48, 0xd0, 0x1f, 0xc9, 0xe2, 0xc2, 0x50, 0x39, 0x0a, 0x23, 0xba, 0x98, 0xaf, 0x12, 0xf5, 0x14,
	0x87, 0x9a, 0xb0, 0xe5, 0x51, 0x31, 0x61, 0xf1, 0xb3, 0xb3, 0xef, 0xa8, 0x2f, 0xdc, 0x52, 0xc3,
	0x69, 0x6e, 0xe4, 0xfe, 0x2d, 0x06, 0x7f, 0x6c, 0x9c, 0xa1, 0xc2, 0xa9, 0xce, 0x68, 0xc0, 0xba,
	0xfa, 0xe8, 0x1d, 0xaa, 0x63, 0xca, 0x07, 0x35, 0x69, 0xfa, 0xd0, 0xf1, 0x0a, 0xd8, 0xb0, 0xf3,
	0xe8, 0x38, 0x99, 0x2e, 0xb3, 0x73, 0x96, 0xd9, 0x7d, 0x0d, 0xbb, 0xba, 0xfc, 0xe3, 0xa0, 0x3b,
	0x22, 0xf1, 0x50, 0xda, 0xc6, 0x54, 0x65, 0xe5, 0x2e, 0x54, 0xd5, 0x0f, 0x2b, 0x20, 0x19, 0x84,
	0xea, 0xb0, 0xde, 0x49, 0xd3, 0x63, 0xc2, 0x47, 0xea, 0x39, 0x05, 0x5b, 0x80, 0xf8, 0x1c, 0xf6,
	0xf4, 0x8d, 0xf8, 0x5b, 0xfa, 0x7e, 0x00, 0xd7, 0xb5, 0x30, 0x3f, 0xc1, 0xa8, 0x40, 0x8b, 0xc2,
	0x3f, 0x3b, 0xfa, 0xe9, 0xc6, 0x11, 0xff, 0x95, 0x7b, 0x99, 0xc7, 0x1a, 0xb0, 0x5a, 0xc6, 0x1c,
	0x46, 0x2d, 0xd8, 0xe8, 0x13, 0xce, 0x5f, 0x25, 0x2c, 0x70, 0x2b, 0x0d, 0xa7, 0xb9, 0xd9, 0x46,
	0x46, 0xdb, 0xca, 0x19, 0x4f, 0x6b, 0xf0, 0x2f, 0x25, 0x78, 0x67, 0xde, 0x74, 0xfb, 0x2c, 0x9c,
	0x12, 0x7f, 0x86, 0x1e, 0x02, 0x74, 0x47, 0x44, 0xf4, 0xe2, 0x69, 0x28, 0xe4, 0xb5, 0xcb, 0xcd,
	0xcd, 0xf6, 0xcd, 0xac, 0x07, 0x64, 0x0a, 0x6f, 0x12, 0x51, 0xcf, 0xd0, 0xa0, 0x0f, 0xb3, 0xfa,
	0x19, 0x50, 0x55, 0x9a, 0xcb, 0xf5, 0x5a, 0x81, 0xda, 0xb0, 0xa9, 0xae, 0x7c, 0x3a, 0x19, 0x9f,
	0x51, 0xe6, 0x96, 0x57, 0x18, 0x98, 0x22, 0xf4, 0x11, 0x6c, 0xe5, 0x05, 0xad, 0x12, 0xc6, 0xad,
	0xac, 0x30, 0xb2, 0x54, 0xe8, 0x11, 0xdc, 0x3c, 0x4a, 0xd8, 0x2b, 0xc2, 0x02, 0x1a, 0x3c, 0xa5,
	0x9c, 0x93, 0x21, 0x75, 0xab, 0x2b, 0x2c, 0x17, 0x94, 0xe8, 0x1e, 0x54, 0xba, 0x24, 0x8a, 0xdc,
	0xda, 0x0a, 0x0b, 0xc5, 0xe2, 0x47, 0x3a, 0x84, 0x8f, 0xe7, 0x21, 0xfc, 0x00, 0xca, 0x27, 0x74,
	0xa6, 0xfe, 0xf2, 0xed, 0xf6, 0x0d, 0xd3, 0xf2, 0x84, 0xce, 0x8a, 0xfe, 0x71, 0x42, 0x67, 0x78,
	0xd7, 0x1c, 0x40, 0x9d, 0x89, 0x18, 0x25, 0x2c, 0xfc, 0x9e, 0x88, 0x30, 0x89, 0x39, 0xfe, 0x1c,
	0xee, 0x1a, 0x89, 0x6b, 0xb3, 0xa8, 0x0e, 0x35, 0x09, 0x2c, 0x14, 0x62, 0x8e, 0xe2, 0x7d, 0x78,
	0xd7, 0xaa, 0xdf, 0x81, 0x20, 0x62, 0xc2, 0xd1, 0x1e, 0xd4, 0x9e, 0xc5, 0x51, 0x98, 0xa7, 0x63,
	0x51, 0xfa, 0x39, 0x86, 0xdb, 0xb0, 0x3d, 0x4f, 0x07, 0x39, 0x12, 0xac, 0x81, 0xe1, 0x2c, 0x1b,
	0x18, 0xf8, 0x96, 0xce, 0x7a, 0xf9, 0xfe, 0x22, 0xb3, 0x9e, 0xe8, 0x72, 0x36, 0x50, 0x3d, 0x5a,
	0xcd, 0x3c, 0x75, 0xfe, 0x46, 0x9e, 0x5e, 0x3a, 0xf0, 0x9e, 0xdd, 0x8d, 0xfe, 0xa5, 0x47, 0xd9,
	0x08, 0x8b, 0x6f, 0xdd, 0x39, 0xb6, 0x8a, 0x46, 0x68, 0x32, 0xb2, 0xee, 0x3a, 0xd1, 0x30, 0x61,
	0xa1, 0x18, 0x8d, 0x55, 0xdd, 0x95, 0x8b, 0xba, 0xd3, 0xb0, 0xac, 0x63, 0xfd, 0xe3, 0x90, 0x08,
	0xa2, 0x06, 0x75, 0xe1, 0xce, 0xa6, 0x90, 0x0b, 0x95, 0xe3, 0x30, 0x16, 0x6e, 0xcd, 0xe8, 0x55,
	0x0a, 0xc1, 0xfb, 0x7a, 0x38, 0x2e, 0x3c, 0xaf, 0x30, 0x32, 0xfb, 0x43, 0x66, 0xf4, 0x43, 0x09,
	0x6e, 0x5c, 0xb1, 0x92, 0xfb, 0xc5, 0x31, 0xe1, 0x46, 0x3c, 0xe6, 0xff, 0xb4, 0x49, 0x18, 0x5e,
	0xaf, 0x5c, 0xe5, 0xff, 0x78, 0xf4, 0x80, 0xa5, 0x07, 0x6e, 0xd5, 0x08, 0xb3, 0x42, 0xe4, 0xde,
	0xe2, 0x91, 0x38, 0x48, 0x32, 0x17, 0x35, 0x83, 0x37, 0x70, 0xb4, 0x07, 0xd5, 0x01, 0x4b, 0x7b,
	0x87, 0xee, 0xba, 0x35, 0x3d, 0x32, 0x10, 0x7f, 0xab, 0x47, 0xa9, 0x5d, 0x41, 0xa8, 0x03, 0xdb,
	0x36, 0x92, 0x77, 0xb3, 0xbb, 0x2a, 0x37, 0x96, 0xd9, 0x78, 0x57, 0x0c, 0xf0, 0xaf, 0x25, 0x3d,
	0xe1, 0x57, 0x15, 0x60, 0xb0, 0xac, 0x00, 0x65, 0xdf, 0xcf, 0xd6, 0x3b, 0xab, 0xef, 0x67, 0x8b,
	0x9d, 0xbd, 0xac, 0x95, 0x56, 0x2c, 0x6b, 0x0b, 0xeb, 0x5f, 0x79, 0xf5, 0xfa, 0x67, 0xd6, 0x69,
	0x65, 0xe9, 0x62, 0x87, 0xe1, 0x5a, 0x97, 0x51, 0x22, 0x68, 0xd0, 0x11, 0x6a, 0x3f, 0xd4, 0x7f,
	0xa9, 0x86, 0xa5, 0x97, 0x8e, 0x2f, 0xc2, 0x29, 0xed, 0x08, 0xb5, 0x1e, 0x16, 0x12, 0x8d, 0x1a,
	0x2b, 0x5e, 0x5f, 0x6d, 0x87, 0x57, 0x57, 0xbc, 0xbe, 0x7c, 0x9b, 0xec, 0xf4, 0x1d, 0xdf, 0xa7,
	0x9c, 0xab, 0x35, 0xb0, 0xf0, 0x62, 0xe0, 0xf8, 0x0b, 0xdd, 0x9e, 0x8c, 0x8e, 0xca, 0xd1, 0x7d,
	0xa8, 0xaa, 0x8f, 0x95, 0x53, 0x27, 0xa3, 0x0f, 0xdc, 0xd7, 0x17, 0x75, 0xe7, 0xcd, 0x45, 0xdd,
	0xf9, 0xe3, 0xa2, 0xee, 0xfc, 0x78, 0x59, 0x5f, 0x7b, 0x73, 0x59, 0x5f, 0xfb, 0xed, 0xb2, 0xbe,
	0xf6, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x0e, 0x7d, 0xa5, 0x7c, 0x0c, 0x00, 0x00,
}

func (m *AccountSetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountSetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountSetNotifySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Settings == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Settings")
	} else {
		{
			size, err := m.Settings.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AccountGetNotifySettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetNotifySettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountGetNotifySettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Peer == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	} else {
		{
			size, err := m.Peer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AccountRegisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountRegisterDevice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountRegisterDevice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.ClientID)
	copy(dAtA[i:], m.ClientID)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.ClientID)))
	i--
	dAtA[i] = 0x42
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.TokenType))
	i--
	dAtA[i] = 0x38
	i -= len(m.LangCode)
	copy(dAtA[i:], m.LangCode)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.LangCode)))
	i--
	dAtA[i] = 0x32
	i -= len(m.AppVersion)
	copy(dAtA[i:], m.AppVersion)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.AppVersion)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.SystemVersion)
	copy(dAtA[i:], m.SystemVersion)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.SystemVersion)))
	i--
	dAtA[i] = 0x22
	i -= len(m.DeviceModel)
	copy(dAtA[i:], m.DeviceModel)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.DeviceModel)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.Token)
	copy(dAtA[i:], m.Token)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Token)))
	i--
	dAtA[i] = 0x12
	return len(dAtA) - i, nil
}

func (m *AccountUnregisterDevice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUnregisterDevice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountUnregisterDevice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Token)
	copy(dAtA[i:], m.Token)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Token)))
	i--
	dAtA[i] = 0x12
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.TokenType))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AccountUpdateProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUpdateProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountUpdateProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Bio)
	copy(dAtA[i:], m.Bio)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Bio)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.LastName)
	copy(dAtA[i:], m.LastName)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.LastName)))
	i--
	dAtA[i] = 0x12
	i -= len(m.FirstName)
	copy(dAtA[i:], m.FirstName)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.FirstName)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AccountCheckUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountCheckUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountCheckUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Username)
	copy(dAtA[i:], m.Username)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Username)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AccountUpdateUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUpdateUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountUpdateUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Username)
	copy(dAtA[i:], m.Username)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Username)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AccountUploadPhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUploadPhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountUploadPhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.ReturnObject {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	if m.File == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("File")
	} else {
		{
			size, err := m.File.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AccountUpdatePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUpdatePhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountUpdatePhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.PhotoID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AccountRemovePhoto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountRemovePhoto) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountRemovePhoto) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.PhotoID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AccountSendChangePhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountSendChangePhoneCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountSendChangePhoneCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.AppHash)
	copy(dAtA[i:], m.AppHash)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.AppHash)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Phone)
	copy(dAtA[i:], m.Phone)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Phone)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AccountResendChangePhoneCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountResendChangePhoneCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountResendChangePhoneCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.PhoneCodeHash)
	copy(dAtA[i:], m.PhoneCodeHash)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Phone)
	copy(dAtA[i:], m.Phone)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Phone)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AccountChangePhone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountChangePhone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountChangePhone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	i -= len(m.PhoneCode)
	copy(dAtA[i:], m.PhoneCode)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.PhoneCode)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.PhoneCodeHash)
	copy(dAtA[i:], m.PhoneCodeHash)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.PhoneCodeHash)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Phone)
	copy(dAtA[i:], m.Phone)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Phone)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AccountSetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountSetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountSetPrivacy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Call) > 0 {
		for iNdEx := len(m.Call) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Call[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.ForwardedMessage) > 0 {
		for iNdEx := len(m.ForwardedMessage) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ForwardedMessage[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.ProfilePhoto) > 0 {
		for iNdEx := len(m.ProfilePhoto) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ProfilePhoto[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.PhoneNumber) > 0 {
		for iNdEx := len(m.PhoneNumber) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PhoneNumber[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.LastSeen) > 0 {
		for iNdEx := len(m.LastSeen) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LastSeen[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.ChatInvite) > 0 {
		for iNdEx := len(m.ChatInvite) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ChatInvite[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AccountGetPrivacy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetPrivacy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountGetPrivacy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.Key))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AccountGetAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountGetAuthorizations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *AccountResetAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountResetAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountResetAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.AuthID))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AccountUpdateStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUpdateStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountUpdateStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.Online {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AccountSetLang) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountSetLang) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountSetLang) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.LangCode)
	copy(dAtA[i:], m.LangCode)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.LangCode)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AccountGetPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountGetPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *AccountGetPasswordSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountGetPasswordSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountGetPasswordSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AccountUpdatePasswordSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountUpdatePasswordSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountUpdatePasswordSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Hint)
	copy(dAtA[i:], m.Hint)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Hint)))
	i--
	dAtA[i] = 0x32
	if m.AlgorithmData != nil {
		i -= len(m.AlgorithmData)
		copy(dAtA[i:], m.AlgorithmData)
		i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.AlgorithmData)))
		i--
		dAtA[i] = 0x22
	}
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.Algorithm))
	i--
	dAtA[i] = 0x18
	if m.PasswordHash != nil {
		i -= len(m.PasswordHash)
		copy(dAtA[i:], m.PasswordHash)
		i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.PasswordHash)))
		i--
		dAtA[i] = 0x12
	}
	if m.Password != nil {
		{
			size, err := m.Password.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AccountPasswordSettings) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountPasswordSettings) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountPasswordSettings) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Hint)
	copy(dAtA[i:], m.Hint)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Hint)))
	i--
	dAtA[i] = 0x12
	return len(dAtA) - i, nil
}

func (m *AccountPassword) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountPassword) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountPassword) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.SrpID))
	i--
	dAtA[i] = 0x38
	if m.RandomData != nil {
		i -= len(m.RandomData)
		copy(dAtA[i:], m.RandomData)
		i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.RandomData)))
		i--
		dAtA[i] = 0x32
	}
	if m.SrpB != nil {
		i -= len(m.SrpB)
		copy(dAtA[i:], m.SrpB)
		i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.SrpB)))
		i--
		dAtA[i] = 0x2a
	}
	if m.AlgorithmData != nil {
		i -= len(m.AlgorithmData)
		copy(dAtA[i:], m.AlgorithmData)
		i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.AlgorithmData)))
		i--
		dAtA[i] = 0x22
	}
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.Algorithm))
	i--
	dAtA[i] = 0x18
	i -= len(m.Hint)
	copy(dAtA[i:], m.Hint)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Hint)))
	i--
	dAtA[i] = 0x12
	i--
	if m.HasPassword {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *AccountAuthorizations) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountAuthorizations) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountAuthorizations) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Authorizations) > 0 {
		for iNdEx := len(m.Authorizations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Authorizations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AccountAuthorization) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountAuthorization) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountAuthorization) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.AuthID))
	i--
	dAtA[i] = 0x6
	i--
	dAtA[i] = 0xa0
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.LastAccess))
	i--
	dAtA[i] = 0x40
	i -= len(m.ClientIP)
	copy(dAtA[i:], m.ClientIP)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.ClientIP)))
	i--
	dAtA[i] = 0x3a
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.ActiveAt))
	i--
	dAtA[i] = 0x30
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(m.CreatedAt))
	i--
	dAtA[i] = 0x28
	i -= len(m.LangCode)
	copy(dAtA[i:], m.LangCode)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.LangCode)))
	i--
	dAtA[i] = 0x22
	i -= len(m.SystemVersion)
	copy(dAtA[i:], m.SystemVersion)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.SystemVersion)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.AppVersion)
	copy(dAtA[i:], m.AppVersion)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.AppVersion)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Model)
	copy(dAtA[i:], m.Model)
	i = encodeVarintChatApiAccounts(dAtA, i, uint64(len(m.Model)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AccountPrivacyRules) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AccountPrivacyRules) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AccountPrivacyRules) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Rules) > 0 {
		for iNdEx := len(m.Rules) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Rules[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintChatApiAccounts(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintChatApiAccounts(dAtA []byte, offset int, v uint64) int {
	offset -= sovChatApiAccounts(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AccountSetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	if m.Settings != nil {
		l = m.Settings.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	return n
}

func (m *AccountGetNotifySettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Peer != nil {
		l = m.Peer.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	return n
}

func (m *AccountRegisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.DeviceModel)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.SystemVersion)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.AppVersion)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.LangCode)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	n += 1 + sovChatApiAccounts(uint64(m.TokenType))
	l = len(m.ClientID)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountUnregisterDevice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAccounts(uint64(m.TokenType))
	l = len(m.Token)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountUpdateProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FirstName)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.LastName)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.Bio)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountCheckUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountUpdateUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Username)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountUploadPhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.File != nil {
		l = m.File.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	n += 2
	return n
}

func (m *AccountUpdatePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAccounts(uint64(m.PhotoID))
	return n
}

func (m *AccountRemovePhoto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAccounts(uint64(m.PhotoID))
	return n
}

func (m *AccountSendChangePhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.AppHash)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountResendChangePhoneCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountChangePhone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.PhoneCodeHash)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.PhoneCode)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	return n
}

func (m *AccountSetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ChatInvite) > 0 {
		for _, e := range m.ChatInvite {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	if len(m.LastSeen) > 0 {
		for _, e := range m.LastSeen {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	if len(m.PhoneNumber) > 0 {
		for _, e := range m.PhoneNumber {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	if len(m.ProfilePhoto) > 0 {
		for _, e := range m.ProfilePhoto {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	if len(m.ForwardedMessage) > 0 {
		for _, e := range m.ForwardedMessage {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	if len(m.Call) > 0 {
		for _, e := range m.Call {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	return n
}

func (m *AccountGetPrivacy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAccounts(uint64(m.Key))
	return n
}

func (m *AccountGetAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AccountResetAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiAccounts(uint64(m.AuthID))
	return n
}

func (m *AccountUpdateStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	return n
}

func (m *AccountSetLang) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.LangCode)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountGetPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AccountGetPasswordSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	return n
}

func (m *AccountUpdatePasswordSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Password != nil {
		l = m.Password.Size()
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	if m.PasswordHash != nil {
		l = len(m.PasswordHash)
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	n += 1 + sovChatApiAccounts(uint64(m.Algorithm))
	if m.AlgorithmData != nil {
		l = len(m.AlgorithmData)
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	l = len(m.Hint)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountPasswordSettings) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Hint)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	return n
}

func (m *AccountPassword) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	l = len(m.Hint)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	n += 1 + sovChatApiAccounts(uint64(m.Algorithm))
	if m.AlgorithmData != nil {
		l = len(m.AlgorithmData)
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	if m.SrpB != nil {
		l = len(m.SrpB)
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	if m.RandomData != nil {
		l = len(m.RandomData)
		n += 1 + l + sovChatApiAccounts(uint64(l))
	}
	n += 1 + sovChatApiAccounts(uint64(m.SrpID))
	return n
}

func (m *AccountAuthorizations) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Authorizations) > 0 {
		for _, e := range m.Authorizations {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	return n
}

func (m *AccountAuthorization) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Model)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.AppVersion)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.SystemVersion)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	l = len(m.LangCode)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	n += 1 + sovChatApiAccounts(uint64(m.CreatedAt))
	n += 1 + sovChatApiAccounts(uint64(m.ActiveAt))
	l = len(m.ClientIP)
	n += 1 + l + sovChatApiAccounts(uint64(l))
	n += 1 + sovChatApiAccounts(uint64(m.LastAccess))
	n += 2 + sovChatApiAccounts(uint64(m.AuthID))
	return n
}

func (m *AccountPrivacyRules) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Rules) > 0 {
		for _, e := range m.Rules {
			l = e.Size()
			n += 1 + l + sovChatApiAccounts(uint64(l))
		}
	}
	return n
}

func sovChatApiAccounts(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozChatApiAccounts(x uint64) (n int) {
	return sovChatApiAccounts(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AccountSetNotifySettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountSetNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountSetNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Settings", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Settings == nil {
				m.Settings = &PeerNotifySettings{}
			}
			if err := m.Settings.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Settings")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetNotifySettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetNotifySettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetNotifySettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Peer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Peer == nil {
				m.Peer = &InputPeer{}
			}
			if err := m.Peer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Peer")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountRegisterDevice) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountRegisterDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountRegisterDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceModel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceModel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= PushTokenProvider(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000020)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000040)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Token")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("DeviceModel")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("SystemVersion")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AppVersion")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LangCode")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("TokenType")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClientID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUnregisterDevice) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUnregisterDevice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUnregisterDevice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenType", wireType)
			}
			m.TokenType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenType |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("TokenType")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Token")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUpdateProfile) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUpdateProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUpdateProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("FirstName")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LastName")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountCheckUsername) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountCheckUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountCheckUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Username")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUpdateUsername) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUpdateUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUpdateUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Username")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUploadPhoto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUploadPhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUploadPhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field File", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.File == nil {
				m.File = &InputFile{}
			}
			if err := m.File.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReturnObject", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ReturnObject = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("File")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUpdatePhoto) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUpdatePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUpdatePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhotoID", wireType)
			}
			m.PhotoID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PhotoID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhotoID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountRemovePhoto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountRemovePhoto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountRemovePhoto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhotoID", wireType)
			}
			m.PhotoID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PhotoID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountSendChangePhoneCode) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountSendChangePhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountSendChangePhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountResendChangePhoneCode) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountResendChangePhoneCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountResendChangePhoneCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountChangePhone) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountChangePhone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountChangePhone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCodeHash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCodeHash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputPassword{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Phone")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCodeHash")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("PhoneCode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountSetPrivacy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountSetPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountSetPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatInvite", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatInvite = append(m.ChatInvite, &PrivacyRule{})
			if err := m.ChatInvite[len(m.ChatInvite)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastSeen", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastSeen = append(m.LastSeen, &PrivacyRule{})
			if err := m.LastSeen[len(m.LastSeen)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = append(m.PhoneNumber, &PrivacyRule{})
			if err := m.PhoneNumber[len(m.PhoneNumber)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfilePhoto", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProfilePhoto = append(m.ProfilePhoto, &PrivacyRule{})
			if err := m.ProfilePhoto[len(m.ProfilePhoto)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardedMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForwardedMessage = append(m.ForwardedMessage, &PrivacyRule{})
			if err := m.ForwardedMessage[len(m.ForwardedMessage)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Call = append(m.Call, &PrivacyRule{})
			if err := m.Call[len(m.Call)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetPrivacy) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetPrivacy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetPrivacy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			m.Key = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Key |= PrivacyKey(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Key")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountResetAuthorization) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountResetAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountResetAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthID", wireType)
			}
			m.AuthID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuthID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AuthID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUpdateStatus) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUpdateStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUpdateStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Online", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Online = bool(v != 0)
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Online")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountSetLang) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountSetLang: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountSetLang: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LangCode")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetPassword) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountGetPasswordSettings) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountGetPasswordSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountGetPasswordSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputPassword{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountUpdatePasswordSettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountUpdatePasswordSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountUpdatePasswordSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Password == nil {
				m.Password = &InputPassword{}
			}
			if err := m.Password.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PasswordHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PasswordHash = append(m.PasswordHash[:0], dAtA[iNdEx:postIndex]...)
			if m.PasswordHash == nil {
				m.PasswordHash = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Algorithm", wireType)
			}
			m.Algorithm = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Algorithm |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlgorithmData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AlgorithmData = append(m.AlgorithmData[:0], dAtA[iNdEx:postIndex]...)
			if m.AlgorithmData == nil {
				m.AlgorithmData = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Algorithm")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AlgorithmData")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountPasswordSettings) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountPasswordSettings: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountPasswordSettings: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Hint")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountPassword) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountPassword: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountPassword: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasPassword", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasPassword = bool(v != 0)
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Algorithm", wireType)
			}
			m.Algorithm = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Algorithm |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlgorithmData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AlgorithmData = append(m.AlgorithmData[:0], dAtA[iNdEx:postIndex]...)
			if m.AlgorithmData == nil {
				m.AlgorithmData = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrpB", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrpB = append(m.SrpB[:0], dAtA[iNdEx:postIndex]...)
			if m.SrpB == nil {
				m.SrpB = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RandomData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RandomData = append(m.RandomData[:0], dAtA[iNdEx:postIndex]...)
			if m.RandomData == nil {
				m.RandomData = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrpID", wireType)
			}
			m.SrpID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SrpID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("HasPassword")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Algorithm")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AlgorithmData")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountAuthorizations) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountAuthorizations: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountAuthorizations: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authorizations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authorizations = append(m.Authorizations, &AccountAuthorization{})
			if err := m.Authorizations[len(m.Authorizations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountAuthorization) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountAuthorization: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountAuthorization: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Model", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Model = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LangCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LangCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActiveAt", wireType)
			}
			m.ActiveAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActiveAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000040)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastAccess", wireType)
			}
			m.LastAccess = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastAccess |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000080)
		case 100:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthID", wireType)
			}
			m.AuthID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AuthID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000100)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Model")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AppVersion")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("SystemVersion")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LangCode")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("CreatedAt")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ActiveAt")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClientIP")
	}
	if hasFields[0]&uint64(0x00000080) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("LastAccess")
	}
	if hasFields[0]&uint64(0x00000100) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("AuthID")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AccountPrivacyRules) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AccountPrivacyRules: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AccountPrivacyRules: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rules", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rules = append(m.Rules, &PrivacyRule{})
			if err := m.Rules[len(m.Rules)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiAccounts(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthChatApiAccounts
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipChatApiAccounts(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowChatApiAccounts
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiAccounts
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthChatApiAccounts
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupChatApiAccounts
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthChatApiAccounts
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthChatApiAccounts        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowChatApiAccounts          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupChatApiAccounts = fmt.Errorf("proto: unexpected end of group")
)
