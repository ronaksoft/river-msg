syntax = "proto2";
package msg;
import "chat.core.types.proto";

// UpdateGetState
// @Function
// @Return: UpdateState
message UpdateGetState {
}

// UpdateGetDifference
// @Function
// @Return: UpdateDifference
message UpdateGetDifference {
    required int64 From = 1;
    required int32 Limit = 2;
}

// UpdateDifference
message UpdateDifference {
    required bool More = 1;
    required int64 MaxUpdateID = 2;
    required int64 MinUpdateID = 3;
    repeated UpdateEnvelope Updates = 4;
    repeated User Users = 5;
    repeated Group Groups = 6;
    optional int64 CurrentUpdateID = 7;
}

// UpdateTooLong
message UpdateTooLong {

}

// UpdateState
message UpdateState {
    required int64 UpdateID = 1;
}

// UpdateMessageID
message UpdateMessageID {
    required int32 UCount = 100;
    required int64 MessageID = 1;
    required int64 RandomID = 2;
}

// UpdateNewMessage
message UpdateNewMessage {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required UserMessage Message = 1;
    required User Sender = 2;
    optional fixed64 AccessHash = 3 [jstype = JS_STRING];
}

// UpdateMessageEdited
message UpdateMessageEdited {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required UserMessage Message = 1;
}

// UpdateMessageDeleted
message UpdateMessagesDeleted {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    repeated int64 MessageIDs = 1;
    optional Peer Peer = 2;
}

// UpdateReadHistoryInbox
message UpdateReadHistoryInbox {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required Peer Peer = 1;
    required int64 MaxID = 2;
}

// UpdateReadHistoryOutbox
message UpdateReadHistoryOutbox {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required Peer Peer = 1;
    required int64 MaxID = 2;
}

// UpdateUserTyping
message UpdateUserTyping {
    required int32 UCount = 100;
    required int64 UserID = 1 [jstype = JS_STRING];
    required TypingAction Action = 2;
    required int64 PeerID = 3 [jstype = JS_STRING];
}

// UpdateUserStatus
message UpdateUserStatus {
    required int32 UCount = 100;
    required int64 UserID = 1 [jstype = JS_STRING];
    required int32 Status = 2;
}

// UpdateUsername
message UpdateUsername {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required int64 UserID = 1 [jstype = JS_STRING];
    required string Username = 2;
    required string FirstName = 3;
    required string LastName = 4;
    required string Bio = 5;
}

// UpdateUserPhoto
message UpdateUserPhoto {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required int64 UserID = 1 [jstype = JS_STRING];
    optional UserPhoto Photo = 2;
    optional int64 PhotoID = 3 [jstype = JS_STRING];
    repeated int64 DeletedPhotoIDs = 4 [jstype = JS_STRING];
}

// UpdateNotifySettings
message UpdateNotifySettings {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required int64 UserID = 1 [jstype = JS_STRING];
    required Peer NotifyPeer = 2;
    required PeerNotifySettings Settings = 3;
}

// UpdateGroupParticipantAdd
message UpdateGroupParticipantAdd {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required int64 GroupID = 1 [jstype = JS_STRING];
    required int64 UserID = 2 [jstype = JS_STRING];
    required int64 InviterID = 3 [jstype = JS_STRING];
    required int64 Date = 4;
}

// UpdateGroupParticipantDeleted
message UpdateGroupParticipantDeleted {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required int64 GroupID = 1 [jstype = JS_STRING];
    required int64 UserID = 2 [jstype = JS_STRING];
}

// UpdateGroupParticipantAdmin
message UpdateGroupParticipantAdmin {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required int64 GroupID = 1 [jstype = JS_STRING];
    required int64 UserID = 2 [jstype = JS_STRING];
    required bool IsAdmin = 3;
}

// UpdateGroupAdmins
message UpdateGroupAdmins {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required int64 GroupID = 1 [jstype = JS_STRING];
    required bool AdminEnabled = 2;
}

// UpdateGroupPhoto
message UpdateGroupPhoto {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required int64 GroupID = 1 [jstype = JS_STRING];
    optional GroupPhoto Photo = 2;
    optional int64 PhotoID = 3 [jstype = JS_STRING];
}

// UpdateReadMessagesContents
message UpdateReadMessagesContents {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    repeated int64 MessageIDs = 1;
    required Peer Peer = 2;
}

// UpdateAuthorizationReset
message UpdateAuthorizationReset {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
}

// UpdateDraftMessage
message UpdateDraftMessage {
    required int32 UCount = 100;
    optional int64 UpdateID = 101;
    required DraftMessage Message = 1;
}

// UpdateDraftMessageCleared
message UpdateDraftMessageCleared {
    required int32 UCount = 100;
    optional int64 UpdateID = 101;
    required Peer Peer = 1;
}

// UpdateDialogPinned
message UpdateDialogPinned {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required Peer Peer = 1;
    required bool Pinned = 2;
}

// UpdateDialogPinnedOrder
message UpdateDialogPinnedReorder {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    repeated Peer Peer = 1;
}

// UpdateAccountPrivacy
message UpdateAccountPrivacy {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    repeated PrivacyRule ChatInvite = 1;
    repeated PrivacyRule LastSeen = 2;
    repeated PrivacyRule PhoneNumber = 3;
    repeated PrivacyRule ProfilePhoto = 4;
    repeated PrivacyRule ForwardedMessage = 5;
    repeated PrivacyRule Call = 6;
}

// UpdateLabelItemAdded
message UpdateLabelItemsAdded {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required Peer Peer = 1;
    repeated int64 MessageIDs = 3;
    repeated int32 LabelIDs = 4;
    repeated Label Labels = 5;
}

// UpdateLabelItemsRemoved
message UpdateLabelItemsRemoved {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    required Peer Peer = 1;
    repeated int64 MessageIDs = 3;
    repeated int32 LabelIDs = 4;
    repeated Label Labels = 5;
}

// UpdateLabelSet
message UpdateLabelSet {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    repeated Label Labels = 1;
}

// UpdateLabelDeleted
message UpdateLabelDeleted {
    required int32 UCount = 100;
    required int64 UpdateID = 101;
    repeated int32 LabelIDs = 1;
}