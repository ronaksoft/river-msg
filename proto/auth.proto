syntax = "proto3";
package msg;
import "core.types.proto";
option go_package = '.;msg';

// InitConnect
// @Function
// @Return: InitResponse
message InitConnect {
    fixed64 ClientNonce = 1;
}

// InitCompleteAuth
// @Function
// @Return: InitAuthCompleted
message InitCompleteAuth {
    fixed64 ClientNonce = 1;
    fixed64 ServerNonce = 2;
    bytes ClientDHPubKey = 5;
    fixed64 P = 6;
    fixed64 Q = 7;
    bytes EncryptedPayload = 8;
}

// InitConnectTest
// @Function
// @Return: InitTestAuth
message InitConnectTest {
}

// /////////////////
// This part will be used by EDGE-PLAIN server only.
// ///////

// InitBindUser
// @Function
// @Return: InitUserBound
message InitBindUser {
    string AuthKey = 1;
    string Username = 2;
    string Phone = 3;
    string FirstName = 4;
    string LastName = 5;
}

// AuthRegister
// @Function
// @Return: AuthAuthorization
message AuthRegister {
    string Phone = 1;
    string FirstName = 2;
    string LastName = 3;
    string PhoneCode = 4;
    string PhoneCodeHash = 5;
    string LangCode = 6;
}

// AuthBotRegister
// @Function
// @Return: AuthBotAuthorization
message AuthBotRegister {
    string Name = 1;
    string Username = 2;
    int64 OwnerID = 3;
}

// AuthLogin
// @Function
// @Return: AuthAuthorization
message AuthLogin {
    string Phone = 1;
    string PhoneCodeHash = 2;
    string PhoneCode = 3;
}

// AuthCheckPassword
// @Function
// @Return: AuthAuthorization
message AuthCheckPassword {
    InputPassword Password = 1;
}

// AuthRecoverPassword
// @Function
// @Returns AuthAuthorization
message AuthRecoverPassword {
    string Code = 1;
}

// AuthLogout
// @Function
// @Return: Bool
message AuthLogout {
    repeated int64 AuthIDs = 1 [jstype = JS_STRING];
}

// AuthLoginByToken
// @Function
// @Return: AuthAuthorization
message AuthLoginByToken {
    string Token = 1;
    string Provider = 2;
}

// AuthCheckPhone
// @Function
// @Return: AuthCheckedPhone
message AuthCheckPhone {
    string Phone = 1;
}

// AuthSendCode
// @Function
// @Return: AuthSentCode
message AuthSendCode {
    string Phone = 1;
    string AppHash = 2;
}

// AuthResendCode
// @Function
// @Return: Bool
message AuthResendCode {
    string Phone = 1;
    string PhoneCodeHash = 2;
    string AppHash = 3;
}

// AuthRecall
// @Function
// @Return: AuthRecalled
message AuthRecall {
    int64 ClientID = 1 [jstype = JS_STRING];
    uint32 Version = 2;
    string AppVersion = 3;
    string Platform = 4;
    string Vendor = 5;
    string OSVersion = 6;
}

// AuthDestroyKey
// @Function
// @Return: Bool
message AuthDestroyKey {
}

// InitTestAuth
message InitTestAuth {
    int64 AuthID = 1;
    bytes AuthKey = 2;
}

// InitResponse
message InitResponse {
    fixed64 ClientNonce = 1;
    fixed64 ServerNonce = 2;
    fixed64 RSAPubKeyFingerPrint = 3;
    fixed64 DHGroupFingerPrint = 4;
    fixed64 PQ = 5;
    int64 ServerTimestamp = 6;
}

// InitCompleteAuthInternal
message InitCompleteAuthInternal {
    bytes SecretNonce = 1;
}

// InitAuthCompleted
message InitAuthCompleted {
    fixed64 ClientNonce = 1;
    fixed64 ServerNonce = 2;
    enum Statuses {
        OK = 0;
        FAIL = 1;
        RETRY = 2;
    }
    Statuses Status = 3;
    fixed64 SecretHash = 4;
    bytes ServerDHPubKey = 5;
}

// InitUserBound
message InitUserBound {
    int64 AuthID = 1;
}

// AuthPasswordRecovery
message AuthPasswordRecovery {
    string EmailPattern = 1;
}

// AuthRecalled
message AuthRecalled {
    int64  ClientID = 1 [jstype = JS_STRING];
    int64  Timestamp = 2;
    int64  UpdateID = 3;
    bool   Available = 4;
    bool   Force = 5;
    string CurrentVersion = 6;
}

// AuthAuthorization
message AuthAuthorization {
    fixed64 Expired = 1;
    User User = 2;
    uint32 ActiveSessions = 3;
}

// AuthBotAuthorization
message AuthBotAuthorization {
    int64 AuthID = 1;
    bytes AuthKey = 2;
    Bot Bot = 3;
}

// AuthCheckedPhone
message AuthCheckedPhone {
    bool Invited = 1;
    bool Registered = 2;
}

// AuthSentCode
message AuthSentCode {
    string Phone = 1;
    string PhoneCodeHash = 2;
    bool SendToPhone = 3;
}
