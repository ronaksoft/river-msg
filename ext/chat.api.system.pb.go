// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chat.api.system.proto

package msg

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// SystemGetPublicKeys
// @Function
// @Return: SystemPublicKeys
type SystemGetPublicKeys struct {
}

func (m *SystemGetPublicKeys) Reset()         { *m = SystemGetPublicKeys{} }
func (m *SystemGetPublicKeys) String() string { return proto.CompactTextString(m) }
func (*SystemGetPublicKeys) ProtoMessage()    {}
func (*SystemGetPublicKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{0}
}
func (m *SystemGetPublicKeys) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemGetPublicKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemGetPublicKeys.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemGetPublicKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemGetPublicKeys.Merge(m, src)
}
func (m *SystemGetPublicKeys) XXX_Size() int {
	return m.Size()
}
func (m *SystemGetPublicKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemGetPublicKeys.DiscardUnknown(m)
}

var xxx_messageInfo_SystemGetPublicKeys proto.InternalMessageInfo

// SystemGetDHGroups
// @Function
// @Return: SystemDHGroups
type SystemGetDHGroups struct {
}

func (m *SystemGetDHGroups) Reset()         { *m = SystemGetDHGroups{} }
func (m *SystemGetDHGroups) String() string { return proto.CompactTextString(m) }
func (*SystemGetDHGroups) ProtoMessage()    {}
func (*SystemGetDHGroups) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{1}
}
func (m *SystemGetDHGroups) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemGetDHGroups) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemGetDHGroups.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemGetDHGroups) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemGetDHGroups.Merge(m, src)
}
func (m *SystemGetDHGroups) XXX_Size() int {
	return m.Size()
}
func (m *SystemGetDHGroups) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemGetDHGroups.DiscardUnknown(m)
}

var xxx_messageInfo_SystemGetDHGroups proto.InternalMessageInfo

// SystemGetServerTime
// @Function
// @Returns: SystemServerTime
type SystemGetServerTime struct {
}

func (m *SystemGetServerTime) Reset()         { *m = SystemGetServerTime{} }
func (m *SystemGetServerTime) String() string { return proto.CompactTextString(m) }
func (*SystemGetServerTime) ProtoMessage()    {}
func (*SystemGetServerTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{2}
}
func (m *SystemGetServerTime) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemGetServerTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemGetServerTime.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemGetServerTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemGetServerTime.Merge(m, src)
}
func (m *SystemGetServerTime) XXX_Size() int {
	return m.Size()
}
func (m *SystemGetServerTime) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemGetServerTime.DiscardUnknown(m)
}

var xxx_messageInfo_SystemGetServerTime proto.InternalMessageInfo

// SystemGetAppUpdate
// @Function
// @Returns: AppUpdate
type SystemGetAppUpdate struct {
	ClientType string `protobuf:"bytes,1,req,name=ClientType" json:"ClientType"`
	Version    int32  `protobuf:"varint,2,req,name=Version" json:"Version"`
}

func (m *SystemGetAppUpdate) Reset()         { *m = SystemGetAppUpdate{} }
func (m *SystemGetAppUpdate) String() string { return proto.CompactTextString(m) }
func (*SystemGetAppUpdate) ProtoMessage()    {}
func (*SystemGetAppUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{3}
}
func (m *SystemGetAppUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemGetAppUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemGetAppUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemGetAppUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemGetAppUpdate.Merge(m, src)
}
func (m *SystemGetAppUpdate) XXX_Size() int {
	return m.Size()
}
func (m *SystemGetAppUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemGetAppUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_SystemGetAppUpdate proto.InternalMessageInfo

func (m *SystemGetAppUpdate) GetClientType() string {
	if m != nil {
		return m.ClientType
	}
	return ""
}

func (m *SystemGetAppUpdate) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

// SystemGetInfo
// @Function
// @Returns: SystemInfo
type SystemGetInfo struct {
}

func (m *SystemGetInfo) Reset()         { *m = SystemGetInfo{} }
func (m *SystemGetInfo) String() string { return proto.CompactTextString(m) }
func (*SystemGetInfo) ProtoMessage()    {}
func (*SystemGetInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{4}
}
func (m *SystemGetInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemGetInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemGetInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemGetInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemGetInfo.Merge(m, src)
}
func (m *SystemGetInfo) XXX_Size() int {
	return m.Size()
}
func (m *SystemGetInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemGetInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SystemGetInfo proto.InternalMessageInfo

// SystemGetSalts
// @Function
// @Returns: SystemSalts
type SystemGetSalts struct {
}

func (m *SystemGetSalts) Reset()         { *m = SystemGetSalts{} }
func (m *SystemGetSalts) String() string { return proto.CompactTextString(m) }
func (*SystemGetSalts) ProtoMessage()    {}
func (*SystemGetSalts) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{5}
}
func (m *SystemGetSalts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemGetSalts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemGetSalts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemGetSalts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemGetSalts.Merge(m, src)
}
func (m *SystemGetSalts) XXX_Size() int {
	return m.Size()
}
func (m *SystemGetSalts) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemGetSalts.DiscardUnknown(m)
}

var xxx_messageInfo_SystemGetSalts proto.InternalMessageInfo

// SystemSalts
type SystemSalts struct {
	Salts      []int64 `protobuf:"varint,1,rep,name=Salts" json:"Salts,omitempty"`
	StartsFrom int64   `protobuf:"varint,2,req,name=StartsFrom" json:"StartsFrom"`
	Duration   int64   `protobuf:"varint,3,req,name=Duration" json:"Duration"`
}

func (m *SystemSalts) Reset()         { *m = SystemSalts{} }
func (m *SystemSalts) String() string { return proto.CompactTextString(m) }
func (*SystemSalts) ProtoMessage()    {}
func (*SystemSalts) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{6}
}
func (m *SystemSalts) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemSalts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemSalts.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemSalts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemSalts.Merge(m, src)
}
func (m *SystemSalts) XXX_Size() int {
	return m.Size()
}
func (m *SystemSalts) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemSalts.DiscardUnknown(m)
}

var xxx_messageInfo_SystemSalts proto.InternalMessageInfo

func (m *SystemSalts) GetSalts() []int64 {
	if m != nil {
		return m.Salts
	}
	return nil
}

func (m *SystemSalts) GetStartsFrom() int64 {
	if m != nil {
		return m.StartsFrom
	}
	return 0
}

func (m *SystemSalts) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// AppUpdate
type AppUpdate struct {
	Available       bool   `protobuf:"varint,1,req,name=Available" json:"Available"`
	Mandatory       bool   `protobuf:"varint,2,req,name=Mandatory" json:"Mandatory"`
	Identifier      string `protobuf:"bytes,3,req,name=Identifier" json:"Identifier"`
	VersionName     string `protobuf:"bytes,4,req,name=VersionName" json:"VersionName"`
	DownloadUrl     string `protobuf:"bytes,5,req,name=DownloadUrl" json:"DownloadUrl"`
	Description     string `protobuf:"bytes,6,req,name=Description" json:"Description"`
	DisplayInterval int32  `protobuf:"varint,7,req,name=DisplayInterval" json:"DisplayInterval"`
}

func (m *AppUpdate) Reset()         { *m = AppUpdate{} }
func (m *AppUpdate) String() string { return proto.CompactTextString(m) }
func (*AppUpdate) ProtoMessage()    {}
func (*AppUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{7}
}
func (m *AppUpdate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AppUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AppUpdate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AppUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppUpdate.Merge(m, src)
}
func (m *AppUpdate) XXX_Size() int {
	return m.Size()
}
func (m *AppUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_AppUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_AppUpdate proto.InternalMessageInfo

func (m *AppUpdate) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *AppUpdate) GetMandatory() bool {
	if m != nil {
		return m.Mandatory
	}
	return false
}

func (m *AppUpdate) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *AppUpdate) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *AppUpdate) GetDownloadUrl() string {
	if m != nil {
		return m.DownloadUrl
	}
	return ""
}

func (m *AppUpdate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AppUpdate) GetDisplayInterval() int32 {
	if m != nil {
		return m.DisplayInterval
	}
	return 0
}

// SystemInfo
type SystemInfo struct {
	WorkGroupName string `protobuf:"bytes,1,req,name=WorkGroupName" json:"WorkGroupName"`
	BigPhotoUrl   string `protobuf:"bytes,2,req,name=BigPhotoUrl" json:"BigPhotoUrl"`
	SmallPhotoUrl string `protobuf:"bytes,3,req,name=SmallPhotoUrl" json:"SmallPhotoUrl"`
	StorageUrl    string `protobuf:"bytes,4,opt,name=StorageUrl" json:"StorageUrl"`
}

func (m *SystemInfo) Reset()         { *m = SystemInfo{} }
func (m *SystemInfo) String() string { return proto.CompactTextString(m) }
func (*SystemInfo) ProtoMessage()    {}
func (*SystemInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{8}
}
func (m *SystemInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemInfo.Merge(m, src)
}
func (m *SystemInfo) XXX_Size() int {
	return m.Size()
}
func (m *SystemInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SystemInfo proto.InternalMessageInfo

func (m *SystemInfo) GetWorkGroupName() string {
	if m != nil {
		return m.WorkGroupName
	}
	return ""
}

func (m *SystemInfo) GetBigPhotoUrl() string {
	if m != nil {
		return m.BigPhotoUrl
	}
	return ""
}

func (m *SystemInfo) GetSmallPhotoUrl() string {
	if m != nil {
		return m.SmallPhotoUrl
	}
	return ""
}

func (m *SystemInfo) GetStorageUrl() string {
	if m != nil {
		return m.StorageUrl
	}
	return ""
}

// SystemServerTime
type SystemServerTime struct {
	Timestamp int64 `protobuf:"varint,1,req,name=Timestamp" json:"Timestamp"`
}

func (m *SystemServerTime) Reset()         { *m = SystemServerTime{} }
func (m *SystemServerTime) String() string { return proto.CompactTextString(m) }
func (*SystemServerTime) ProtoMessage()    {}
func (*SystemServerTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{9}
}
func (m *SystemServerTime) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemServerTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemServerTime.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemServerTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemServerTime.Merge(m, src)
}
func (m *SystemServerTime) XXX_Size() int {
	return m.Size()
}
func (m *SystemServerTime) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemServerTime.DiscardUnknown(m)
}

var xxx_messageInfo_SystemServerTime proto.InternalMessageInfo

func (m *SystemServerTime) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// SystemPublicKeys
type SystemPublicKeys struct {
	RSAPublicKeys []*RSAPublicKey `protobuf:"bytes,1,rep,name=RSAPublicKeys" json:"RSAPublicKeys,omitempty"`
}

func (m *SystemPublicKeys) Reset()         { *m = SystemPublicKeys{} }
func (m *SystemPublicKeys) String() string { return proto.CompactTextString(m) }
func (*SystemPublicKeys) ProtoMessage()    {}
func (*SystemPublicKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{10}
}
func (m *SystemPublicKeys) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemPublicKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemPublicKeys.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemPublicKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemPublicKeys.Merge(m, src)
}
func (m *SystemPublicKeys) XXX_Size() int {
	return m.Size()
}
func (m *SystemPublicKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemPublicKeys.DiscardUnknown(m)
}

var xxx_messageInfo_SystemPublicKeys proto.InternalMessageInfo

func (m *SystemPublicKeys) GetRSAPublicKeys() []*RSAPublicKey {
	if m != nil {
		return m.RSAPublicKeys
	}
	return nil
}

// SystemDHGroups
type SystemDHGroups struct {
	DHGroups []*DHGroup `protobuf:"bytes,1,rep,name=DHGroups" json:"DHGroups,omitempty"`
}

func (m *SystemDHGroups) Reset()         { *m = SystemDHGroups{} }
func (m *SystemDHGroups) String() string { return proto.CompactTextString(m) }
func (*SystemDHGroups) ProtoMessage()    {}
func (*SystemDHGroups) Descriptor() ([]byte, []int) {
	return fileDescriptor_c566bdbff65da108, []int{11}
}
func (m *SystemDHGroups) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SystemDHGroups) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SystemDHGroups.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SystemDHGroups) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SystemDHGroups.Merge(m, src)
}
func (m *SystemDHGroups) XXX_Size() int {
	return m.Size()
}
func (m *SystemDHGroups) XXX_DiscardUnknown() {
	xxx_messageInfo_SystemDHGroups.DiscardUnknown(m)
}

var xxx_messageInfo_SystemDHGroups proto.InternalMessageInfo

func (m *SystemDHGroups) GetDHGroups() []*DHGroup {
	if m != nil {
		return m.DHGroups
	}
	return nil
}

func init() {
	proto.RegisterType((*SystemGetPublicKeys)(nil), "msg.SystemGetPublicKeys")
	proto.RegisterType((*SystemGetDHGroups)(nil), "msg.SystemGetDHGroups")
	proto.RegisterType((*SystemGetServerTime)(nil), "msg.SystemGetServerTime")
	proto.RegisterType((*SystemGetAppUpdate)(nil), "msg.SystemGetAppUpdate")
	proto.RegisterType((*SystemGetInfo)(nil), "msg.SystemGetInfo")
	proto.RegisterType((*SystemGetSalts)(nil), "msg.SystemGetSalts")
	proto.RegisterType((*SystemSalts)(nil), "msg.SystemSalts")
	proto.RegisterType((*AppUpdate)(nil), "msg.AppUpdate")
	proto.RegisterType((*SystemInfo)(nil), "msg.SystemInfo")
	proto.RegisterType((*SystemServerTime)(nil), "msg.SystemServerTime")
	proto.RegisterType((*SystemPublicKeys)(nil), "msg.SystemPublicKeys")
	proto.RegisterType((*SystemDHGroups)(nil), "msg.SystemDHGroups")
}

func init() { proto.RegisterFile("chat.api.system.proto", fileDescriptor_c566bdbff65da108) }

var fileDescriptor_c566bdbff65da108 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x53, 0x4d, 0x6e, 0x13, 0x31,
	0x18, 0xcd, 0x24, 0x2d, 0x4d, 0xbe, 0x10, 0xda, 0x4e, 0xa9, 0x34, 0x62, 0x31, 0x44, 0x16, 0x42,
	0x11, 0x8b, 0x59, 0xb0, 0x00, 0x89, 0x5d, 0x42, 0x44, 0x89, 0x2a, 0x50, 0x95, 0xb4, 0x20, 0xb1,
	0x73, 0x13, 0x37, 0xb5, 0xea, 0x19, 0x5b, 0xb6, 0x13, 0x34, 0xb7, 0xe0, 0x0a, 0x5c, 0x81, 0x53,
	0x74, 0xd9, 0x25, 0x2b, 0x84, 0x92, 0x8b, 0x20, 0x7b, 0x7e, 0xec, 0xb0, 0x9a, 0xf1, 0x7b, 0xcf,
	0x9f, 0x9f, 0xbf, 0xef, 0x19, 0x4e, 0xe7, 0xb7, 0x58, 0x27, 0x58, 0xd0, 0x44, 0xe5, 0x4a, 0x93,
	0x34, 0x11, 0x92, 0x6b, 0x1e, 0xb6, 0x52, 0xb5, 0x7c, 0x56, 0x70, 0x73, 0x2e, 0x49, 0xa2, 0x73,
	0x41, 0x54, 0xc1, 0xa1, 0x53, 0x38, 0x99, 0x59, 0xed, 0x19, 0xd1, 0x17, 0xab, 0x6b, 0x46, 0xe7,
	0xe7, 0x24, 0x57, 0xe8, 0x04, 0x8e, 0x6b, 0x78, 0xfc, 0xf1, 0x4c, 0xf2, 0x95, 0x50, 0x3b, 0xda,
	0x19, 0x91, 0x6b, 0x22, 0x2f, 0x69, 0x4a, 0xd0, 0x37, 0x08, 0x6b, 0x78, 0x28, 0xc4, 0x95, 0x58,
	0x60, 0x4d, 0xc2, 0x17, 0x00, 0xef, 0x19, 0x25, 0x99, 0xbe, 0xcc, 0x05, 0x89, 0x82, 0x7e, 0x73,
	0xd0, 0x19, 0xed, 0xdd, 0xff, 0x79, 0xde, 0x98, 0x7a, 0x78, 0x18, 0xc3, 0xc1, 0x17, 0x22, 0x15,
	0xe5, 0x59, 0xd4, 0xec, 0x37, 0x07, 0xfb, 0xa5, 0xa4, 0x02, 0xd1, 0x21, 0xf4, 0xea, 0xda, 0x93,
	0xec, 0x86, 0xa3, 0x23, 0x78, 0xe2, 0x3c, 0x60, 0xa6, 0x15, 0xba, 0x83, 0x6e, 0x81, 0xd8, 0x65,
	0xf8, 0x14, 0xf6, 0xed, 0x4f, 0x14, 0xf4, 0x5b, 0x83, 0xd6, 0xb4, 0x58, 0x18, 0x37, 0x33, 0x8d,
	0xa5, 0x56, 0x1f, 0x24, 0x4f, 0xed, 0x51, 0xad, 0xca, 0x8d, 0xc3, 0xc3, 0x3e, 0xb4, 0xc7, 0x2b,
	0x89, 0xb5, 0xb1, 0xd3, 0xf2, 0x34, 0x35, 0x8a, 0x7e, 0x36, 0xa1, 0xe3, 0xee, 0x88, 0xa0, 0x33,
	0x5c, 0x63, 0xca, 0xf0, 0x35, 0x2b, 0xae, 0xd8, 0x2e, 0x37, 0x38, 0xd8, 0x68, 0x3e, 0xe1, 0x6c,
	0x81, 0x35, 0x97, 0xb9, 0x3d, 0xb8, 0xd6, 0xd4, 0xb0, 0x71, 0x37, 0x59, 0x90, 0x4c, 0xd3, 0x1b,
	0x4a, 0xa4, 0x3d, 0xb9, 0xee, 0x95, 0xc3, 0xc3, 0x97, 0xd0, 0x2d, 0xdb, 0xf2, 0x19, 0xa7, 0x24,
	0xda, 0xf3, 0x64, 0x3e, 0x61, 0x74, 0x63, 0xfe, 0x3d, 0x63, 0x1c, 0x2f, 0xae, 0x24, 0x8b, 0xf6,
	0x7d, 0x9d, 0x47, 0x58, 0x1d, 0x51, 0x73, 0x49, 0x85, 0xbd, 0xf0, 0xa3, 0x1d, 0x9d, 0x23, 0xc2,
	0x04, 0x0e, 0xc7, 0x54, 0x09, 0x86, 0xf3, 0x49, 0xa6, 0x89, 0x5c, 0x63, 0x16, 0x1d, 0x78, 0xb3,
	0xfa, 0x9f, 0x44, 0xbf, 0x02, 0x80, 0x62, 0x22, 0x66, 0x62, 0xe1, 0x2b, 0xe8, 0x7d, 0xe5, 0xf2,
	0xce, 0x66, 0xc8, 0x1a, 0xf7, 0xb3, 0xb0, 0x4b, 0x19, 0x4b, 0x23, 0xba, 0xbc, 0xb8, 0xe5, 0x9a,
	0x1b, 0xeb, 0x4d, 0xdf, 0x92, 0x47, 0x98, 0x9a, 0xb3, 0x14, 0x33, 0x56, 0x2b, 0xfd, 0x9e, 0xed,
	0x52, 0xc5, 0xe8, 0xb9, 0xc4, 0x4b, 0x62, 0x84, 0x7b, 0xfd, 0xc0, 0x35, 0xd7, 0xe1, 0xe8, 0x0d,
	0x1c, 0x95, 0x29, 0xaa, 0x83, 0x6d, 0x46, 0x67, 0xbe, 0x4a, 0xe3, 0x54, 0x58, 0xd7, 0x55, 0x1e,
	0x1c, 0x8c, 0xce, 0xab, 0x7d, 0xee, 0xf1, 0x84, 0x6f, 0xa1, 0x37, 0x9d, 0x0d, 0x1d, 0x60, 0xa3,
	0xd8, 0x7d, 0x7d, 0x9c, 0xa4, 0x6a, 0x99, 0xf8, 0xcc, 0x74, 0x57, 0x87, 0xde, 0x55, 0xe1, 0xae,
	0x9e, 0x5c, 0x38, 0x80, 0x76, 0xf5, 0x5f, 0x56, 0x79, 0x6c, 0xab, 0x94, 0xe0, 0xb4, 0x66, 0x47,
	0xd1, 0xfd, 0x26, 0x0e, 0x1e, 0x36, 0x71, 0xf0, 0x77, 0x13, 0x07, 0x3f, 0xb6, 0x71, 0xe3, 0x61,
	0x1b, 0x37, 0x7e, 0x6f, 0xe3, 0xc6, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0xc7, 0xc4, 0x1f,
	0x16, 0x04, 0x00, 0x00,
}

func (m *SystemGetPublicKeys) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemGetPublicKeys) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *SystemGetDHGroups) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemGetDHGroups) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *SystemGetServerTime) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemGetServerTime) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *SystemGetAppUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemGetAppUpdate) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(len(m.ClientType)))
	i += copy(dAtA[i:], m.ClientType)
	dAtA[i] = 0x10
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(m.Version))
	return i, nil
}

func (m *SystemGetInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemGetInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *SystemGetSalts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemGetSalts) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	return i, nil
}

func (m *SystemSalts) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemSalts) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Salts) > 0 {
		for _, num := range m.Salts {
			dAtA[i] = 0x8
			i++
			i = encodeVarintChatApiSystem(dAtA, i, uint64(num))
		}
	}
	dAtA[i] = 0x10
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(m.StartsFrom))
	dAtA[i] = 0x18
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(m.Duration))
	return i, nil
}

func (m *AppUpdate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AppUpdate) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	if m.Available {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	dAtA[i] = 0x10
	i++
	if m.Mandatory {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	dAtA[i] = 0x1a
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(len(m.Identifier)))
	i += copy(dAtA[i:], m.Identifier)
	dAtA[i] = 0x22
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(len(m.VersionName)))
	i += copy(dAtA[i:], m.VersionName)
	dAtA[i] = 0x2a
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(len(m.DownloadUrl)))
	i += copy(dAtA[i:], m.DownloadUrl)
	dAtA[i] = 0x32
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(len(m.Description)))
	i += copy(dAtA[i:], m.Description)
	dAtA[i] = 0x38
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(m.DisplayInterval))
	return i, nil
}

func (m *SystemInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(len(m.WorkGroupName)))
	i += copy(dAtA[i:], m.WorkGroupName)
	dAtA[i] = 0x12
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(len(m.BigPhotoUrl)))
	i += copy(dAtA[i:], m.BigPhotoUrl)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(len(m.SmallPhotoUrl)))
	i += copy(dAtA[i:], m.SmallPhotoUrl)
	dAtA[i] = 0x22
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(len(m.StorageUrl)))
	i += copy(dAtA[i:], m.StorageUrl)
	return i, nil
}

func (m *SystemServerTime) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemServerTime) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintChatApiSystem(dAtA, i, uint64(m.Timestamp))
	return i, nil
}

func (m *SystemPublicKeys) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemPublicKeys) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.RSAPublicKeys) > 0 {
		for _, msg := range m.RSAPublicKeys {
			dAtA[i] = 0xa
			i++
			i = encodeVarintChatApiSystem(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func (m *SystemDHGroups) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SystemDHGroups) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.DHGroups) > 0 {
		for _, msg := range m.DHGroups {
			dAtA[i] = 0xa
			i++
			i = encodeVarintChatApiSystem(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	return i, nil
}

func encodeVarintChatApiSystem(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *SystemGetPublicKeys) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *SystemGetDHGroups) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *SystemGetServerTime) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *SystemGetAppUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClientType)
	n += 1 + l + sovChatApiSystem(uint64(l))
	n += 1 + sovChatApiSystem(uint64(m.Version))
	return n
}

func (m *SystemGetInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *SystemGetSalts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *SystemSalts) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Salts) > 0 {
		for _, e := range m.Salts {
			n += 1 + sovChatApiSystem(uint64(e))
		}
	}
	n += 1 + sovChatApiSystem(uint64(m.StartsFrom))
	n += 1 + sovChatApiSystem(uint64(m.Duration))
	return n
}

func (m *AppUpdate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 2
	n += 2
	l = len(m.Identifier)
	n += 1 + l + sovChatApiSystem(uint64(l))
	l = len(m.VersionName)
	n += 1 + l + sovChatApiSystem(uint64(l))
	l = len(m.DownloadUrl)
	n += 1 + l + sovChatApiSystem(uint64(l))
	l = len(m.Description)
	n += 1 + l + sovChatApiSystem(uint64(l))
	n += 1 + sovChatApiSystem(uint64(m.DisplayInterval))
	return n
}

func (m *SystemInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.WorkGroupName)
	n += 1 + l + sovChatApiSystem(uint64(l))
	l = len(m.BigPhotoUrl)
	n += 1 + l + sovChatApiSystem(uint64(l))
	l = len(m.SmallPhotoUrl)
	n += 1 + l + sovChatApiSystem(uint64(l))
	l = len(m.StorageUrl)
	n += 1 + l + sovChatApiSystem(uint64(l))
	return n
}

func (m *SystemServerTime) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovChatApiSystem(uint64(m.Timestamp))
	return n
}

func (m *SystemPublicKeys) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.RSAPublicKeys) > 0 {
		for _, e := range m.RSAPublicKeys {
			l = e.Size()
			n += 1 + l + sovChatApiSystem(uint64(l))
		}
	}
	return n
}

func (m *SystemDHGroups) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.DHGroups) > 0 {
		for _, e := range m.DHGroups {
			l = e.Size()
			n += 1 + l + sovChatApiSystem(uint64(l))
		}
	}
	return n
}

func sovChatApiSystem(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozChatApiSystem(x uint64) (n int) {
	return sovChatApiSystem(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SystemGetPublicKeys) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemGetPublicKeys: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemGetPublicKeys: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemGetDHGroups) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemGetDHGroups: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemGetDHGroups: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemGetServerTime) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemGetServerTime: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemGetServerTime: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemGetAppUpdate) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemGetAppUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemGetAppUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClientType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClientType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("ClientType")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Version")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemGetInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemGetInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemGetInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemGetSalts) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemGetSalts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemGetSalts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemSalts) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemSalts: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemSalts: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowChatApiSystem
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= (int64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.Salts = append(m.Salts, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowChatApiSystem
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= (int(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthChatApiSystem
				}
				postIndex := iNdEx + packedLen
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.Salts) == 0 {
					m.Salts = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowChatApiSystem
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= (int64(b) & 0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.Salts = append(m.Salts, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field Salts", wireType)
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartsFrom", wireType)
			}
			m.StartsFrom = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartsFrom |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("StartsFrom")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Duration")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AppUpdate) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AppUpdate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AppUpdate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Available", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Available = bool(v != 0)
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mandatory", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Mandatory = bool(v != 0)
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Identifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Identifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VersionName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DownloadUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DownloadUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayInterval", wireType)
			}
			m.DisplayInterval = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DisplayInterval |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000040)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Available")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Mandatory")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Identifier")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("VersionName")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("DownloadUrl")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Description")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("DisplayInterval")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WorkGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WorkGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BigPhotoUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BigPhotoUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SmallPhotoUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SmallPhotoUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StorageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StorageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("WorkGroupName")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("BigPhotoUrl")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("SmallPhotoUrl")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemServerTime) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemServerTime: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemServerTime: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("Timestamp")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemPublicKeys) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemPublicKeys: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemPublicKeys: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RSAPublicKeys", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RSAPublicKeys = append(m.RSAPublicKeys, &RSAPublicKey{})
			if err := m.RSAPublicKeys[len(m.RSAPublicKeys)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SystemDHGroups) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SystemDHGroups: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SystemDHGroups: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DHGroups", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DHGroups = append(m.DHGroups, &DHGroup{})
			if err := m.DHGroups[len(m.DHGroups)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipChatApiSystem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthChatApiSystem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipChatApiSystem(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowChatApiSystem
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowChatApiSystem
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthChatApiSystem
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowChatApiSystem
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipChatApiSystem(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthChatApiSystem = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowChatApiSystem   = fmt.Errorf("proto: integer overflow")
)
