syntax = "proto2";
package msg;
import "chat.core.types.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
option (gogoproto.goproto_enum_prefix_all) = false;

/*
    Creation Time: 2018 - Nov - 28
    Created by:  (ehsan)
    Maintainers:
       1.  Ehsan N. Moosa (E2)
    Auditor: Ehsan N. Moosa (E2)
    Copyright Ronak Software Group 2018
*/

// DocumentAttributeType
enum DocumentAttributeType {
    AttributeTypeNone = 0;
    AttributeTypeAudio = 1;
    AttributeTypeVideo = 2;
    AttributeTypePhoto = 3;
    AttributeTypeFile = 4;
    AttributeTypeAnimated = 5;
    AttributeReserved1 = 6;
    AttributeReserved2 = 7;
    AttributeReserved3 = 8;
    AttributeReserved4 = 9;
}

// DocumentAttributeAudio
message DocumentAttributeAudio {
    required bool Voice = 1;
    required uint32 Duration = 2;
    required string Title = 3;
    required string Performer = 4;
    required string Album = 5;
    optional bytes Waveform = 6;
}

// DocumentAttributeVideo
message DocumentAttributeVideo {
    required uint32 Width = 1;
    required uint32 Height = 2;
    required uint32 Duration = 3;
    required bool Round = 4;
}

// DocumentAttributePhoto
message DocumentAttributePhoto {
    required uint32 Width = 1;
    required uint32 Height = 2;
}

// DocumentAttributeFile
message DocumentAttributeFile {
    required string Filename = 1;
}

// DocumentAttributeAnimated
message DocumentAttributeAnimated {
}

// DocumentAttribute
message DocumentAttribute {
    required DocumentAttributeType Type = 1;
    optional bytes Data = 2;
}

// Document Type
enum DocumentType {
    DocumentTypeUnknown = 0;
    DocumentTypePhoto = 1;
    DocumentTypeVoice = 2;
    DocumentTypeVideo = 3;
    DocumentTypeWebPage = 4;
    DocumentTypeReserved1 = 5;
    DocumentTypeReserved2 = 6;
    DocumentTypeReserved3 = 7;
    DocumentTypeReserved4 = 8;
}

// Document
message Document {
    required int64 ID = 1 [jstype = JS_STRING];
    required fixed64 AccessHash = 2 [jstype = JS_STRING];
    required int64 Date = 3;
    required string MimeType = 4;
    required int32 FileSize = 5;
    required int32 Version = 6;
    required int32 ClusterID = 7;
    repeated DocumentAttribute Attributes = 8;
    optional FileLocation Thumbnail = 9;
    optional string MD5Checksum = 10;
}

// InputMediaInvoice
message InputMediaInvoice {

}

// MediaInvoice
message MediaInvoice {

}

// InputMediaWebDocument
message InputMediaWebDocument {
    required string Url = 1;
    required int32 DocSize = 2;
    required string MimeType = 3;
    repeated DocumentAttribute Attributes = 4;
}

// MediaWebDocument
message MediaWebDocument {
    required string Url = 1;
    required int32 DocSize = 2;
    required string MimeType = 3;
    repeated DocumentAttribute Attributes = 4;
    required fixed64 AccessHash = 5 [jstype = JS_STRING];
}

// MediaWebPage
message MediaWebPage {

}

// InputMediaContact
message InputMediaContact {
    required string Phone = 1;
    required string FirstName = 2;
    required string LastName = 3;
    optional string VCard = 4;
}

// MediaContact
message MediaContact {
    required string Phone = 1;
    required string FirstName = 2;
    required string LastName = 3;
    optional string VCard = 4;
}

// InputMediaUploadedDocument
message InputMediaUploadedDocument {
    required InputFile File = 1;
    optional InputFile Thumbnail = 2;
    required string MimeType = 3;
    required string Caption = 4;
    repeated InputDocument Stickers = 5;
    repeated DocumentAttribute Attributes = 6;
    repeated MessageEntity Entities = 7;
}

// InputMediaDocument
message InputMediaDocument {
    required string Caption = 1;
    required InputDocument Document = 2;
    repeated MessageEntity Entities = 3;
    optional InputFile Thumbnail = 4;
    repeated DocumentAttribute Attributes = 5;
}

// MediaDocument
message MediaDocument {
    required string Caption = 1;
    required int32 TTLinSeconds = 2; // Seconds
    required Document Doc = 3;
    repeated MessageEntity Entities = 4;
}

// InputMediaGeoLocation
message InputMediaGeoLocation {
    required float Lat = 1;
    required float Long = 2;
}

// MediaGeoLocation
message MediaGeoLocation {
    required float Lat = 1;
    required float Long = 2;
}

// InputMediaPoll
message InputMediaPoll {
    required MediaPoll Poll = 1;
}

// MediaPoll
message MediaPoll {
    required int64 ID = 1;
    optional bool Closed = 2;
    optional bool PublicVoters = 3;
    optional bool MultiChoice = 4;
    optional bool Quiz = 5;
    required string Question = 6;
    repeated PollAnswer Answers = 7;
}

// PollAnswer
message PollAnswer {
    required string Text = 1;
    required bytes Option = 2;
}

// PollResults
message PollResults {
    repeated PollAnswerVoters Results = 1;
    required int64 TotalVoters = 2;
}

// PollAnswerVoters
message PollAnswerVoters {
    required bool Chosen = 1; // Whether User has chosen this answer
    required bool Correct = 2; // For Quiz Polls
    required bytes Option = 3;
    required int64 Voters = 4; // Number of voters chosen this option

}

// InputMediaSealed
message InputMediaSealed {
    required InputMediaType MediaType = 1;
    optional bytes Media = 2;
    optional string Body = 3;
    repeated MessageEntity Entities = 4;
}

// MediaSealed
message MediaSealed {
    required MediaType MediaType = 1;
    optional bytes Media = 2;
    optional string Body = 3;
    repeated MessageEntity Entities = 4;
}
