syntax = "proto3";
package msg;

import "chat.phone.proto";
import "core.types.proto";

option go_package = './;msg';

// ClientCallToggleVideo
// @Function
// @Return: Bool
message ClientCallToggleVideo {
    bool Video = 1;
}

// ClientCallToggleAudio
// @Function
// @Return: Bool
message ClientCallToggleAudio {
    bool Audio = 1;
}

// ClientCallTryReconnect
// @Function
// @Return: Bool
message ClientCallTryReconnect {
    int32 ConnId = 1;
}

// ClientCallDestroy
// @Function
// @Return: Bool
message ClientCallDestroy {
    int64 CallID = 1;
}

// ClientCallAreAllAudio
// @Function
// @Return: Bool
message ClientCallAreAllAudio {
}

// ClientCallSendIceCandidate
// @Function
// @Return: Bool
message ClientCallSendIceCandidate {
    int32 ConnId = 1;
    CallRTCIceCandidate Candidate = 2;
}

// ClientCallSendIceConnectionStatus
// @Function
// @Return: Bool
message ClientCallSendIceConnectionStatus {
    int32 ConnId = 1;
    string State = 2;
    bool HasIceError = 3;
    string IceError = 4;
}

// ClientCallSendTrack
// @Function
// @Return: Bool
message ClientCallSendTrack {
    int32 ConnId = 1;
    string StreamID = 2;
}

// ClientCallSendIceConnectionStatus
// @Function
// @Return: Bool
message ClientCallSendMediaSettings {
    CallMediaSettings MediaSettings = 1;
}

// ClientCallStart
// @Function
// @Return: ClientCallStarted
message ClientCallStart {
    InputPeer Peer = 1;
    repeated InputUser InputUsers = 2;
    bool Video = 3;
    int64 CallID = 4;
}

// ClientCallStarted
message ClientCallStarted {
    int64 CallID = 1;
}

// ClientCallJoin
// @Function
// @Return: Bool
message ClientCallJoin {
    InputPeer Peer = 1;
    int64 CallID = 2;
}

// ClientCallAccept
// @Function
// @Return: Bool
message ClientCallAccept {
    int64 CallID = 1;
    bool Video = 2;
}

// ClientCallReject
// @Function
// @Return: Bool
message ClientCallReject {
    int64 CallID = 1;
    int32 Duration = 2;
    DiscardReason Reason = 3;
    InputPeer TargetPeer = 4;
}

// ClientCallGetParticipantByUserID
// @Function
// @Return: CallParticipant
message ClientCallGetParticipantByUserID {
    int64 CallID = 1;
    int64 UserID = 2;
}

// ClientCallGetParticipantByConnId
// @Function
// @Return: CallParticipant
message ClientCallGetParticipantByConnId {
    int32 ConnId = 1;
}

// ClientCallGetParticipantList
// @Function
// @Return: CallParticipants
message ClientCallGetParticipantList {
    int64 CallID = 1;
    bool ExcludeCurrent = 2;
}

// ClientCallMuteParticipant
// @Function
// @Return: Bool
message ClientCallMuteParticipant {
    int64 UserID = 1;
    bool Muted = 2;
}

// ClientCallGroupAddParticipant
// @Function
// @Return: Bool
message ClientCallGroupAddParticipant {
    int64 CallID = 1;
    repeated InputUser Participants = 2;
}

// ClientCallGroupRemoveParticipant
// @Function
// @Return: Bool
message ClientCallGroupRemoveParticipant {
    int64 CallID = 1;
    repeated int64 UserIDs = 2;
    bool Timeout = 3;
}

// ClientCallGroupUpdateAdmin
// @Function
// @Return: Bool
message ClientCallGroupUpdateAdmin {
    int64 CallID = 1;
    int64 UserID = 2;
    bool Admin = 3;
}

// CallMediaSettings
message CallMediaSettings {
    bool Audio = 1;
    bool ScreenShare = 2;
    bool Video = 3;
}

// CallParticipant
message CallParticipant {
    PhoneParticipant PhoneParticipant = 1;
    CallDeviceType DeviceType = 2;
    CallMediaSettings MediaSettings = 3;
    bool Muted = 4;
    bool Started = 5;
}

// CallParticipants
message CallParticipants {
    repeated CallParticipant CallParticipants = 1;
}

// CallRTCIceCandidate
message CallRTCIceCandidate {
    string Candidate = 1;
    int64 SdpMLineIndex = 2;
    string SdpMid = 3;
    string UsernameFragment = 4;
}

// CallConnection
message CallConnection {
    int32 ConnId = 1;
    bool Accepted = 2;
    int64 RTCPeerConnectionID = 3;
    string IceConnectionState = 4;
    repeated CallRTCIceCandidate IceQueue = 5;
    repeated IceServer IceServers = 6;
    bool Init = 7;
    int32 Try = 8;
    bool Reconnecting = 9;
    int32 ReconnectingTry = 10;
    int64 ScreenShareStreamID = 11;
    string StreamID = 12;
    int64 IntervalID = 13;
}

// CallUpdate
enum CallUpdate {
    CallEmpty = 0;
    CallRequested = 1;
    CallAccepted = 2;
    StreamUpdated = 3;
    CallRejected = 4;
    MediaSettingsUpdated = 5;
    LocalStreamUpdated = 6;
    CallTimeout = 7;
    CallAck = 8;
    ParticipantJoined = 9;
    ParticipantLeft = 10;
    ParticipantAdded = 11;
    ParticipantRemoved = 12;
    CallPreview = 13;
    CallCancelled = 14;
    CallJoinRequested = 15;
    ParticipantAdminUpdated = 16;
    ShareScreenStreamUpdated = 17;
    AllConnected = 18;
    ConnectionStatusChanged = 19;
    ParticipantMuted = 20;
    CallDestroyed = 21;
    LocalMediaSettingsUpdated = 22;
    Destroyed = 23;
    CallUpdateReserved5 = 24;
    CallUpdateReserved6 = 25;
    CallUpdateReserved7 = 26;
    CallUpdateReserved8 = 27;
    CallUpdateReserved9 = 28;
}

// CallUpdateCallRequested
message CallUpdateCallRequested {
    InputPeer Peer = 1;
    int64 CallID = 2 [jstype = JS_STRING];
}

// CallUpdateCallAccepted
message CallUpdateCallAccepted {
    int32 ConnectionID = 1;
}

// CallUpdateStreamUpdated
message CallUpdateStreamUpdated {
    int32 ConnectionID = 1;
    string StreamID = 2;
}

// CallUpdateCallRejected
message CallUpdateCallRejected {
    int64 CallID = 1 [jstype = JS_STRING];
    DiscardReason Reason = 2;
}

// CallUpdateMediaSettingsUpdated
message CallUpdateMediaSettingsUpdated {
    int32 ConnectionID = 1;
    CallMediaSettings MediaSettings = 2;
}

// CallUpdateLocalStreamUpdated
message CallUpdateLocalStreamUpdated {
    string StreamID = 1;
}

// CallUpdateCallTimeout
message CallUpdateCallTimeout {
}

// CallUpdateCallAck
message CallUpdateCallAck {
    int32 ConnectionID = 1;
}

// CallUpdateParticipantJoined
message CallUpdateParticipantJoined {
    repeated int64 UserIDs = 1 [jstype = JS_STRING];
}

// CallUpdateParticipantLeft
message CallUpdateParticipantLeft {
    int64 UserID = 1 [jstype = JS_STRING];
}

// CallUpdateParticipantRemoved
message CallUpdateParticipantRemoved {
    repeated int64 UserIDs = 1 [jstype = JS_STRING];
    bool Timeout = 2;
}

// CallUpdateCallPreview
message CallUpdateCallPreview {
    int64 CallID = 1 [jstype = JS_STRING];
    InputPeer Peer = 2;
}

// CallUpdateCallCancelled
message CallUpdateCallCancelled {
    int64 CallID = 1 [jstype = JS_STRING];
}

// CallUpdateCallJoinRequested
message CallUpdateCallJoinRequested {
    int64 CallID = 1 [jstype = JS_STRING];
    int64 CalleeID = 2 [jstype = JS_STRING];
    InputPeer Peer = 3;
}

// CallUpdateParticipantAdminUpdated
message CallUpdateParticipantAdminUpdated {
    int64 UserID = 1 [jstype = JS_STRING];
    bool Admin = 2;
}

// CallUpdateShareScreenStreamUpdated
message CallUpdateShareScreenStreamUpdated {
    int64 CallID = 1 [jstype = JS_STRING];
    int32 ConnectionID = 2;
    string StreamID = 3;
}

// CallUpdateAllConnected
message CallUpdateAllConnected {
}

// CallUpdateConnectionStatusChanged
message CallUpdateConnectionStatusChanged {
    int32 ConnectionID = 1;
    string State = 2;
}

// CallUpdateParticipantMuted
message CallUpdateParticipantMuted {
    int32 ConnectionID = 1;
    bool Muted = 2;
    int64 UserID = 3 [jstype = JS_STRING];
}

// CallUpdateCallDestroyed
message CallUpdateCallDestroyed {
    int64 CallID = 1 [jstype = JS_STRING];
}

// CallUpdateLocalMediaSettingsUpdated
message CallUpdateLocalMediaSettingsUpdated {
    CallMediaSettings MediaSettings = 1;
}

// CallUpdateDestroyed
message CallUpdateDestroyed {
}